<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蒋家威的博客</title>
  
  
  <link href="https://github.com/jiangjiawei520/atom.xml" rel="self"/>
  
  <link href="https://github.com/jiangjiawei520/"/>
  <updated>2025-09-17T02:01:02.279Z</updated>
  <id>https://github.com/jiangjiawei520/</id>
  
  <author>
    <name>JiaWei Jiang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Linux安装配置Tomcat并部署web应用的三种方式</title>
    <link href="https://github.com/jiangjiawei520/post/eed9a1f6.html"/>
    <id>https://github.com/jiangjiawei520/post/eed9a1f6.html</id>
    <published>2025-09-17T09:43:40.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<p>系统版本：centos7.3版本 java版本：1.8</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1、java -version 检查是否有java环境，没有则需要去安装并配置到环境变量中。</p><p>2、下载tomcat包，下载地址：<a href="http://tomcat.apache.org/download-90.cgi">http://tomcat.apache.org/download-90.cgi</a></p><p>可以本地下载后上传到<a href="https://cloud.tencent.com/product/cvm?from_column=20065&from=20065">服务器</a>上，也可以直接在服务器上使用wget命令下载，本案例直接使用wget命令下载 ：</p><blockquote><p> [root@localhost~]# wget <a href="http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.11/bin/apache-tomcat-9.0.11.tar.gz">http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.11/bin/apache-tomcat-9.0.11.tar.gz</a></p></blockquote><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><p>1、新建tomcat存放的目录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /usr/local/tomcat</span><br></pre></td></tr></table></figure><p>2、拷贝下载好的 apache-tomcat-9.0.11.tar.gz 到 tomcat目录下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cp apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>.<span class="property">tar</span>.<span class="property">gz</span> /usr/local/tomcat/</span><br></pre></td></tr></table></figure><p>3、进入tomcat目录，并解压apache-tomcat-9.0.11.tar.gz</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /usr/local/tomcat/</span><br><span class="line"></span><br><span class="line">[root@localhost tomcat]# tar -zxvf apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>.<span class="property">tar</span>.<span class="property">gz</span></span><br></pre></td></tr></table></figure><p>4、进入解压的tomcat包的bin目录，并启动tomcat</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tomcat]# cd /usr/local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>/bin/</span><br><span class="line"></span><br><span class="line">[root@localhost bin]# ./catalina.<span class="property">sh</span> start</span><br><span class="line"></span><br><span class="line">或：[root@localhost bin]# ./startup.<span class="property">sh</span></span><br></pre></td></tr></table></figure><p>​    注: .&#x2F;catalina.sh start 和 .&#x2F;startup.sh 都能启动tomcat。使用 .&#x2F;catalina.sh stop 或 .&#x2F;shutdown.sh 停止tomcat。</p><p>5、浏览器访问并解决防火墙问题。</p><p>在浏览器使用ip进行访问（端口默认：8080），<a href="http://192.168.0.8:8080，可以看到tomcat的管理界面。">http://192.168.0.8:8080，可以看到tomcat的管理界面。</a></p><p>192.168.0.8 为服务器的ip地址，如果访问不了，有可能是服务器防火墙问题，8080端口被拦截了，于是需要打开8080端口，并保存重启防火墙：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# iptables  -I  <span class="variable constant_">INPUT</span>  -p  tcp  --dport  <span class="number">8080</span>  -j  <span class="variable constant_">ACCEPT</span>  </span><br><span class="line"></span><br><span class="line">[root@localhost bin]# /etc/init.<span class="property">d</span>/iptables  save</span><br><span class="line"></span><br><span class="line">[root@localhost bin]# /etc/init.<span class="property">d</span>/iptables  restart</span><br></pre></td></tr></table></figure><p>在server.xml配置中可以修改访问端口，&lt;Connector port&#x3D;”8080” 修改成80端口，浏览器上就可以直接通过<a href="http://192.168.0.111/">http://192.168.0.111</a> 进行访问。</p><p>6、配置 tomcat 帐号密码权限（登陆使用Web管理界面）</p><p>修改tomcat下的配置文件 tomcat-users.xml</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /usr/local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>/conf/tomcat-users.<span class="property">xml</span></span><br></pre></td></tr></table></figure><p>在前添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;role rolename=<span class="string">&quot;tomcat&quot;</span>/&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-script&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;admin-script&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;tomcat&quot;</span> <span class="attr">password</span>=<span class="string">&quot;tomcat&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;tomcat,manager-gui,admin-gui,admin-script,manager-script&quot;</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><p>注：username 和 password 则是登陆tomcat管理界面需要的账号密码。</p><p>:wq 保存退出，重启tomcat</p><p>浏览器访问：<a href="http://192.168.0.8:8080/">http://192.168.0.8:8080</a></p><p>可以通过 Manager App 管理已部署的项目。</p><p>点击进入 Manager App 需要账号密码，上面有设置。</p><h2 id="三、Tomcat配置服务和自启动"><a href="#三、Tomcat配置服务和自启动" class="headerlink" title="三、Tomcat配置服务和自启动"></a>三、Tomcat配置服务和自启动</h2><p>1、Tomcat配置服务</p><p>新建服务脚本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/init.<span class="property">d</span>/tomcat</span><br></pre></td></tr></table></figure><p>添加脚本内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>bash</span><br><span class="line"># <span class="attr">description</span>: <span class="title class_">Tomcat7</span> <span class="title class_">Start</span> <span class="title class_">Stop</span> <span class="title class_">Restart</span></span><br><span class="line"># <span class="attr">processname</span>: tomcat7</span><br><span class="line"># <span class="attr">chkconfig</span>: <span class="number">234</span> <span class="number">20</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">CATALINA_HOME</span>=<span class="regexp">/usr/</span>local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $1 <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">                sh $CATALINA_HOME/bin/startup.<span class="property">sh</span></span><br><span class="line">                ;;</span><br><span class="line">        stop)</span><br><span class="line">                sh $CATALINA_HOME/bin/shutdown.<span class="property">sh</span></span><br><span class="line">                ;;</span><br><span class="line">        restart)</span><br><span class="line">                sh $CATALINA_HOME/bin/shutdown.<span class="property">sh</span></span><br><span class="line">                sh $CATALINA_HOME/bin/startup.<span class="property">sh</span></span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">                echo <span class="string">&#x27;please use : tomcat &#123;start | stop | restart&#125;&#x27;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">exit <span class="number">0</span></span><br></pre></td></tr></table></figure><p>:wq 保存脚本。</p><p>执行脚本，启动、停止 和 重启服务。</p><p>启动：service tomcat start</p><p>停止：service tomcat stop</p><p>重启：service tomcat restart</p><p>2、Tomcat配置开机自启动</p><p>向chkconfig添加 tomcat 服务的管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# chkconfig --add tomcat</span><br></pre></td></tr></table></figure><p>设置tomcat服务自启动</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# chkconfig tomcat on</span><br></pre></td></tr></table></figure><p>查看tomcat的启动状态</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# chkconfig --list | grep tomcat</span><br></pre></td></tr></table></figure><p>状态如下：</p><p>[root@localhost ~]# chkconfig –list | grep tomcat</p><p>tomcat      0:off 1:off 2:on 3:on 4:on 5:on 6:off</p><p>关闭tomcat服务自启动：chkconfig tomcat off</p><p>删除tomcat服务在chkconfig上的管理：chkconfig –del tomcat</p><h2 id="四、部署web项目（三种方式）"><a href="#四、部署web项目（三种方式）" class="headerlink" title="四、部署web项目（三种方式）"></a>四、部署web项目（三种方式）</h2><p>1、第一种方式 : 部署项目到webapps（不推荐）</p><p>进入tomcat下的webapps目录，并新建一个目录为web项目的主目录。</p><p>代码语言：javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /usr/local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>/webapps</span><br><span class="line"></span><br><span class="line">[root@localhost webapps]# mkdir sam</span><br><span class="line"></span><br><span class="line">[root@localhost webapps]# ls</span><br><span class="line">docs  examples  host-manager  manager  <span class="variable constant_">ROOT</span>  sam</span><br></pre></td></tr></table></figure><p>sam 目录为项目的目录，现在把web项目打包出来的war拷贝并解压到sam目录下。</p><p>这里我直接用最简答的 index.html 来代替web项目war包作测试。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost sam]# ls</span><br><span class="line">index.<span class="property">html</span></span><br></pre></td></tr></table></figure><p>浏览器访问：<a href="http://192.168.0.8:8080/sam/index.html">http://192.168.0.8:8080/sam/index.html</a> 既可访问到sam目录下的index.html</p><p>这种方式不被推荐，项目不好管理，而且需要链接加上项目名才能正常访问。</p><p>2、第二种方式：修改server.xml文件，配置<a href="https://cloud.tencent.com/product/lighthouse?from_column=20065&from=20065">虚拟主机</a></p><p>修改tomcat conf下的server.xml配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# vim server.<span class="property">xml</span> </span><br></pre></td></tr></table></figure><p>在Engine节点内添加 Host节点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Host</span> name=<span class="string">&quot;www.sam.com&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             <span class="attr">prefix</span>=<span class="string">&quot;www.sam.com_access_log.&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t &quot;</span>%<span class="attr">r</span>&quot; %<span class="attr">s</span> %<span class="attr">b</span>&quot; /&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/sam/site/com.sam.www&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">Host</span>&gt;</span><br></pre></td></tr></table></figure><p>name&#x3D;”<a href="http://www.sam.com"：指访问的[域名](https://cloud.tencent.com/product/domain?from_column=20065&from=20065)，所以需要你先拥有">www.sam.com&quot;：指访问的[域名](https://cloud.tencent.com/product/domain?from_column=20065&amp;from=20065)，所以需要你先拥有</a> sam.com 这个域名，并把 <a href="http://www.sam.com/">www.sam.com</a> 映射到当前服务器上才能正常访问，本地测试可以通过修改本机host文件来做映射测试。</p><p>浏览器访问：<a href="http://www.sam.com:8080/">http://www.sam.com:8080</a> 能访问到 &#x2F;home&#x2F;sam&#x2F;site&#x2F;com.sam.www 下的项目。</p><p>注：<a href="http://www.sam.com为我个人域名，你需要自行注册域名，并做相应的ip映射。如果仅是本地测试，可以修改本机的host文件，添加记录：192.168.0.8">www.sam.com为我个人域名，你需要自行注册域名，并做相应的ip映射。如果仅是本地测试，可以修改本机的host文件，添加记录：192.168.0.8</a> <a href="http://www.sam.com/">www.sam.com</a> ，将web.sam.com的访问映射到192.168.0.8这台服务器中。</p><p>3、第三种方式：修改server.xml和Catalina，配置虚拟主机。</p><p>这种方式，我用 web.sam.com 这个项目为例。</p><p>修改tomcat conf下的server.xml配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# vim server.<span class="property">xml</span> </span><br></pre></td></tr></table></figure><p>在Engine节点内添加 简单的Host节点，:wq 保存退出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Host</span> name=<span class="string">&quot;web.sam.com&quot;</span>&gt;&lt;/<span class="title class_">Host</span>&gt;</span><br></pre></td></tr></table></figure><p>进入tomcat conf下的Catalina目录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# cd /usr/local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>/conf/<span class="title class_">Catalina</span></span><br></pre></td></tr></table></figure><p>新建目录 web.sam.com （与server.xml中配置的host名称一样）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost <span class="title class_">Catalina</span>]# mkdir web.<span class="property">sam</span>.<span class="property">com</span></span><br></pre></td></tr></table></figure><p>进入web.sam.com目录并新建ROOT.xml文件，添加相应的配置内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost <span class="title class_">Catalina</span>]# cd web.<span class="property">sam</span>.<span class="property">com</span>/</span><br><span class="line">[root@localhost web.<span class="property">sam</span>.<span class="property">com</span>]# vim <span class="variable constant_">ROOT</span>.<span class="property">xml</span></span><br></pre></td></tr></table></figure><p>ROOT.xml 文件添加以下内容:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/sam/site/com.sam.web&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">directory</span>=<span class="string">&quot;logs/com.sam.web&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">prefix</span>=<span class="string">&quot;web.sam.com_localhost_access_log.&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">resolveHosts</span>=<span class="string">&quot;true&quot;</span>    </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t &quot;</span>%<span class="attr">r</span>&quot; %<span class="attr">s</span> %<span class="attr">b</span>&quot; /&gt;</span></span></span><br><span class="line"><span class="language-xml">         </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p> :wq保存退出。</p><p>同样，新建项目目录 &#x2F;home&#x2F;sam&#x2F;site&#x2F;com.sam.web ，并把war包解压到该目录下，重启tomcat。</p><p>浏览器访问：<a href="http://web.sam.com:8080，此时就会访问到web.sam.com这个项目的内容，而不是">http://web.sam.com:8080，此时就会访问到web.sam.com这个项目的内容，而不是</a> <a href="http://www.sam.com的内容./">www.sam.com的内容。</a></p><p>当然，需要在sam.com域名管理中添加 web.sam.com域名映射，或者本地测试需要修改本机host文件，添加记录 ：192.168.0.8 web.sam.com ，将web.sam.com的访问映射到192.168.0.8这台服务器中。</p><h2 id="五、配置静态资源访问，配置目录位置的网络映射"><a href="#五、配置静态资源访问，配置目录位置的网络映射" class="headerlink" title="五、配置静态资源访问，配置目录位置的网络映射"></a>五、配置静态资源访问，配置目录位置的网络映射</h2><p>配置后，可以直接访问到本地资源文件，而不需要访问到具体项目。</p><p>1、针对第二种部署方式的配置（以 <a href="http://www.sam.com/">www.sam.com</a> 项目为例）</p><p>修改tomcat conf下的server.xml配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# vim server.<span class="property">xml</span> </span><br></pre></td></tr></table></figure><p>在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Host</span> name=<span class="string">&quot;www.sam.com&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                       <span class="attr">prefix</span>=<span class="string">&quot;www.sam.com_access_log.&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                       <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t &quot;</span>%<span class="attr">r</span>&quot; %<span class="attr">s</span> %<span class="attr">b</span>&quot; /&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/sam/site/com.sam.www&quot;</span> /&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;/upload&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/sam/share/upload&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">Host</span>&gt;</span><br></pre></td></tr></table></figure><p>在 &#x2F;home&#x2F;sam&#x2F;share&#x2F;upload 存放共享资源 a.jpg</p><p>浏览器访问：<a href="http://www.sam.com:8080/upload/a.jpg">http://www.sam.com:8080/upload/a.jpg</a> ，即可获取到该资源。</p><p>说明：</p><p>以上配置后，会把<a href="http://www.sam.com域名下的所有/">www.sam.com域名下的所有</a> <a href="http://www.sam.com:8080/upload">http://www.sam.com:8080/upload</a> 请求拦截，并直接从&#x2F;home&#x2F;sam&#x2F;share&#x2F;upload 共享目录下寻求对应的资源文件。</p><p>如访问：<a href="http://www.sam.com:8080/upload/a/b.txt">http://www.sam.com:8080/upload/a/b.txt</a> , 该请求直接从&#x2F;home&#x2F;sam&#x2F;share&#x2F;upload目录下寻找a目录，并寻找a目录下的b.txt，然后直接把该资源返回。</p><p>于是我们只要把共享资源存放在配置的共享目录中，就能通过域名直接访问相应的资源。</p><p>2、针对第三种部署方式的配置（以 web.sam.com 项目为例）</p><p>修改Catalina目录下对应的项目目录里面的内容。</p><p>进入Catalina 下的 web.sam.com 目录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# cd /usr/local/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.11</span>/conf/<span class="title class_">Catalina</span>/web.<span class="property">sam</span>.<span class="property">com</span></span><br></pre></td></tr></table></figure><p>新建文件 upload.xml</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost web.<span class="property">sam</span>.<span class="property">com</span>]# vim upload.<span class="property">xml</span></span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;/upload&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/sam/share/upload&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">directory</span>=<span class="string">&quot;logs/com.sam.web_upload&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prefix</span>=<span class="string">&quot;web.sam.com_upload_localhost_access_log.&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">resolveHosts</span>=<span class="string">&quot;true&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t &quot;</span>%<span class="attr">r</span>&quot; %<span class="attr">s</span> %<span class="attr">b</span>&quot; /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>:wq 保存推出，重启tomcat。</p><p>在 &#x2F;home&#x2F;sam&#x2F;share&#x2F;upload 存放共享资源 a.jpg</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;系统版本：centos7.3版本 java版本：1.8&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;1、java -version 检查是否有java环境，没有则需要去安装并配置到环境变量中。&lt;/p&gt;
&lt;p&gt;2、下载tomcat包，下载地址：&lt;a href=&quot;http://tomcat.apache.org/download-90.cgi&quot;&gt;http://tomcat.apache.org/download-90.cgi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以本地下载后上传到&lt;a href=&quot;https://cloud.tencent.com/product/cvm?from_column=20065&amp;from=20065&quot;&gt;服务器&lt;/a&gt;上，也可以直接在服务器上使用wget命令下载，本案例直接使用wget命令下载 ：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; [root@localhost~]# wget &lt;a href=&quot;http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.11/bin/apache-tomcat-9.0.11.tar.gz&quot;&gt;http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.11/bin/apache-tomcat-9.0.11.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装Tomcat&quot;&gt;&lt;a href=&quot;#安装Tomcat&quot; class=&quot;headerlink&quot; title=&quot;安装Tomcat&quot;&gt;&lt;/a&gt;安装Tomcat&lt;/h2&gt;&lt;p&gt;1、新建tomcat存放的目录&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# mkdir /usr/local/tomcat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2、拷贝下载好的 apache-tomcat-9.0.11.tar.gz 到 tomcat目录下&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# cp apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;tar&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;gz&lt;/span&gt; /usr/local/tomcat/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;3、进入tomcat目录，并解压apache-tomcat-9.0.11.tar.gz&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# cd /usr/local/tomcat/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost tomcat]# tar -zxvf apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;tar&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;4、进入解压的tomcat包的bin目录，并启动tomcat&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost tomcat]# cd /usr/local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;/bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost bin]# ./catalina.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt; start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或：[root@localhost bin]# ./startup.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​    注: .&amp;#x2F;catalina.sh start 和 .&amp;#x2F;startup.sh 都能启动tomcat。使用 .&amp;#x2F;catalina.sh stop 或 .&amp;#x2F;shutdown.sh 停止tomcat。&lt;/p&gt;
&lt;p&gt;5、浏览器访问并解决防火墙问题。&lt;/p&gt;
&lt;p&gt;在浏览器使用ip进行访问（端口默认：8080），&lt;a href=&quot;http://192.168.0.8:8080，可以看到tomcat的管理界面。&quot;&gt;http://192.168.0.8:8080，可以看到tomcat的管理界面。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;192.168.0.8 为服务器的ip地址，如果访问不了，有可能是服务器防火墙问题，8080端口被拦截了，于是需要打开8080端口，并保存重启防火墙：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost bin]# iptables  -I  &lt;span class=&quot;variable constant_&quot;&gt;INPUT&lt;/span&gt;  -p  tcp  --dport  &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;  -j  &lt;span class=&quot;variable constant_&quot;&gt;ACCEPT&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost bin]# /etc/init.&lt;span class=&quot;property&quot;&gt;d&lt;/span&gt;/iptables  save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost bin]# /etc/init.&lt;span class=&quot;property&quot;&gt;d&lt;/span&gt;/iptables  restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在server.xml配置中可以修改访问端口，&amp;lt;Connector port&amp;#x3D;”8080” 修改成80端口，浏览器上就可以直接通过&lt;a href=&quot;http://192.168.0.111/&quot;&gt;http://192.168.0.111&lt;/a&gt; 进行访问。&lt;/p&gt;
&lt;p&gt;6、配置 tomcat 帐号密码权限（登陆使用Web管理界面）&lt;/p&gt;
&lt;p&gt;修改tomcat下的配置文件 tomcat-users.xml&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# vim /usr/local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;/conf/tomcat-users.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在前添加以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;role rolename=&lt;span class=&quot;string&quot;&gt;&amp;quot;tomcat&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rolename&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;manager-gui&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rolename&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;admin-gui&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rolename&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;manager-script&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rolename&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;admin-script&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;username&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;tomcat&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;password&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;tomcat&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;roles&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;tomcat,manager-gui,admin-gui,admin-script,manager-script&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注：username 和 password 则是登陆tomcat管理界面需要的账号密码。&lt;/p&gt;
&lt;p&gt;:wq 保存退出，重启tomcat&lt;/p&gt;
&lt;p&gt;浏览器访问：&lt;a href=&quot;http://192.168.0.8:8080/&quot;&gt;http://192.168.0.8:8080&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以通过 Manager App 管理已部署的项目。&lt;/p&gt;
&lt;p&gt;点击进入 Manager App 需要账号密码，上面有设置。&lt;/p&gt;
&lt;h2 id=&quot;三、Tomcat配置服务和自启动&quot;&gt;&lt;a href=&quot;#三、Tomcat配置服务和自启动&quot; class=&quot;headerlink&quot; title=&quot;三、Tomcat配置服务和自启动&quot;&gt;&lt;/a&gt;三、Tomcat配置服务和自启动&lt;/h2&gt;&lt;p&gt;1、Tomcat配置服务&lt;/p&gt;
&lt;p&gt;新建服务脚本：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# vim /etc/init.&lt;span class=&quot;property&quot;&gt;d&lt;/span&gt;/tomcat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;添加脚本内容：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!&lt;span class=&quot;regexp&quot;&gt;/bin/&lt;/span&gt;bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;title class_&quot;&gt;Tomcat7&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Start&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Stop&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Restart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;attr&quot;&gt;processname&lt;/span&gt;: tomcat7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;attr&quot;&gt;chkconfig&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;234&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable constant_&quot;&gt;CATALINA_HOME&lt;/span&gt;=&lt;span class=&quot;regexp&quot;&gt;/usr/&lt;/span&gt;local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; $1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sh $CATALINA_HOME/bin/startup.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sh $CATALINA_HOME/bin/shutdown.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        restart)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sh $CATALINA_HOME/bin/shutdown.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sh $CATALINA_HOME/bin/startup.&lt;span class=&quot;property&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                echo &lt;span class=&quot;string&quot;&gt;&amp;#x27;please use : tomcat &amp;#123;start | stop | restart&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exit &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;:wq 保存脚本。&lt;/p&gt;
&lt;p&gt;执行脚本，启动、停止 和 重启服务。&lt;/p&gt;
&lt;p&gt;启动：service tomcat start&lt;/p&gt;
&lt;p&gt;停止：service tomcat stop&lt;/p&gt;
&lt;p&gt;重启：service tomcat restart&lt;/p&gt;
&lt;p&gt;2、Tomcat配置开机自启动&lt;/p&gt;
&lt;p&gt;向chkconfig添加 tomcat 服务的管理&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# chkconfig --add tomcat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;设置tomcat服务自启动&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# chkconfig tomcat on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;查看tomcat的启动状态&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# chkconfig --list | grep tomcat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;状态如下：&lt;/p&gt;
&lt;p&gt;[root@localhost ~]# chkconfig –list | grep tomcat&lt;/p&gt;
&lt;p&gt;tomcat      0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;/p&gt;
&lt;p&gt;关闭tomcat服务自启动：chkconfig tomcat off&lt;/p&gt;
&lt;p&gt;删除tomcat服务在chkconfig上的管理：chkconfig –del tomcat&lt;/p&gt;
&lt;h2 id=&quot;四、部署web项目（三种方式）&quot;&gt;&lt;a href=&quot;#四、部署web项目（三种方式）&quot; class=&quot;headerlink&quot; title=&quot;四、部署web项目（三种方式）&quot;&gt;&lt;/a&gt;四、部署web项目（三种方式）&lt;/h2&gt;&lt;p&gt;1、第一种方式 : 部署项目到webapps（不推荐）&lt;/p&gt;
&lt;p&gt;进入tomcat下的webapps目录，并新建一个目录为web项目的主目录。&lt;/p&gt;
&lt;p&gt;代码语言：javascript&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# cd /usr/local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;/webapps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost webapps]# mkdir sam&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost webapps]# ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docs  examples  host-manager  manager  &lt;span class=&quot;variable constant_&quot;&gt;ROOT&lt;/span&gt;  sam&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;sam 目录为项目的目录，现在把web项目打包出来的war拷贝并解压到sam目录下。&lt;/p&gt;
&lt;p&gt;这里我直接用最简答的 index.html 来代替web项目war包作测试。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost sam]# ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index.&lt;span class=&quot;property&quot;&gt;html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;浏览器访问：&lt;a href=&quot;http://192.168.0.8:8080/sam/index.html&quot;&gt;http://192.168.0.8:8080/sam/index.html&lt;/a&gt; 既可访问到sam目录下的index.html&lt;/p&gt;
&lt;p&gt;这种方式不被推荐，项目不好管理，而且需要链接加上项目名才能正常访问。&lt;/p&gt;
&lt;p&gt;2、第二种方式：修改server.xml文件，配置&lt;a href=&quot;https://cloud.tencent.com/product/lighthouse?from_column=20065&amp;from=20065&quot;&gt;虚拟主机&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改tomcat conf下的server.xml配置&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost conf]# vim server.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在Engine节点内添加 Host节点&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&amp;quot;www.sam.com&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Valve&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;org.apache.catalina.valves.AccessLogValve&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;directory&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;logs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;             &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;www.sam.com_access_log.&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;suffix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;.txt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;             &lt;span class=&quot;attr&quot;&gt;pattern&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;%h %l %u %t &amp;quot;&lt;/span&gt;%&lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;&amp;quot; %&lt;span class=&quot;attr&quot;&gt;s&lt;/span&gt; %&lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/home/sam/site/com.sam.www&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;name&amp;#x3D;”&lt;a href=&quot;http://www.sam.com&quot;：指访问的[域名](https://cloud.tencent.com/product/domain?from_column=20065&amp;from=20065)，所以需要你先拥有&quot;&gt;www.sam.com&amp;quot;：指访问的[域名](https://cloud.tencent.com/product/domain?from_column=20065&amp;amp;from=20065)，所以需要你先拥有&lt;/a&gt; sam.com 这个域名，并把 &lt;a href=&quot;http://www.sam.com/&quot;&gt;www.sam.com&lt;/a&gt; 映射到当前服务器上才能正常访问，本地测试可以通过修改本机host文件来做映射测试。&lt;/p&gt;
&lt;p&gt;浏览器访问：&lt;a href=&quot;http://www.sam.com:8080/&quot;&gt;http://www.sam.com:8080&lt;/a&gt; 能访问到 &amp;#x2F;home&amp;#x2F;sam&amp;#x2F;site&amp;#x2F;com.sam.www 下的项目。&lt;/p&gt;
&lt;p&gt;注：&lt;a href=&quot;http://www.sam.com为我个人域名，你需要自行注册域名，并做相应的ip映射。如果仅是本地测试，可以修改本机的host文件，添加记录：192.168.0.8&quot;&gt;www.sam.com为我个人域名，你需要自行注册域名，并做相应的ip映射。如果仅是本地测试，可以修改本机的host文件，添加记录：192.168.0.8&lt;/a&gt; &lt;a href=&quot;http://www.sam.com/&quot;&gt;www.sam.com&lt;/a&gt; ，将web.sam.com的访问映射到192.168.0.8这台服务器中。&lt;/p&gt;
&lt;p&gt;3、第三种方式：修改server.xml和Catalina，配置虚拟主机。&lt;/p&gt;
&lt;p&gt;这种方式，我用 web.sam.com 这个项目为例。&lt;/p&gt;
&lt;p&gt;修改tomcat conf下的server.xml配置&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost conf]# vim server.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在Engine节点内添加 简单的Host节点，:wq 保存退出&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&amp;quot;web.sam.com&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;进入tomcat conf下的Catalina目录&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost conf]# cd /usr/local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;/conf/&lt;span class=&quot;title class_&quot;&gt;Catalina&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;新建目录 web.sam.com （与server.xml中配置的host名称一样）&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost &lt;span class=&quot;title class_&quot;&gt;Catalina&lt;/span&gt;]# mkdir web.&lt;span class=&quot;property&quot;&gt;sam&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;进入web.sam.com目录并新建ROOT.xml文件，添加相应的配置内容。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost &lt;span class=&quot;title class_&quot;&gt;Catalina&lt;/span&gt;]# cd web.&lt;span class=&quot;property&quot;&gt;sam&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;com&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost web.&lt;span class=&quot;property&quot;&gt;sam&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;com&lt;/span&gt;]# vim &lt;span class=&quot;variable constant_&quot;&gt;ROOT&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ROOT.xml 文件添加以下内容:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/home/sam/site/com.sam.web&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Valve&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;org.apache.catalina.valves.AccessLogValve&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;directory&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;logs/com.sam.web&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;web.sam.com_localhost_access_log.&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;suffix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;.txt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;resolveHosts&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;pattern&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;%h %l %u %t &amp;quot;&lt;/span&gt;%&lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;&amp;quot; %&lt;span class=&quot;attr&quot;&gt;s&lt;/span&gt; %&lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;         &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; :wq保存退出。&lt;/p&gt;
&lt;p&gt;同样，新建项目目录 &amp;#x2F;home&amp;#x2F;sam&amp;#x2F;site&amp;#x2F;com.sam.web ，并把war包解压到该目录下，重启tomcat。&lt;/p&gt;
&lt;p&gt;浏览器访问：&lt;a href=&quot;http://web.sam.com:8080，此时就会访问到web.sam.com这个项目的内容，而不是&quot;&gt;http://web.sam.com:8080，此时就会访问到web.sam.com这个项目的内容，而不是&lt;/a&gt; &lt;a href=&quot;http://www.sam.com的内容./&quot;&gt;www.sam.com的内容。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然，需要在sam.com域名管理中添加 web.sam.com域名映射，或者本地测试需要修改本机host文件，添加记录 ：192.168.0.8 web.sam.com ，将web.sam.com的访问映射到192.168.0.8这台服务器中。&lt;/p&gt;
&lt;h2 id=&quot;五、配置静态资源访问，配置目录位置的网络映射&quot;&gt;&lt;a href=&quot;#五、配置静态资源访问，配置目录位置的网络映射&quot; class=&quot;headerlink&quot; title=&quot;五、配置静态资源访问，配置目录位置的网络映射&quot;&gt;&lt;/a&gt;五、配置静态资源访问，配置目录位置的网络映射&lt;/h2&gt;&lt;p&gt;配置后，可以直接访问到本地资源文件，而不需要访问到具体项目。&lt;/p&gt;
&lt;p&gt;1、针对第二种部署方式的配置（以 &lt;a href=&quot;http://www.sam.com/&quot;&gt;www.sam.com&lt;/a&gt; 项目为例）&lt;/p&gt;
&lt;p&gt;修改tomcat conf下的server.xml配置&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost conf]# vim server.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&amp;quot;www.sam.com&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Valve&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;org.apache.catalina.valves.AccessLogValve&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;directory&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;logs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                       &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;www.sam.com_access_log.&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;suffix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;.txt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;                       &lt;span class=&quot;attr&quot;&gt;pattern&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;%h %l %u %t &amp;quot;&lt;/span&gt;%&lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;&amp;quot; %&lt;span class=&quot;attr&quot;&gt;s&lt;/span&gt; %&lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/home/sam/site/com.sam.www&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/upload&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/home/sam/share/upload&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;title class_&quot;&gt;Host&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 &amp;#x2F;home&amp;#x2F;sam&amp;#x2F;share&amp;#x2F;upload 存放共享资源 a.jpg&lt;/p&gt;
&lt;p&gt;浏览器访问：&lt;a href=&quot;http://www.sam.com:8080/upload/a.jpg&quot;&gt;http://www.sam.com:8080/upload/a.jpg&lt;/a&gt; ，即可获取到该资源。&lt;/p&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;以上配置后，会把&lt;a href=&quot;http://www.sam.com域名下的所有/&quot;&gt;www.sam.com域名下的所有&lt;/a&gt; &lt;a href=&quot;http://www.sam.com:8080/upload&quot;&gt;http://www.sam.com:8080/upload&lt;/a&gt; 请求拦截，并直接从&amp;#x2F;home&amp;#x2F;sam&amp;#x2F;share&amp;#x2F;upload 共享目录下寻求对应的资源文件。&lt;/p&gt;
&lt;p&gt;如访问：&lt;a href=&quot;http://www.sam.com:8080/upload/a/b.txt&quot;&gt;http://www.sam.com:8080/upload/a/b.txt&lt;/a&gt; , 该请求直接从&amp;#x2F;home&amp;#x2F;sam&amp;#x2F;share&amp;#x2F;upload目录下寻找a目录，并寻找a目录下的b.txt，然后直接把该资源返回。&lt;/p&gt;
&lt;p&gt;于是我们只要把共享资源存放在配置的共享目录中，就能通过域名直接访问相应的资源。&lt;/p&gt;
&lt;p&gt;2、针对第三种部署方式的配置（以 web.sam.com 项目为例）&lt;/p&gt;
&lt;p&gt;修改Catalina目录下对应的项目目录里面的内容。&lt;/p&gt;
&lt;p&gt;进入Catalina 下的 web.sam.com 目录&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost conf]# cd /usr/local/tomcat/apache-tomcat-&lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.11&lt;/span&gt;/conf/&lt;span class=&quot;title class_&quot;&gt;Catalina&lt;/span&gt;/web.&lt;span class=&quot;property&quot;&gt;sam&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;新建文件 upload.xml&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost web.&lt;span class=&quot;property&quot;&gt;sam&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;com&lt;/span&gt;]# vim upload.&lt;span class=&quot;property&quot;&gt;xml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;添加内容：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/upload&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;/home/sam/share/upload&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Valve&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;org.apache.catalina.valves.AccessLogValve&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;directory&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;logs/com.sam.web_upload&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;web.sam.com_upload_localhost_access_log.&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;suffix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;.txt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;resolveHosts&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;pattern&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;%h %l %u %t &amp;quot;&lt;/span&gt;%&lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;&amp;quot; %&lt;span class=&quot;attr&quot;&gt;s&lt;/span&gt; %&lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;:wq 保存推出，重启tomcat。&lt;/p&gt;
&lt;p&gt;在 &amp;#x2F;home&amp;#x2F;sam&amp;#x2F;share&amp;#x2F;upload 存放共享资源 a.jpg&lt;/p&gt;</summary>
    
    
    
    <category term="tomcat" scheme="https://github.com/jiangjiawei520/categories/tomcat/"/>
    
    
    <category term="centos" scheme="https://github.com/jiangjiawei520/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>mysql之my.cnf配置文件详解</title>
    <link href="https://github.com/jiangjiawei520/post/19407785.html"/>
    <id>https://github.com/jiangjiawei520/post/19407785.html</id>
    <published>2025-09-17T09:31:24.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="my-cnf配置文件详解"><a href="#my-cnf配置文件详解" class="headerlink" title="my.cnf配置文件详解"></a>my.cnf配置文件详解</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br></pre></td><td class="code"><pre><span class="line">#以下选项会被MySQL客户端应用读取。注意只有MySQL附带的客户端应用程序保证可以读取这段内容。如果你想你自己的MySQL应用程序获取这些值。需要在MySQL客户端库初始化的时候指定这些选项。</span><br><span class="line">[client]</span><br><span class="line">port = 3309</span><br><span class="line">socket =  /usr/local/mysql/tmp/mysql.sock</span><br><span class="line">[mysqld] #服务器端配置</span><br><span class="line">!include  /usr/local/mysql/etc/mysqld.cnf  #包含的配置文件，可以把用户名和密码文件单独存放</span><br><span class="line">port = 3306　　#监听端口　　</span><br><span class="line">bind-address = 0.0.0.0　　#监听的ip地址</span><br><span class="line">server-id = 1　　#MySQL服务的ID</span><br><span class="line">socket =  /usr/local/mysql/tmp/mysql.sock　　#socket通信设置</span><br><span class="line">pid-file =  /usr/local/mysql/var/mysql.pid　 #pid文件路径</span><br><span class="line">basedir =  /usr/local/mysql/　　　　　　　　　　#MySQL程序路径</span><br><span class="line">datadir =  /usr/local/mysql/data　　　　　　　 #数据目录</span><br><span class="line">tmpdir =  /usr/local/mysql/tmp/ </span><br><span class="line">#此目录被 MySQL用来保存临时文件.例如,它被用来处理基于磁盘的大型排序,和内部排序一样，以及简单的临时表.如果你不创建非常大的临时文件,将其放置到 swapfs/tmpfs 文件系统上也许比较好。另一种选择是你也可以将其放置在独立的磁盘上.你可以使用”;”来放置多个路径，他们会按照 roud-robin 方法被轮询使用.</span><br><span class="line"></span><br><span class="line">slave-load-tmpdir =  /usr/local/mysql/tmp/  #当slave执行load data infile时使用</span><br><span class="line">#*** skip options 相关选项 ***#</span><br><span class="line">skip-name-resolve </span><br><span class="line">#禁止 MySQL 对外部连接进行 DNS 解析，使用这一选项可以消除 MySQL 进行 DNS 解析的时间。但需要注意，如果开启该选项，则所有远程主机连接授权都要使用 IP 地址方式，否则 MySQL 将无法正常处理连接请求！</span><br><span class="line">skip-symbolic-links </span><br><span class="line">#不能使用连接文件，多个客户可能会访问同一个数据库，因此这防止外部客户锁定 MySQL 服务器。 该选项默认开启</span><br><span class="line"></span><br><span class="line">skip-external-locking </span><br><span class="line">#不使用系统锁定，要使用 myisamchk,必须关闭服务器 ,避免 MySQL的外部锁定，减少出错几率增强稳定性。</span><br><span class="line"></span><br><span class="line">skip-slave-start </span><br><span class="line">#启动 mysql,不启动复制</span><br><span class="line"></span><br><span class="line">skip-networking </span><br><span class="line">#开启该选项可以彻底关闭 MySQL 的 TCP/IP 连接方式，如果 WEB 服务器是以远程连接的方式访问 MySQL 数据库服务器则不要开启该选项！否则将无法正常连接！ 如果所有的进程都是在同一台服务器连接到本地的 mysqld, 这样设置将是增强安全的方法</span><br><span class="line"></span><br><span class="line">sysdate-is-now = 1 </span><br><span class="line">#把SYSDATE 函数编程为 NOW的别名</span><br><span class="line"></span><br><span class="line">#*** 系统资源相关选项 ***#</span><br><span class="line">back_log = 50 </span><br><span class="line">#接受队列，对于没建立 tcp 连接的请求队列放入缓存中，队列大小为 back_log，受限制与 OS 参数，试图设定 back_log 高于你的操作系统的限制将是无效的。默认值为 50。对于 Linux 系统推荐设置为小于512的整数。如果系统在一个短时间内有很多连接，则需要增大该参数的值</span><br><span class="line"></span><br><span class="line">max_connections = 1000 </span><br><span class="line">#指定MySQL允许的最大连接进程数。如果在访问数据库时经常出现&quot;Too Many Connections&quot;的错误提 示，则需要增大该参数值。</span><br><span class="line"></span><br><span class="line">max_connect_errors = 10000 </span><br><span class="line">#如果某个用户发起的连接 error 超过该数值，则该用户的下次连接将被阻塞，直到管理员执行 flush hosts ; 命令或者服务重启， 防止黑客 ， 非法的密码以及其他在链接时的错误会增加此值</span><br><span class="line"></span><br><span class="line">open_files_limit = 10240 </span><br><span class="line">#MySQL打开的文件描述符限制，默认最小1024;当open_files_limit没有被配置的时候，比较max_connections*5和ulimit-n的值，哪个大用哪个，当open_file_limit被配置的时候，比较open_files_limit和max_connections*5的值，哪个大用哪个。</span><br><span class="line"></span><br><span class="line">connect-timeout = 10 </span><br><span class="line">#连接超时之前的最大秒数,在 Linux 平台上，该超时也用作等待服务器首次回应的时间</span><br><span class="line"></span><br><span class="line">wait-timeout = 28800 </span><br><span class="line">#等待关闭连接的时间</span><br><span class="line"></span><br><span class="line">interactive-timeout = 28800 </span><br><span class="line">#关闭连接之前，允许 interactive_timeout（取代了wait_timeout）秒的不活动时间。客户端的会话 wait_timeout 变量被设为会话interactive_timeout 变量的值。如果前端程序采用短连接，建议缩短这2个值, 如果前端程序采用长连接，可直接注释掉这两个选项，默认配置(8小时)  </span><br><span class="line"></span><br><span class="line">slave-net-timeout = 600 </span><br><span class="line">#从服务器也能够处理网络连接中断。但是，只有从服务器超过slave_net_timeout 秒没有从主服务器收到数据才通知网络中断</span><br><span class="line"></span><br><span class="line">net_read_timeout = 30 </span><br><span class="line">#从服务器读取信息的超时</span><br><span class="line"></span><br><span class="line">net_write_timeout = 60 </span><br><span class="line">#从服务器写入信息的超时</span><br><span class="line"></span><br><span class="line">net_retry_count = 10 </span><br><span class="line">#如果某个通信端口的读操作中断了，在放弃前重试多次</span><br><span class="line"></span><br><span class="line">net_buffer_length = 16384 </span><br><span class="line">#包消息缓冲区初始化为 net_buffer_length 字节，但需要时可以增长到 max_allowed_packet 字节</span><br><span class="line"></span><br><span class="line">max_allowed_packet = 64M</span><br><span class="line"># 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小(当与大的BLOB 字段一起工作时相当必要)， 每个连接独立的大小.大小动态增加。 设置最大包,限制server接受的数据包大小，避免超长SQL的执行有问题 默认值为16M，当MySQL客户端或mysqld</span><br><span class="line">服务器收到大于 max_allowed_packet 字节的信息包时，将发出“信息包过大”错误，并关闭连接。对于某些客户端，如果通信信息包过大，在执行查询期间，可能会遇到“丢失与 MySQL 服务器的连接”错误。默认值 16M。</span><br><span class="line"></span><br><span class="line">table_cache = 512 </span><br><span class="line"># 所有线程所打开表的数量. 增加此值就增加了mysqld所需要的文件描述符的数量这样你需要确认在[mysqld_safe]中 “open-files-limit” 变量设置打开文件数量允许至少4096</span><br><span class="line"></span><br><span class="line">thread_stack = 192K </span><br><span class="line"># 线程使用的堆大小. 此容量的内存在每次连接时被预留.MySQL 本身常不会需要超过 64K 的内存如果你使用你自己的需要大量堆的 UDF 函数或者你的操作系统对于某些操作需要更多的堆,你也许需要将其设置的更高一点.默认设置足以满足大多数应用</span><br><span class="line"></span><br><span class="line">thread_cache_size = 20 </span><br><span class="line"># 我们在 cache 中保留多少线程用于重用.当一个客户端断开连接后,如果 cache 中的线程还少于 thread_cache_size,则客户端线程被放入 cache 中.这可以在你需要大量新连接的时候极大的减少线程创建的开销(一般来说如果你有好的线程模型的话,</span><br><span class="line">这不会有明显的性能提升.)服务器线程缓存这个值表示可以重新利用保存在缓存中线程的数量,当断开连接时如果缓存中还有空间,那么客户端的线程将被放到缓存中,如果线程重新被请求，那么请求将从缓存中读取,如果缓存中是空的或者是新的请求，那么这个线程将被重新创建,</span><br><span class="line">如果有很多新的线程，增加这个值可以改善系统性能.通过比较 Connections 和 Threads_created 状态的变量，可以看到这个变量的作用</span><br><span class="line">根据物理内存设置规则如下：</span><br><span class="line">1G  —&gt; 8</span><br><span class="line">2G  —&gt; 16</span><br><span class="line">3G  —&gt; 32</span><br><span class="line">大于3G  —&gt; 64</span><br><span class="line"></span><br><span class="line">thread_concurrency = 8 </span><br><span class="line">#此允许应用程序给予线程系统一个提示在同一时间给予渴望被运行的线程的数量.该参数取值为服务器逻辑CPU数量×2，在本例中，服务器有 2 颗物理CPU，而每颗物理CPU又支持H.T超线程，所以实际取值为 4 × 2 ＝ 8.设置 thread_concurrency的值的正确与否, </span><br><span class="line">对 mysql 的性能影响很大, 在多个 cpu(或多核)的情况下，错误设置了 thread_concurrency 的值, 会导致 mysql 不能充分利用多 cpu(或多核),出现同一时刻只能一个 cpu(或核)在工作的情况。 thread_concurrency 应设为 CPU 核数的 2 倍.比如有一个双核的 CPU, </span><br><span class="line">那么 thread_concurrency 的应该为 4; 2 个双核的 cpu,thread_concurrency 的值应为 8,属重点优化参数</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#*** qcache settings 相关选项 ***#</span><br><span class="line">query_cache_limit = 2M </span><br><span class="line">#不缓存查询大于该值的结果.只有小于此设定值的结果才会被缓冲,  此设置用来保护查询缓冲,防止一个极大的结果集将其他所有的查询结果都覆盖.</span><br><span class="line"></span><br><span class="line">query_cache_min_res_unit = 2K </span><br><span class="line">#查询缓存分配的最小块大小.默认是 4KB，设置值大对大数据查询有好处，但如果你的查询都是小数据查询，就容易造成内存碎片和浪费</span><br><span class="line">查询缓存碎片率 = Qcache_free_blocks / Qcache_total_blocks * 100%</span><br><span class="line">如果查询缓存碎片率超过 20%，可以用 FLUSH QUERY CACHE 整理缓存碎片，或者试试减小query_cache_min_res_unit，如果你的查询都是小数据量的话。</span><br><span class="line">查询缓存利用率 = (query_cache_size – Qcache_free_memory) / query_cache_size *100%</span><br><span class="line">查询缓存利用率在 25%以下的话说明 query_cache_size 设置的过大，可适当减小;查询缓存利用率在 80%以上而且 Qcache_lowmem_prunes &gt; 50 的话说明 query_cache_size 可能有点小，要不就是碎片太多。</span><br><span class="line">查询缓存命中率 = (Qcache_hits – Qcache_inserts) / Qcache_hits * 100%</span><br><span class="line"></span><br><span class="line">query_cache_size = 64M  </span><br><span class="line">#指定 MySQL 查询缓冲区的大小。可以通过在 MySQL 控制台执行以下命令观察：</span><br><span class="line">代码:</span><br><span class="line">&gt; SHOW VARIABLES LIKE &#x27;%query_cache%&#x27;;</span><br><span class="line">&gt; SHOW STATUS LIKE &#x27;Qcache%&#x27;;如果 Qcache_lowmem_prunes 的值非常大，则表明经常出现缓冲不够的情况；</span><br><span class="line">如果 Qcache_hits 的值非常大，则表明查询缓冲使用非常频繁，如果该值较小反而会影响效率，那么可以考虑不用查询缓冲； Qcache_free_blocks，如果该值非常大，则表明缓冲区中碎片很多。</span><br><span class="line">memlock # 如果你的系统支持 memlock() 函数,你也许希望打开此选项用以让运行中的 mysql 在在内存高度</span><br><span class="line">紧张的时候,数据在内存中保持锁定并且防止可能被 swapping out,此选项对于性能有益</span><br><span class="line"></span><br><span class="line">#*** default settings 相关选项 ***#</span><br><span class="line">default_table_type = InnoDB </span><br><span class="line"># 当创建新表时作为默认使用的表类型,如果在创建表示没有特别执行表类型,将会使用此值</span><br><span class="line"></span><br><span class="line">default-time-zone = system </span><br><span class="line">#服务器时区</span><br><span class="line"></span><br><span class="line">character-set-server = utf8 </span><br><span class="line">#server 级别字符集</span><br><span class="line"></span><br><span class="line">default-storage-engine = InnoDB </span><br><span class="line">#默认存储引擎</span><br><span class="line"></span><br><span class="line">#*** tmp &amp;&amp; heap settings 相关选项 ***#</span><br><span class="line">tmp_table_size = 512M </span><br><span class="line">#临时表的最大大小，如果超过该值，则结果放到磁盘中,此限制是针对单个表的,而不是总和.</span><br><span class="line"></span><br><span class="line">max_heap_table_size = 512M </span><br><span class="line">#独立的内存表所允许的最大容量.此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源.</span><br><span class="line"></span><br><span class="line">#*** log settings 相关选项 ***#</span><br><span class="line">log-bin = mysql-bin </span><br><span class="line">#打开二进制日志功能.在复制(replication)配置中,作为 MASTER 主服务器必须打开此项.如果你需要从你最后的备份中做基于时间点的恢复,你也同样需要二进制日志.这些路径相对于 datadir</span><br><span class="line"></span><br><span class="line">log_slave_updates = 1 </span><br><span class="line">#表示slave将复制事件写进自己的二进制日志</span><br><span class="line"></span><br><span class="line">log-bin-index = mysql-bin.index </span><br><span class="line">#二进制的索引文件名</span><br><span class="line"></span><br><span class="line">relay-log = relay-log </span><br><span class="line">#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn（By default, relay log file names have the form host_name-relay-bin.nnnnnn in the data directory）；</span><br><span class="line"></span><br><span class="line">relay_log_index = relay-log.index  </span><br><span class="line">#relay-log的索引文件名</span><br><span class="line"></span><br><span class="line">log-warnings = 1 </span><br><span class="line"># 将警告打印输出到错误 log 文件.如果你对于MySQL有任何问题，你应该打开警告 log 并且仔细审查错误日志,查出可能的原因.</span><br><span class="line"></span><br><span class="line">log-error =  /usr/local/mysql/log/mysql.err </span><br><span class="line">#错误日志路径</span><br><span class="line"></span><br><span class="line">log_output = FILE </span><br><span class="line">#参数 log_output 指定了慢查询输出的格式，默认为 FILE，你可以将它设为 TABLE，然后就可以查询 mysql 架构下的 slow_log 表了</span><br><span class="line"></span><br><span class="line">log_slow_queries </span><br><span class="line">#指定是否开启慢查询日志(该参数要被slow_query_log取代，做兼容性保留)</span><br><span class="line"></span><br><span class="line">slow_query_log = 1 </span><br><span class="line"># 指定是否开启慢查询日志. 慢查询是指消耗了比 “long_query_time” 定义的更多时间的查询.如果 log_long_format 被打开,那些没有使用索引的查询也会被记录.如果你经常增加新查询到已有的系统内的话. 一般来说这是一个好主意,</span><br><span class="line"></span><br><span class="line">long-query-time = 1 </span><br><span class="line">#设定慢查询的阀值，超出次设定值的SQL即被记录到慢查询日志，缺省值为10s.所有的使用了比这个时间(以秒为单位)更多的查询会被认为是慢速查询.不要在这里使用”1″, 否则会导致所有的查询,甚至非常快的查询页被记录下来(由于MySQL 目前时间的精确度只能达到秒的级别).</span><br><span class="line"></span><br><span class="line">log_long_format </span><br><span class="line"># 在慢速日志中记录更多的信息.一般此项最好打开，打开此项会记录使得那些没有使用索引的查询也被作为到慢速查询附加到慢速日志里</span><br><span class="line"></span><br><span class="line">slow_query_log_file =  /usr/local/mysql/log/slow.log </span><br><span class="line"># 指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log</span><br><span class="line"></span><br><span class="line">log-queries-not-using-indexes </span><br><span class="line">#如果运行的SQL语句没有使用索引，则mysql数据库同样会将这条SQL语句记录到慢查询日志文件中。</span><br><span class="line"></span><br><span class="line">min_examined_row_limit=1000　　　　</span><br><span class="line">#记录那些由于查找了多余1000次而引发的慢查询</span><br><span class="line"></span><br><span class="line">long-slow-admin-statements　　　　</span><br><span class="line">#记录那些慢的optimize table，analyze table和alter table语句</span><br><span class="line"></span><br><span class="line">log-slow-slave-statements </span><br><span class="line">#记录由Slave所产生的慢查询</span><br><span class="line"></span><br><span class="line">general_log = 1 </span><br><span class="line">#将所有到达MySQL Server的SQL语句记录下来,默认关闭 </span><br><span class="line"></span><br><span class="line">general_log_file =  /usr/local/mysql/log/mysql.log </span><br><span class="line">#general_log路径</span><br><span class="line"></span><br><span class="line">max_binlog_size = 1G </span><br><span class="line">#如果二进制日志写入的内容超出给定值，日志就会发生滚动。你不能将该变量设置为大于1GB或小于4096字节。 默认值是1GB。如果你正使用大的事务，二进制日志还会超过max_binlog_size</span><br><span class="line"></span><br><span class="line">max_relay_log_size = 1G </span><br><span class="line">#标记relaylog允许的最大值，如果该值为0，则默认值为max_binlog_size(1G)；如果不为0，则max_relay_log_size则为最大的relay_log文件大小；</span><br><span class="line"></span><br><span class="line">relay-log-purge = 1 </span><br><span class="line">#是否自动清空不再需要中继日志时。默认值为1(启用)</span><br><span class="line"></span><br><span class="line">expire_logs_days = 30 </span><br><span class="line">#超过 30 天的 binlog 删除</span><br><span class="line"></span><br><span class="line">binlog_cache_size = 1M </span><br><span class="line"># 在一个事务中 binlog 为了记录 SQL 状态所持有的 cache 大小,如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能.所有从事务来的状态都将被缓冲在 binlog 缓冲中然后在提交后一次性写入到 binlog 中,如果事务比此值大, 会使用磁盘上的临时文件来替代.此缓冲在每个连接的事务第一次更新状态时被创建.session 级别</span><br><span class="line"></span><br><span class="line">replicate-wild-ignore-table = mysql.% </span><br><span class="line">#复制时忽略数据库及表</span><br><span class="line">slave_skip_errors=all </span><br><span class="line">#定义复制过程中从服务器可以自动跳过的错误号，当复制过程中遇到定义的错误号，就可以自动跳过，直接执行后面的SQL语句。</span><br><span class="line">slave_skip_errors选项有四个可用值，分别为：off，all，ErorCode，ddl_exist_errors。</span><br><span class="line">  默认情况下该参数值是off，我们可以列出具体的error code，也可以选择all，mysql5.6及MySQL Cluster NDB 7.3以及后续版本增加了参数ddl_exist_errors，该参数包含一系列error code（1007,1008,1050,1051,1054,1060,1061,1068,1094,1146）</span><br><span class="line">    一些error code代表的错误如下：</span><br><span class="line">    1007：数据库已存在，创建数据库失败</span><br><span class="line">    1008：数据库不存在，删除数据库失败</span><br><span class="line">    1050：数据表已存在，创建数据表失败</span><br><span class="line">    1051：数据表不存在，删除数据表失败</span><br><span class="line">    1054：字段不存在，或程序文件跟数据库有冲突</span><br><span class="line">    1060：字段重复，导致无法插入</span><br><span class="line">    1061：重复键名</span><br><span class="line">    1068：定义了多个主键</span><br><span class="line">    1094：位置线程ID</span><br><span class="line">    1146：数据表缺失，请恢复数据库</span><br><span class="line">    1053：复制过程中主服务器宕机</span><br><span class="line">    1062：主键冲突 Duplicate entry &#x27;%s&#x27; for key %d</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">#*** MyISAM 相关选项 ***#</span><br><span class="line">key_buffer_size = 256M </span><br><span class="line">#指定用于索引的缓冲区大小，增加它可得到更好的索引处理性能。如果是以InnoDB引擎为主的DB，专用于MyISAM引擎的 key_buffer_size 可以设置较小，8MB 已足够  如果是以MyISAM引擎为主，可设置较大，但不能超过4G. 在这里，强烈建议不使用MyISAM引擎，默认都是用InnoDB引擎.注意：该参数值设置的过大反而会是服务器整体效率降低！</span><br><span class="line"></span><br><span class="line">sort_buffer_size = 2M </span><br><span class="line">#查询排序时所能使用的缓冲区大小。排序缓冲被用来处理类似 ORDER BY 以及 GROUP BY 队列所引起的排序.一个用来替代的基于磁盘的合并分类会被使用.查看 “Sort_merge_passes” 状态变量. 在排序发生时由每个线程分配 注意：该参数对应的分配内存是每连接独占！如果有 100 个连接，那么实际分配的总共排序缓冲区大小为 100 × 6 ＝600MB,所以,对于内存在 4GB 左右的服务器推荐设置为 6-8M。 </span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M </span><br><span class="line">#读查询操作所能使用的缓冲区大小。和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享！用来做 MyISAM 表全表扫描的缓冲大小.当全表扫描需要时,在对应线程中分配.</span><br><span class="line"></span><br><span class="line">join_buffer_size = 8M </span><br><span class="line">#联合查询操作所能使用的缓冲区大小，和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享!此缓冲被使用来优化全联合(full JOINs 不带索引的联合).类似的联合在极大多数情况下有非常糟糕的性能表现, 但是将此值设大能够减轻性能影响.通过 “Select_full_join”状态变量查看全联合的数量， 当全联合发生时,在每个线程中分配。</span><br><span class="line"></span><br><span class="line">read_rnd_buffer_size = 8M </span><br><span class="line">#MyISAM 以索引扫描(Random Scan)方式扫描数据的 buffer大小 </span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 64M </span><br><span class="line">#MyISAM 使用特殊的类似树的 cache 来使得突发插入(这些插入是,INSERT … SELECT, INSERT … VALUES (…), (…), …, 以及 LOAD DATAINFILE) 更快. 此变量限制每个进程中缓冲树的字节数.设置为 0 会关闭此优化.为了最优化不要将此值设置大于 “key_buffer_size”.当突发插入被检测到时此缓冲将被分配MyISAM 用在块插入优化中的树缓冲区的大小。注释：这是一个 per thread 的限制 （ bulk 大量）.此缓冲当 MySQL 需要在 REPAIR, OPTIMIZE, ALTER 以及 LOAD DATA INFILE到一个空表中引起重建索引时被分配.这在每个线程中被分配.所以在设置大值时需要小心.</span><br><span class="line"></span><br><span class="line">myisam_sort_buffer_size = 64M </span><br><span class="line">#MyISAM 设置恢复表之时使用的缓冲区的尺寸,当在REPAIR TABLE 或用 CREATE INDEX 创建索引或 ALTER TABLE 过程中排序 MyISAM 索引分配的缓冲区</span><br><span class="line"></span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">#mysql重建索引时允许使用的临时文件最大大小</span><br><span class="line"></span><br><span class="line">myisam_repair_threads = 1 </span><br><span class="line">#如果该值大于 1，在 Repair by sorting 过程中并行创建MyISAM 表索引(每个索引在自己的线程内).如果一个表拥有超过一个索引, MyISAM 可以通过并行排序使用超过一个线程去修复他们.这对于拥有多个 CPU 以及大量内存情况的用户,是一个很好的选择.</span><br><span class="line"></span><br><span class="line">myisam_recover = 64K</span><br><span class="line">#允许的 GROUP_CONCAT()函数结果的最大长度</span><br><span class="line">transaction_isolation = REPEATABLE-READ # 设定默认的事务隔离级别.可用的级别如下:READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ,SERIALIZABLE</span><br><span class="line">1.READ UNCOMMITTED-读未提交 2.READ COMMITTE-读已提交 3.REPEATABLE READ -可重复读 4.SERIALIZABLE -串行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># *** INNODB 相关选项 ***#</span><br><span class="line">skip-innodb </span><br><span class="line"># 如果你的 MySQL 服务包含 InnoDB 支持但是并不打算使用的话,使用此选项会节省内存以及磁盘空间,并且加速某些部分</span><br><span class="line"></span><br><span class="line">innodb_file_per_table = 1 </span><br><span class="line"># InnoDB为独立表空间模式，每个数据库的每个表都会生成一个数据空间</span><br><span class="line">独立表空间优点：</span><br><span class="line">1．每个表都有自已独立的表空间。</span><br><span class="line">2．每个表的数据和索引都会存在自已的表空间中。</span><br><span class="line">3．可以实现单表在不同的数据库中移动。</span><br><span class="line">4．空间可以回收（除drop table操作处，表空不能自已回收）</span><br><span class="line">缺点：</span><br><span class="line">1.单表增加过大，如超过100G</span><br><span class="line">结论：</span><br><span class="line">共享表空间在Insert操作上少有优势。其它都没独立表空间表现好。当启用独立表空间时，请合理调整：innodb_open_files</span><br><span class="line"></span><br><span class="line">innodb_status_file = 1 </span><br><span class="line">#启用InnoDB的status file，便于管理员查看以及监控等</span><br><span class="line"></span><br><span class="line">innodb_open_files = 2048 </span><br><span class="line"># 限制Innodb能打开的表的数据，如果库里的表特别多的情况，请增加这个。这个值默认是300</span><br><span class="line"></span><br><span class="line">innodb_additional_mem_pool_size = 100M </span><br><span class="line">#设置InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小，所以当我们一个MySQL Instance中的数据库对象非常多的时候，是需要适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率的。 </span><br><span class="line"></span><br><span class="line">innodb_buffer_pool_size = 2G </span><br><span class="line">#包括数据页、索引页、插入缓存、锁信息、自适应哈希所以、数据字典信息.InnoDB 使用一个缓冲池来保存索引和原始数据, 不像 MyISAM.这里你设置越大,你在存取表里面数据时所需要的磁盘 I/O 越少.在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的 80%,不要设置过大,否则,由于物理内存的竞争可能导致操作系统的换页颠簸.注意在 32 位系统上你每个进程可能被限制在 2-3.5G 用户层面内存限制,所以不要设置的太高.</span><br><span class="line"></span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line"># innodb使用后台线程处理数据页上的读写 I/O(输入输出)请求,根据你的 CPU 核数来更改,默认是4</span><br><span class="line"># 注:这两个参数不支持动态改变,需要把该参数加入到my.cnf里，修改完后重启MySQL服务,允许值的范围从 1-64</span><br><span class="line"></span><br><span class="line">innodb_data_home_dir =  /usr/local/mysql/var/ </span><br><span class="line">#设置此选项如果你希望 InnoDB 表空间文件被保存在其他分区.默认保存在 MySQL 的 datadir 中.</span><br><span class="line"></span><br><span class="line">innodb_data_file_path = ibdata1:500M;ibdata2:2210M:autoextend</span><br><span class="line">#InnoDB将数据保存在一个或者多个数据文件中成为表空间.如果你只有单个逻辑驱动保存你的数据,一个单个的自增文件就足够好了.其他情况下.每个设备一个文件一般都是个好的选择.你也可以配置 InnoDB 来使用裸盘分区 – 请参考手册来获取更多相关内容</span><br><span class="line"></span><br><span class="line">innodb_file_io_threads = 4 </span><br><span class="line">#用来同步 IO 操作的 IO 线程的数量. 此值在 Unix 下被硬编码为 4,但是在 Windows 磁盘 I/O 可能在一个大数值下表现的更好.</span><br><span class="line"></span><br><span class="line">innodb_thread_concurrency = 16</span><br><span class="line">#在 InnoDb 核心内的允许线程数量,InnoDB 试着在 InnoDB 内保持操作系统线程的数量少于或等于这个参数给出的限制,最优值依赖于应用程序,硬件以及操作系统的调度方式.过高的值可能导致线程的互斥颠簸.默认设置为 0,表示不限制并发数，这里推荐设置为0，更好去发挥CPU多核处理能力，提高并发量</span><br><span class="line"></span><br><span class="line">innodb_flush_log_at_trx_commit = 1 </span><br><span class="line">#如果设置为 1 ,InnoDB 会在每次提交后刷新(fsync)事务日志到磁盘上,这提供了完整的 ACID 行为.如果你愿意对事务安全折衷, 并且你正在运行一个小的食物, 你可以设置此值到 0 或者 2 来减少由事务日志引起的磁盘 I/O</span><br><span class="line">0 代表日志只大约每秒写入日志文件并且日志文件刷新到磁盘.</span><br><span class="line">2 代表日志写入日志文件在每次提交后,但是日志文件只有大约每秒才会刷新到磁盘上.</span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size = 8M </span><br><span class="line">#用来缓冲日志数据的缓冲区的大小.当此值快满时, InnoDB 将必须刷新数据到磁盘上.由于基本上每秒都会刷新一次,所以没有必要将此值设置的太大(甚至对于长事务而言)</span><br><span class="line"></span><br><span class="line">innodb_log_file_size = 500M </span><br><span class="line">#事物日志大小.在日志组中每个日志文件的大小，你应该设置日志文件总合大小到你缓冲池大小的5%~100%，来避免在日志文件覆写上不必要的缓冲池刷新行为.不论如何, 请注意一个大的日志文件大小会增加恢复进程所需要的时间.</span><br><span class="line"></span><br><span class="line">innodb_log_files_in_group = 2 </span><br><span class="line">#在日志组中的文件总数.通常来说 2~3 是比较好的.</span><br><span class="line"></span><br><span class="line">innodb_log_group_home_dir =  /usr/local/mysql/var/</span><br><span class="line"># InnoDB 的日志文件所在位置. 默认是 MySQL 的 datadir.你可以将其指定到一个独立的硬盘上或者一个 RAID1 卷上来提高其性能innodb_max_dirty_pages_pct = 90 #innodb 主线程刷新缓存池中的数据，使脏数据比例小于 90%,这是一个软限制,不被保证绝对执行.</span><br><span class="line"></span><br><span class="line">innodb_lock_wait_timeout = 50 </span><br><span class="line">#InnoDB 事务在被回滚之前可以等待一个锁定的超时秒数。InnoDB 在它自己的 锁定表中自动检测事务死锁并且回滚事务。 InnoDB 用 LOCK TABLES 语句注意到锁定设置。默认值是 50 秒</span><br><span class="line"></span><br><span class="line">innodb_flush_method = O_DSYNC </span><br><span class="line"># InnoDB 用来刷新日志的方法.表空间总是使用双重写入刷新方法.默认值是 “fdatasync”, 另一个是 “O_DSYNC”.</span><br><span class="line"></span><br><span class="line">innodb_force_recovery=1</span><br><span class="line"># 如果你发现 InnoDB 表空间损坏, 设置此值为一个非零值可能帮助你导出你的表.从1 开始并且增加此值知道你能够成功的导出表.</span><br><span class="line"></span><br><span class="line">innodb_fast_shutdown </span><br><span class="line"># 加速 InnoDB 的关闭. 这会阻止 InnoDB 在关闭时做全清除以及插入缓冲合并.这可能极大增加关机时间, 但是取而代之的是 InnoDB 可能在下次启动时做这些操作.</span><br><span class="line"></span><br><span class="line"># *** 其他 相关选项 ***#</span><br><span class="line">[mysqldump]</span><br><span class="line">quick </span><br><span class="line">#支持较大数据库的转储，在导出非常巨大的表时需要此项。增加该变量的值十分安全，这是因为仅当需要时才会分配额外内存。例如，仅当你发出长查询或mysqld必须返回大的结果行时mysqld才会分配更多内存。该变量之所以取较小默认值是一种预防措施，以捕获客户端和服务器之间的错误信息包，并确保不会因偶然使用大的信息包而导致内存溢出。 如果你正是用大的BLOB值，而且未为mysqld授予为处理查询而访问足够内存的权限，也会遇到与大信息包有关的奇怪问题。如果怀疑出现了该情况，请尝试在mysqld_safe脚本开始增加ulimit -d 256000，并重启mysqld。</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">auto-rehash </span><br><span class="line">#允许通过 TAB 键提示</span><br><span class="line"></span><br><span class="line">default-character-set = utf8 </span><br><span class="line">#数据库字符集</span><br><span class="line"></span><br><span class="line">connect-timeout = 3</span><br><span class="line">[mysqld_safe]</span><br><span class="line"></span><br><span class="line">open-files-limit = 8192 </span><br><span class="line">#增加每个进程的可打开文件数量.确认你已经将全系统限制设定的足够高!打开大量表需要将此值设大</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;my-cnf配置文件详解&quot;&gt;&lt;a href=&quot;#my-cnf配置文件详解&quot; class=&quot;headerlink&quot; title=&quot;my.cnf配置文件详解&quot;&gt;&lt;/a&gt;my.cnf配置文件详解&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;325&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;326&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;327&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;328&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;330&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;331&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;332&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;333&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;334&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;335&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;336&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;337&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;338&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;339&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;340&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;341&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;342&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;343&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;344&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;345&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;346&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;347&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;348&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;350&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;351&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;352&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;353&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;354&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;355&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;356&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;357&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;358&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#以下选项会被MySQL客户端应用读取。注意只有MySQL附带的客户端应用程序保证可以读取这段内容。如果你想你自己的MySQL应用程序获取这些值。需要在MySQL客户端库初始化的时候指定这些选项。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[client]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port = 3309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket =  /usr/local/mysql/tmp/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld] #服务器端配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!include  /usr/local/mysql/etc/mysqld.cnf  #包含的配置文件，可以把用户名和密码文件单独存放&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port = 3306　　#监听端口　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bind-address = 0.0.0.0　　#监听的ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server-id = 1　　#MySQL服务的ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket =  /usr/local/mysql/tmp/mysql.sock　　#socket通信设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid-file =  /usr/local/mysql/var/mysql.pid　 #pid文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir =  /usr/local/mysql/　　　　　　　　　　#MySQL程序路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir =  /usr/local/mysql/data　　　　　　　 #数据目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tmpdir =  /usr/local/mysql/tmp/ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#此目录被 MySQL用来保存临时文件.例如,它被用来处理基于磁盘的大型排序,和内部排序一样，以及简单的临时表.如果你不创建非常大的临时文件,将其放置到 swapfs/tmpfs 文件系统上也许比较好。另一种选择是你也可以将其放置在独立的磁盘上.你可以使用”;”来放置多个路径，他们会按照 roud-robin 方法被轮询使用.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave-load-tmpdir =  /usr/local/mysql/tmp/  #当slave执行load data infile时使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** skip options 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-name-resolve &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#禁止 MySQL 对外部连接进行 DNS 解析，使用这一选项可以消除 MySQL 进行 DNS 解析的时间。但需要注意，如果开启该选项，则所有远程主机连接授权都要使用 IP 地址方式，否则 MySQL 将无法正常处理连接请求！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-symbolic-links &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#不能使用连接文件，多个客户可能会访问同一个数据库，因此这防止外部客户锁定 MySQL 服务器。 该选项默认开启&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-external-locking &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#不使用系统锁定，要使用 myisamchk,必须关闭服务器 ,避免 MySQL的外部锁定，减少出错几率增强稳定性。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-slave-start &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#启动 mysql,不启动复制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-networking &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#开启该选项可以彻底关闭 MySQL 的 TCP/IP 连接方式，如果 WEB 服务器是以远程连接的方式访问 MySQL 数据库服务器则不要开启该选项！否则将无法正常连接！ 如果所有的进程都是在同一台服务器连接到本地的 mysqld, 这样设置将是增强安全的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sysdate-is-now = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把SYSDATE 函数编程为 NOW的别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** 系统资源相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;back_log = 50 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#接受队列，对于没建立 tcp 连接的请求队列放入缓存中，队列大小为 back_log，受限制与 OS 参数，试图设定 back_log 高于你的操作系统的限制将是无效的。默认值为 50。对于 Linux 系统推荐设置为小于512的整数。如果系统在一个短时间内有很多连接，则需要增大该参数的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_connections = 1000 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#指定MySQL允许的最大连接进程数。如果在访问数据库时经常出现&amp;quot;Too Many Connections&amp;quot;的错误提 示，则需要增大该参数值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_connect_errors = 10000 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果某个用户发起的连接 error 超过该数值，则该用户的下次连接将被阻塞，直到管理员执行 flush hosts ; 命令或者服务重启， 防止黑客 ， 非法的密码以及其他在链接时的错误会增加此值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open_files_limit = 10240 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#MySQL打开的文件描述符限制，默认最小1024;当open_files_limit没有被配置的时候，比较max_connections*5和ulimit-n的值，哪个大用哪个，当open_file_limit被配置的时候，比较open_files_limit和max_connections*5的值，哪个大用哪个。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connect-timeout = 10 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#连接超时之前的最大秒数,在 Linux 平台上，该超时也用作等待服务器首次回应的时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wait-timeout = 28800 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#等待关闭连接的时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interactive-timeout = 28800 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#关闭连接之前，允许 interactive_timeout（取代了wait_timeout）秒的不活动时间。客户端的会话 wait_timeout 变量被设为会话interactive_timeout 变量的值。如果前端程序采用短连接，建议缩短这2个值, 如果前端程序采用长连接，可直接注释掉这两个选项，默认配置(8小时)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave-net-timeout = 600 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#从服务器也能够处理网络连接中断。但是，只有从服务器超过slave_net_timeout 秒没有从主服务器收到数据才通知网络中断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net_read_timeout = 30 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#从服务器读取信息的超时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net_write_timeout = 60 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#从服务器写入信息的超时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net_retry_count = 10 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果某个通信端口的读操作中断了，在放弃前重试多次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net_buffer_length = 16384 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#包消息缓冲区初始化为 net_buffer_length 字节，但需要时可以增长到 max_allowed_packet 字节&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_allowed_packet = 64M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小(当与大的BLOB 字段一起工作时相当必要)， 每个连接独立的大小.大小动态增加。 设置最大包,限制server接受的数据包大小，避免超长SQL的执行有问题 默认值为16M，当MySQL客户端或mysqld&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务器收到大于 max_allowed_packet 字节的信息包时，将发出“信息包过大”错误，并关闭连接。对于某些客户端，如果通信信息包过大，在执行查询期间，可能会遇到“丢失与 MySQL 服务器的连接”错误。默认值 16M。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table_cache = 512 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 所有线程所打开表的数量. 增加此值就增加了mysqld所需要的文件描述符的数量这样你需要确认在[mysqld_safe]中 “open-files-limit” 变量设置打开文件数量允许至少4096&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thread_stack = 192K &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 线程使用的堆大小. 此容量的内存在每次连接时被预留.MySQL 本身常不会需要超过 64K 的内存如果你使用你自己的需要大量堆的 UDF 函数或者你的操作系统对于某些操作需要更多的堆,你也许需要将其设置的更高一点.默认设置足以满足大多数应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thread_cache_size = 20 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 我们在 cache 中保留多少线程用于重用.当一个客户端断开连接后,如果 cache 中的线程还少于 thread_cache_size,则客户端线程被放入 cache 中.这可以在你需要大量新连接的时候极大的减少线程创建的开销(一般来说如果你有好的线程模型的话,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这不会有明显的性能提升.)服务器线程缓存这个值表示可以重新利用保存在缓存中线程的数量,当断开连接时如果缓存中还有空间,那么客户端的线程将被放到缓存中,如果线程重新被请求，那么请求将从缓存中读取,如果缓存中是空的或者是新的请求，那么这个线程将被重新创建,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果有很多新的线程，增加这个值可以改善系统性能.通过比较 Connections 和 Threads_created 状态的变量，可以看到这个变量的作用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;根据物理内存设置规则如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1G  —&amp;gt; 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2G  —&amp;gt; 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3G  —&amp;gt; 32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;大于3G  —&amp;gt; 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thread_concurrency = 8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#此允许应用程序给予线程系统一个提示在同一时间给予渴望被运行的线程的数量.该参数取值为服务器逻辑CPU数量×2，在本例中，服务器有 2 颗物理CPU，而每颗物理CPU又支持H.T超线程，所以实际取值为 4 × 2 ＝ 8.设置 thread_concurrency的值的正确与否, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对 mysql 的性能影响很大, 在多个 cpu(或多核)的情况下，错误设置了 thread_concurrency 的值, 会导致 mysql 不能充分利用多 cpu(或多核),出现同一时刻只能一个 cpu(或核)在工作的情况。 thread_concurrency 应设为 CPU 核数的 2 倍.比如有一个双核的 CPU, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;那么 thread_concurrency 的应该为 4; 2 个双核的 cpu,thread_concurrency 的值应为 8,属重点优化参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** qcache settings 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;query_cache_limit = 2M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#不缓存查询大于该值的结果.只有小于此设定值的结果才会被缓冲,  此设置用来保护查询缓冲,防止一个极大的结果集将其他所有的查询结果都覆盖.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;query_cache_min_res_unit = 2K &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#查询缓存分配的最小块大小.默认是 4KB，设置值大对大数据查询有好处，但如果你的查询都是小数据查询，就容易造成内存碎片和浪费&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查询缓存碎片率 = Qcache_free_blocks / Qcache_total_blocks * 100%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果查询缓存碎片率超过 20%，可以用 FLUSH QUERY CACHE 整理缓存碎片，或者试试减小query_cache_min_res_unit，如果你的查询都是小数据量的话。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查询缓存利用率 = (query_cache_size – Qcache_free_memory) / query_cache_size *100%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查询缓存利用率在 25%以下的话说明 query_cache_size 设置的过大，可适当减小;查询缓存利用率在 80%以上而且 Qcache_lowmem_prunes &amp;gt; 50 的话说明 query_cache_size 可能有点小，要不就是碎片太多。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查询缓存命中率 = (Qcache_hits – Qcache_inserts) / Qcache_hits * 100%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;query_cache_size = 64M  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#指定 MySQL 查询缓冲区的大小。可以通过在 MySQL 控制台执行以下命令观察：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;代码:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; SHOW VARIABLES LIKE &amp;#x27;%query_cache%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; SHOW STATUS LIKE &amp;#x27;Qcache%&amp;#x27;;如果 Qcache_lowmem_prunes 的值非常大，则表明经常出现缓冲不够的情况；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果 Qcache_hits 的值非常大，则表明查询缓冲使用非常频繁，如果该值较小反而会影响效率，那么可以考虑不用查询缓冲； Qcache_free_blocks，如果该值非常大，则表明缓冲区中碎片很多。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;memlock # 如果你的系统支持 memlock() 函数,你也许希望打开此选项用以让运行中的 mysql 在在内存高度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;紧张的时候,数据在内存中保持锁定并且防止可能被 swapping out,此选项对于性能有益&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** default settings 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_table_type = InnoDB &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当创建新表时作为默认使用的表类型,如果在创建表示没有特别执行表类型,将会使用此值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-time-zone = system &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#服务器时区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;character-set-server = utf8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#server 级别字符集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-storage-engine = InnoDB &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#默认存储引擎&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** tmp &amp;amp;&amp;amp; heap settings 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tmp_table_size = 512M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#临时表的最大大小，如果超过该值，则结果放到磁盘中,此限制是针对单个表的,而不是总和.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_heap_table_size = 512M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#独立的内存表所允许的最大容量.此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** log settings 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-bin = mysql-bin &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#打开二进制日志功能.在复制(replication)配置中,作为 MASTER 主服务器必须打开此项.如果你需要从你最后的备份中做基于时间点的恢复,你也同样需要二进制日志.这些路径相对于 datadir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_slave_updates = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#表示slave将复制事件写进自己的二进制日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-bin-index = mysql-bin.index &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#二进制的索引文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relay-log = relay-log &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn（By default, relay log file names have the form host_name-relay-bin.nnnnnn in the data directory）；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relay_log_index = relay-log.index  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#relay-log的索引文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-warnings = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将警告打印输出到错误 log 文件.如果你对于MySQL有任何问题，你应该打开警告 log 并且仔细审查错误日志,查出可能的原因.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-error =  /usr/local/mysql/log/mysql.err &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#错误日志路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_output = FILE &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#参数 log_output 指定了慢查询输出的格式，默认为 FILE，你可以将它设为 TABLE，然后就可以查询 mysql 架构下的 slow_log 表了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_slow_queries &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#指定是否开启慢查询日志(该参数要被slow_query_log取代，做兼容性保留)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slow_query_log = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定是否开启慢查询日志. 慢查询是指消耗了比 “long_query_time” 定义的更多时间的查询.如果 log_long_format 被打开,那些没有使用索引的查询也会被记录.如果你经常增加新查询到已有的系统内的话. 一般来说这是一个好主意,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long-query-time = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设定慢查询的阀值，超出次设定值的SQL即被记录到慢查询日志，缺省值为10s.所有的使用了比这个时间(以秒为单位)更多的查询会被认为是慢速查询.不要在这里使用”1″, 否则会导致所有的查询,甚至非常快的查询页被记录下来(由于MySQL 目前时间的精确度只能达到秒的级别).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_long_format &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在慢速日志中记录更多的信息.一般此项最好打开，打开此项会记录使得那些没有使用索引的查询也被作为到慢速查询附加到慢速日志里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slow_query_log_file =  /usr/local/mysql/log/slow.log &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-queries-not-using-indexes &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果运行的SQL语句没有使用索引，则mysql数据库同样会将这条SQL语句记录到慢查询日志文件中。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;min_examined_row_limit=1000　　　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#记录那些由于查找了多余1000次而引发的慢查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long-slow-admin-statements　　　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#记录那些慢的optimize table，analyze table和alter table语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-slow-slave-statements &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#记录由Slave所产生的慢查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;general_log = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#将所有到达MySQL Server的SQL语句记录下来,默认关闭 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;general_log_file =  /usr/local/mysql/log/mysql.log &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#general_log路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_binlog_size = 1G &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果二进制日志写入的内容超出给定值，日志就会发生滚动。你不能将该变量设置为大于1GB或小于4096字节。 默认值是1GB。如果你正使用大的事务，二进制日志还会超过max_binlog_size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_relay_log_size = 1G &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#标记relaylog允许的最大值，如果该值为0，则默认值为max_binlog_size(1G)；如果不为0，则max_relay_log_size则为最大的relay_log文件大小；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relay-log-purge = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#是否自动清空不再需要中继日志时。默认值为1(启用)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expire_logs_days = 30 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#超过 30 天的 binlog 删除&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;binlog_cache_size = 1M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在一个事务中 binlog 为了记录 SQL 状态所持有的 cache 大小,如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能.所有从事务来的状态都将被缓冲在 binlog 缓冲中然后在提交后一次性写入到 binlog 中,如果事务比此值大, 会使用磁盘上的临时文件来替代.此缓冲在每个连接的事务第一次更新状态时被创建.session 级别&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;replicate-wild-ignore-table = mysql.% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#复制时忽略数据库及表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave_skip_errors=all &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#定义复制过程中从服务器可以自动跳过的错误号，当复制过程中遇到定义的错误号，就可以自动跳过，直接执行后面的SQL语句。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave_skip_errors选项有四个可用值，分别为：off，all，ErorCode，ddl_exist_errors。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  默认情况下该参数值是off，我们可以列出具体的error code，也可以选择all，mysql5.6及MySQL Cluster NDB 7.3以及后续版本增加了参数ddl_exist_errors，该参数包含一系列error code（1007,1008,1050,1051,1054,1060,1061,1068,1094,1146）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    一些error code代表的错误如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1007：数据库已存在，创建数据库失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1008：数据库不存在，删除数据库失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1050：数据表已存在，创建数据表失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1051：数据表不存在，删除数据表失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1054：字段不存在，或程序文件跟数据库有冲突&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1060：字段重复，导致无法插入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1061：重复键名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1068：定义了多个主键&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1094：位置线程ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1146：数据表缺失，请恢复数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1053：复制过程中主服务器宕机&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1062：主键冲突 Duplicate entry &amp;#x27;%s&amp;#x27; for key %d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#*** MyISAM 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;key_buffer_size = 256M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#指定用于索引的缓冲区大小，增加它可得到更好的索引处理性能。如果是以InnoDB引擎为主的DB，专用于MyISAM引擎的 key_buffer_size 可以设置较小，8MB 已足够  如果是以MyISAM引擎为主，可设置较大，但不能超过4G. 在这里，强烈建议不使用MyISAM引擎，默认都是用InnoDB引擎.注意：该参数值设置的过大反而会是服务器整体效率降低！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sort_buffer_size = 2M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#查询排序时所能使用的缓冲区大小。排序缓冲被用来处理类似 ORDER BY 以及 GROUP BY 队列所引起的排序.一个用来替代的基于磁盘的合并分类会被使用.查看 “Sort_merge_passes” 状态变量. 在排序发生时由每个线程分配 注意：该参数对应的分配内存是每连接独占！如果有 100 个连接，那么实际分配的总共排序缓冲区大小为 100 × 6 ＝600MB,所以,对于内存在 4GB 左右的服务器推荐设置为 6-8M。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read_buffer_size = 2M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#读查询操作所能使用的缓冲区大小。和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享！用来做 MyISAM 表全表扫描的缓冲大小.当全表扫描需要时,在对应线程中分配.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;join_buffer_size = 8M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#联合查询操作所能使用的缓冲区大小，和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享!此缓冲被使用来优化全联合(full JOINs 不带索引的联合).类似的联合在极大多数情况下有非常糟糕的性能表现, 但是将此值设大能够减轻性能影响.通过 “Select_full_join”状态变量查看全联合的数量， 当全联合发生时,在每个线程中分配。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read_rnd_buffer_size = 8M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#MyISAM 以索引扫描(Random Scan)方式扫描数据的 buffer大小 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bulk_insert_buffer_size = 64M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#MyISAM 使用特殊的类似树的 cache 来使得突发插入(这些插入是,INSERT … SELECT, INSERT … VALUES (…), (…), …, 以及 LOAD DATAINFILE) 更快. 此变量限制每个进程中缓冲树的字节数.设置为 0 会关闭此优化.为了最优化不要将此值设置大于 “key_buffer_size”.当突发插入被检测到时此缓冲将被分配MyISAM 用在块插入优化中的树缓冲区的大小。注释：这是一个 per thread 的限制 （ bulk 大量）.此缓冲当 MySQL 需要在 REPAIR, OPTIMIZE, ALTER 以及 LOAD DATA INFILE到一个空表中引起重建索引时被分配.这在每个线程中被分配.所以在设置大值时需要小心.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myisam_sort_buffer_size = 64M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#MyISAM 设置恢复表之时使用的缓冲区的尺寸,当在REPAIR TABLE 或用 CREATE INDEX 创建索引或 ALTER TABLE 过程中排序 MyISAM 索引分配的缓冲区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myisam_max_sort_file_size = 10G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#mysql重建索引时允许使用的临时文件最大大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myisam_repair_threads = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果该值大于 1，在 Repair by sorting 过程中并行创建MyISAM 表索引(每个索引在自己的线程内).如果一个表拥有超过一个索引, MyISAM 可以通过并行排序使用超过一个线程去修复他们.这对于拥有多个 CPU 以及大量内存情况的用户,是一个很好的选择.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myisam_recover = 64K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#允许的 GROUP_CONCAT()函数结果的最大长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;transaction_isolation = REPEATABLE-READ # 设定默认的事务隔离级别.可用的级别如下:READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ,SERIALIZABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.READ UNCOMMITTED-读未提交 2.READ COMMITTE-读已提交 3.REPEATABLE READ -可重复读 4.SERIALIZABLE -串行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# *** INNODB 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-innodb &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你的 MySQL 服务包含 InnoDB 支持但是并不打算使用的话,使用此选项会节省内存以及磁盘空间,并且加速某些部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_file_per_table = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# InnoDB为独立表空间模式，每个数据库的每个表都会生成一个数据空间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;独立表空间优点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1．每个表都有自已独立的表空间。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2．每个表的数据和索引都会存在自已的表空间中。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3．可以实现单表在不同的数据库中移动。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4．空间可以回收（除drop table操作处，表空不能自已回收）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.单表增加过大，如超过100G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;结论：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共享表空间在Insert操作上少有优势。其它都没独立表空间表现好。当启用独立表空间时，请合理调整：innodb_open_files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_status_file = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#启用InnoDB的status file，便于管理员查看以及监控等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_open_files = 2048 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 限制Innodb能打开的表的数据，如果库里的表特别多的情况，请增加这个。这个值默认是300&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_additional_mem_pool_size = 100M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小，所以当我们一个MySQL Instance中的数据库对象非常多的时候，是需要适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率的。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_buffer_pool_size = 2G &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#包括数据页、索引页、插入缓存、锁信息、自适应哈希所以、数据字典信息.InnoDB 使用一个缓冲池来保存索引和原始数据, 不像 MyISAM.这里你设置越大,你在存取表里面数据时所需要的磁盘 I/O 越少.在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的 80%,不要设置过大,否则,由于物理内存的竞争可能导致操作系统的换页颠簸.注意在 32 位系统上你每个进程可能被限制在 2-3.5G 用户层面内存限制,所以不要设置的太高.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_write_io_threads = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_read_io_threads = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# innodb使用后台线程处理数据页上的读写 I/O(输入输出)请求,根据你的 CPU 核数来更改,默认是4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注:这两个参数不支持动态改变,需要把该参数加入到my.cnf里，修改完后重启MySQL服务,允许值的范围从 1-64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_home_dir =  /usr/local/mysql/var/ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#设置此选项如果你希望 InnoDB 表空间文件被保存在其他分区.默认保存在 MySQL 的 datadir 中.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_data_file_path = ibdata1:500M;ibdata2:2210M:autoextend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#InnoDB将数据保存在一个或者多个数据文件中成为表空间.如果你只有单个逻辑驱动保存你的数据,一个单个的自增文件就足够好了.其他情况下.每个设备一个文件一般都是个好的选择.你也可以配置 InnoDB 来使用裸盘分区 – 请参考手册来获取更多相关内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_file_io_threads = 4 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#用来同步 IO 操作的 IO 线程的数量. 此值在 Unix 下被硬编码为 4,但是在 Windows 磁盘 I/O 可能在一个大数值下表现的更好.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_thread_concurrency = 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#在 InnoDb 核心内的允许线程数量,InnoDB 试着在 InnoDB 内保持操作系统线程的数量少于或等于这个参数给出的限制,最优值依赖于应用程序,硬件以及操作系统的调度方式.过高的值可能导致线程的互斥颠簸.默认设置为 0,表示不限制并发数，这里推荐设置为0，更好去发挥CPU多核处理能力，提高并发量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_flush_log_at_trx_commit = 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#如果设置为 1 ,InnoDB 会在每次提交后刷新(fsync)事务日志到磁盘上,这提供了完整的 ACID 行为.如果你愿意对事务安全折衷, 并且你正在运行一个小的食物, 你可以设置此值到 0 或者 2 来减少由事务日志引起的磁盘 I/O&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 代表日志只大约每秒写入日志文件并且日志文件刷新到磁盘.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 代表日志写入日志文件在每次提交后,但是日志文件只有大约每秒才会刷新到磁盘上.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_log_buffer_size = 8M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#用来缓冲日志数据的缓冲区的大小.当此值快满时, InnoDB 将必须刷新数据到磁盘上.由于基本上每秒都会刷新一次,所以没有必要将此值设置的太大(甚至对于长事务而言)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_log_file_size = 500M &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#事物日志大小.在日志组中每个日志文件的大小，你应该设置日志文件总合大小到你缓冲池大小的5%~100%，来避免在日志文件覆写上不必要的缓冲池刷新行为.不论如何, 请注意一个大的日志文件大小会增加恢复进程所需要的时间.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_log_files_in_group = 2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#在日志组中的文件总数.通常来说 2~3 是比较好的.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_log_group_home_dir =  /usr/local/mysql/var/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# InnoDB 的日志文件所在位置. 默认是 MySQL 的 datadir.你可以将其指定到一个独立的硬盘上或者一个 RAID1 卷上来提高其性能innodb_max_dirty_pages_pct = 90 #innodb 主线程刷新缓存池中的数据，使脏数据比例小于 90%,这是一个软限制,不被保证绝对执行.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_lock_wait_timeout = 50 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#InnoDB 事务在被回滚之前可以等待一个锁定的超时秒数。InnoDB 在它自己的 锁定表中自动检测事务死锁并且回滚事务。 InnoDB 用 LOCK TABLES 语句注意到锁定设置。默认值是 50 秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_flush_method = O_DSYNC &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# InnoDB 用来刷新日志的方法.表空间总是使用双重写入刷新方法.默认值是 “fdatasync”, 另一个是 “O_DSYNC”.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_force_recovery=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你发现 InnoDB 表空间损坏, 设置此值为一个非零值可能帮助你导出你的表.从1 开始并且增加此值知道你能够成功的导出表.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;innodb_fast_shutdown &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 加速 InnoDB 的关闭. 这会阻止 InnoDB 在关闭时做全清除以及插入缓冲合并.这可能极大增加关机时间, 但是取而代之的是 InnoDB 可能在下次启动时做这些操作.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# *** 其他 相关选项 ***#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqldump]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quick &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#支持较大数据库的转储，在导出非常巨大的表时需要此项。增加该变量的值十分安全，这是因为仅当需要时才会分配额外内存。例如，仅当你发出长查询或mysqld必须返回大的结果行时mysqld才会分配更多内存。该变量之所以取较小默认值是一种预防措施，以捕获客户端和服务器之间的错误信息包，并确保不会因偶然使用大的信息包而导致内存溢出。 如果你正是用大的BLOB值，而且未为mysqld授予为处理查询而访问足够内存的权限，也会遇到与大信息包有关的奇怪问题。如果怀疑出现了该情况，请尝试在mysqld_safe脚本开始增加ulimit -d 256000，并重启mysqld。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysql]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto-rehash &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#允许通过 TAB 键提示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-character-set = utf8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#数据库字符集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connect-timeout = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld_safe]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open-files-limit = 8192 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#增加每个进程的可打开文件数量.确认你已经将全系统限制设定的足够高!打开大量表需要将此值设大&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="mysql" scheme="https://github.com/jiangjiawei520/categories/mysql/"/>
    
    
    <category term="windows" scheme="https://github.com/jiangjiawei520/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>在个人博客中新增文章步骤记录</title>
    <link href="https://github.com/jiangjiawei520/post/3d72d147.html"/>
    <id>https://github.com/jiangjiawei520/post/3d72d147.html</id>
    <published>2025-09-17T09:05:33.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用cmd窗口或者vscode新增文章"><a href="#使用cmd窗口或者vscode新增文章" class="headerlink" title="使用cmd窗口或者vscode新增文章"></a>使用cmd窗口或者vscode新增文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 时间戳[如，2025-09-17]-文章名</span><br></pre></td></tr></table></figure><h2 id="调整文章的tag和categories用于分类和归档"><a href="#调整文章的tag和categories用于分类和归档" class="headerlink" title="调整文章的tag和categories用于分类和归档"></a>调整文章的tag和categories用于分类和归档</h2><h2 id="修改文章title，去除时间戳-如，2025-09-17"><a href="#修改文章title，去除时间戳-如，2025-09-17" class="headerlink" title="修改文章title，去除时间戳[如，2025-09-17-]"></a>修改文章title，去除时间戳[如，2025-09-17-]</h2><h2 id="书写文章"><a href="#书写文章" class="headerlink" title="书写文章"></a>书写文章</h2><h2 id="发布到源码，源码仓库自动同步到网站代码"><a href="#发布到源码，源码仓库自动同步到网站代码" class="headerlink" title="发布到源码，源码仓库自动同步到网站代码"></a>发布到源码，源码仓库自动同步到网站代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;使用cmd窗口或者vscode新增文章&quot;&gt;&lt;a href=&quot;#使用cmd窗口或者vscode新增文章&quot; class=&quot;headerlink&quot; title=&quot;使用cmd窗口或者vscode新增文章&quot;&gt;&lt;/a&gt;使用cmd窗口或者vscode新增文章&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new 时间戳[如，2025-09-17]-文章名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;调整文章的tag和categories用于分类和归档&quot;&gt;&lt;a href=&quot;#调整文章的tag和categories用于分类和归档&quot; class=&quot;headerlink&quot; title=&quot;调整文章的tag和categories用于分类和归档&quot;&gt;&lt;/a&gt;调整文章的tag和categories用于分类和归档&lt;/h2&gt;&lt;h2 id=&quot;修改文章title，去除时间戳-如，2025-09-17&quot;&gt;&lt;a href=&quot;#修改文章title，去除时间戳-如，2025-09-17&quot; class=&quot;headerlink&quot; title=&quot;修改文章title，去除时间戳[如，2025-09-17-]&quot;&gt;&lt;/a&gt;修改文章title，去除时间戳[如，2025-09-17-]&lt;/h2&gt;&lt;h2 id=&quot;书写文章&quot;&gt;&lt;a href=&quot;#书写文章&quot; class=&quot;headerlink&quot; title=&quot;书写文章&quot;&gt;&lt;/a&gt;书写文章&lt;/h2&gt;&lt;h2 id=&quot;发布到源码，源码仓库自动同步到网站代码&quot;&gt;&lt;a href=&quot;#发布到源码，源码仓库自动同步到网站代码&quot; class=&quot;headerlink&quot; title=&quot;发布到源码，源码仓库自动同步到网站代码&quot;&gt;&lt;/a&gt;发布到源码，源码仓库自动同步到网站代码&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的安装和配置</title>
    <link href="https://github.com/jiangjiawei520/post/bd826c0d.html"/>
    <id>https://github.com/jiangjiawei520/post/bd826c0d.html</id>
    <published>2025-09-17T08:53:23.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库的安装"><a href="#数据库的安装" class="headerlink" title="数据库的安装"></a>数据库的安装</h2><p>1.打开下载的mysql安装文件双击解压缩，运行“mysql-5.5.40-win32.msi”。 </p><p><img src="/imgs/12487c40a0aef8744f608d224bb5afba.jpeg" alt="img"></p><p><img src="/imgs/461adc624c0e19c77679f99cdb85ef5a.jpeg" alt="img"></p><p>2.选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续。 </p><p><img src="/imgs/77720f564128d211bfd10ead1b09e04e.jpeg" alt="img"></p><span id="more"></span><p>3.点选“Browse”，手动指定安装目录。</p><p><img src="/imgs/942b395a84b42952af8904051c0dbb97.jpeg" alt="img"></p><p> 4.填上安装目录，我的是“d:\Program Files (x86)\MySQL\My<a href="https://cloud.tencent.com/product/sqlserver?from_column=20065&from=20065">SQL Server</a> 5.0”，按“OK”继续。 </p><p><img src="/imgs/037bf392c67a6fd42892fa4b58a5f595.jpeg" alt="img"></p><p> 5.确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。 </p><p><img src="/imgs/c79f50316be916ed415a1841067dbeed.jpeg" alt="img"></p><p><img src="/imgs/d62d1bf1e4ab25b8b7c70acf258ffadd.jpeg" alt="img"></p><p><img src="/imgs/091a139f410b6d8f40ebcc6c4199197d.jpeg" alt="img"></p><p><img src="/imgs/cf1b3a3e77b99023462a3224618c6404.jpeg" alt="img"></p><p><img src="/imgs/bc1c0cbff850945208308cf2c6b79d14.jpeg" alt="img"></p><p> 6.正在安装中，请稍候，直到出现下面的界面, 则完成MYSQL的安装 </p><p><img src="/imgs/d804739c5e441e28918fcd1377b01fce.jpeg" alt="img"></p><h2 id="数据库的配置"><a href="#数据库的配置" class="headerlink" title="数据库的配置"></a>数据库的配置</h2><p>1.安装完成了，出现如下界面将进入mysql配置向导。 </p><p><img src="/imgs/3ba478c46eabb43cda53fec245fe9f44.jpeg" alt="img"></p><p> 2.选择配置方式，“Detailed Configuration（手动精确配置）”、“Standard Configuration（标准配置）”，我们选择“Detailed Configuration”，方便熟悉配置过程。 </p><p><img src="/imgs/9732c1e7658c4e6cbbc58724b9f58f20.jpeg" alt="img"></p><p> 3.选择服务器类型，“Developer Machine（开发测试类，mysql占用很少资源）”、“Server Machine（服务器类型，mysql占用较多资源）”、“Dedicated MySQL Server Machine（专门的<a href="https://cloud.tencent.com/product/tencentdb-catalog?from_column=20065&from=20065">数据库服务</a>器，mysql占用所有可用资源）” </p><p><img src="/imgs/5bb6e2ec8c7b27faec8c733f81a6ea70.jpeg" alt="img"></p><p> 4.选择mysql<a href="https://cloud.tencent.com/product/tencentdb-catalog?from_column=20065&from=20065">数据库</a>的大致用途，“Multifunctional Database（通用多功能型，好）”、“Transactional Database Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional Database Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。 </p><p><img src="/imgs/a30575272f04eca85e4b4be16181df1a.jpeg" alt="img"></p><p><img src="/imgs/1c439c96b8c0e52013862583876a7405.jpeg" alt="img"></p><p> 5.选择网站并发连接数，同时连接的数目，“Decision Support(DSS)&#x2F;OLAP（20个左右）”、“Online Transaction Processing(OLTP)（500个左右）”、“Manual Setting（手动设置，自己输一个数）” </p><p><img src="/imgs/d3f76570ff21ad8eaa889a5caa684a97.jpeg" alt="img"></p><p> 6.是否启用TCP&#x2F;IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable Strict Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续 </p><p><img src="/imgs/46417c6ef27eab362c69a4bc21948a03.jpeg" alt="img"></p><p> 7.就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按 “Next”继续 </p><p><img src="/imgs/1c17c822341fffee36065990eeb9fec1.jpeg" alt="img"></p><p> 8.选择是否将mysql安装为windows服务，还可以指定Service Name（服务标识名称），是否将mysql的bin目录加入到Windows PATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql.exe -uusername -ppassword;”就可以了，不用指出mysql.exe的完整地址，很方便），我这里全部打上了勾，Service Name不变。按“Next”继续。 </p><p><img src="/imgs/a38e77d809df47a1d6f607791955ee78.jpeg" alt="img"></p><p> 9.询问是否要修改默认root用户（超级管理）的密码。“Enable root access from remote machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。 </p><p><img src="/imgs/1be1b1980d405d513ee6ac568472c5cd.jpeg" alt="img"></p><p> 10.确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置。 </p><p><img src="/imgs/c4c29cb517d51ed3d1826ab4e11f3e60.jpeg" alt="img"></p><p><img src="/imgs/986b59e98491d2e87eacaa2b5ac21ef2.jpeg" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;数据库的安装&quot;&gt;&lt;a href=&quot;#数据库的安装&quot; class=&quot;headerlink&quot; title=&quot;数据库的安装&quot;&gt;&lt;/a&gt;数据库的安装&lt;/h2&gt;&lt;p&gt;1.打开下载的mysql安装文件双击解压缩，运行“mysql-5.5.40-win32.msi”。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/12487c40a0aef8744f608d224bb5afba.jpeg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/461adc624c0e19c77679f99cdb85ef5a.jpeg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/77720f564128d211bfd10ead1b09e04e.jpeg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="windows" scheme="https://github.com/jiangjiawei520/categories/windows/"/>
    
    <category term="mysql" scheme="https://github.com/jiangjiawei520/categories/windows/mysql/"/>
    
    
    <category term="windows" scheme="https://github.com/jiangjiawei520/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>日常使用工具软件</title>
    <link href="https://github.com/jiangjiawei520/post/39fefd66.html"/>
    <id>https://github.com/jiangjiawei520/post/39fefd66.html</id>
    <published>2024-06-03T18:17:51.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="谷歌翻译IP扫描（GoogleTranslate-IPFinder）"><a href="#谷歌翻译IP扫描（GoogleTranslate-IPFinder）" class="headerlink" title="谷歌翻译IP扫描（GoogleTranslate_IPFinder）"></a>谷歌翻译IP扫描（GoogleTranslate_IPFinder）</h2><p>​谷歌翻译 API 服务器（<code>translate.googleapis.com</code>）在中国大陆的 IP 地址扫描、测速工具。</p><p>​<a href="https://github.com/GoodCoder666/GoogleTranslate_IPFinder">https://github.com/GoodCoder666/GoogleTranslate_IPFinder</a></p><h2 id="海螺桌面"><a href="#海螺桌面" class="headerlink" title="海螺桌面"></a>海螺桌面</h2><p>​桌面管理工具</p><p>​<a href="https://www.conchdesktop.com/">https://www.conchdesktop.com/</a></p><h2 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h2><p>​github相关代码管理工具</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;谷歌翻译IP扫描（GoogleTranslate-IPFinder）&quot;&gt;&lt;a href=&quot;#谷歌翻译IP扫描（GoogleTranslate-IPFinder）&quot; class=&quot;headerlink&quot; title=&quot;谷歌翻译IP扫描（GoogleTranslate_IPFinder）&quot;&gt;&lt;/a&gt;谷歌翻译IP扫描（GoogleTranslate_IPFinder）&lt;/h2&gt;&lt;p&gt;​	谷歌翻译 API 服务器（&lt;code&gt;translate.googleapis.com&lt;/code&gt;）在中国大陆的 IP 地址扫描、测速工具。&lt;/p&gt;
&lt;p&gt;​	&lt;a href=&quot;https://github.com/GoodCoder666/GoogleTranslate_IPFinder&quot;&gt;https://github.com/GoodCoder666/GoogleTranslate_IPFinder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;海螺桌面&quot;&gt;&lt;a href=&quot;#海螺桌面&quot; class=&quot;headerlink&quot; title=&quot;海螺桌面&quot;&gt;&lt;/a&gt;海螺桌面&lt;/h2&gt;&lt;p&gt;​	桌面管理工具&lt;/p&gt;
&lt;p&gt;​	&lt;a href=&quot;https://www.conchdesktop.com/&quot;&gt;https://www.conchdesktop.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Visual-Studio-Code&quot;&gt;&lt;a href=&quot;#Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio Code&quot;&gt;&lt;/a&gt;Visual Studio Code&lt;/h2&gt;&lt;p&gt;​	github相关代码管理工具&lt;/p&gt;</summary>
    
    
    
    <category term="Windows" scheme="https://github.com/jiangjiawei520/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://github.com/jiangjiawei520/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Chrome离线安装</title>
    <link href="https://github.com/jiangjiawei520/post/fe2744a8.html"/>
    <id>https://github.com/jiangjiawei520/post/fe2744a8.html</id>
    <published>2024-05-21T09:52:15.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在线安装包下载"><a href="#在线安装包下载" class="headerlink" title="在线安装包下载"></a>在线安装包下载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.google.cn/chrome/index.html</span><br></pre></td></tr></table></figure><h2 id="离线安装包下载"><a href="#离线安装包下载" class="headerlink" title="离线安装包下载"></a>离线安装包下载</h2><p>​原来浏览器地址的最后面加上”?standalone&#x3D;1”，<strong>Standalone</strong>这个单词，它本身的意思就是脱机的，单独的意思，即不依赖网络而存在的本地安装版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.google.cn/chrome/index.html?standalone=1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;在线安装包下载&quot;&gt;&lt;a href=&quot;#在线安装包下载&quot; class=&quot;headerlink&quot; title=&quot;在线安装包下载&quot;&gt;&lt;/a&gt;在线安装包下载&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="Windows" scheme="https://github.com/jiangjiawei520/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://github.com/jiangjiawei520/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>MobaXterm有用配置</title>
    <link href="https://github.com/jiangjiawei520/post/b983b141.html"/>
    <id>https://github.com/jiangjiawei520/post/b983b141.html</id>
    <published>2024-05-01T14:16:00.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关闭自动弹出SFTP"><a href="#关闭自动弹出SFTP" class="headerlink" title="关闭自动弹出SFTP"></a>关闭自动弹出SFTP</h2><p>Moba在连接上远程电脑之后，将自动打开左侧的SFTP侧边栏。有时我们并不需要SFTP，同时主窗口是黑色的，SFTP又是白色的，显得有点刺眼，因此可以将自动弹出SFTP功能关闭掉。</p><p>在菜单栏点击 「settings」 –&gt; 「Configuration」，在弹出的对话框中选择 「SSH」，再将 「automaticall switch to SSH-browser tab after login」 前面的对勾去掉即可。</p><p><img src="/imgs/image-20240531145708740.png" alt="image-20240531145708740"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关闭自动弹出SFTP&quot;&gt;&lt;a href=&quot;#关闭自动弹出SFTP&quot; class=&quot;headerlink&quot; title=&quot;关闭自动弹出SFTP&quot;&gt;&lt;/a&gt;关闭自动弹出SFTP&lt;/h2&gt;&lt;p&gt;Moba在连接上远程电脑之后，将自动打开左侧的SFTP侧边栏。有时我们并不需</summary>
      
    
    
    
    <category term="linux" scheme="https://github.com/jiangjiawei520/categories/linux/"/>
    
    <category term="shell" scheme="https://github.com/jiangjiawei520/categories/linux/shell/"/>
    
    
    <category term="MobaXterm" scheme="https://github.com/jiangjiawei520/tags/MobaXterm/"/>
    
    <category term="shell" scheme="https://github.com/jiangjiawei520/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>日常更新记录</title>
    <link href="https://github.com/jiangjiawei520/post/49a13fa5.html"/>
    <id>https://github.com/jiangjiawei520/post/49a13fa5.html</id>
    <published>2024-05-01T09:52:15.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9e57a9812d0d65ef63c4a06a0835e18b43e94015b7821d9b44631e7f0bd0b75b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="更新记录" scheme="https://github.com/jiangjiawei520/categories/%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="更新记录" scheme="https://github.com/jiangjiawei520/tags/%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Python之vscode将项目打包成exe文件</title>
    <link href="https://github.com/jiangjiawei520/post/b12f19ab.html"/>
    <id>https://github.com/jiangjiawei520/post/b12f19ab.html</id>
    <published>2024-04-30T15:06:40.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><p>环境：python 3.8(否则无法下载安装PySide2)</p><h5 id="1、打开VSCode并打开你的Python项目。"><a href="#1、打开VSCode并打开你的Python项目。" class="headerlink" title="1、打开VSCode并打开你的Python项目。"></a>1、打开VSCode并打开你的Python项目。</h5><h5 id="2、在VSCode终端中安装pyinstaller："><a href="#2、在VSCode终端中安装pyinstaller：" class="headerlink" title="2、在VSCode终端中安装pyinstaller："></a>2、在VSCode终端中安装<code>pyinstaller</code>：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><h5 id="3、运行以下命令使用pyinstaller将Python项目打包成exe文件："><a href="#3、运行以下命令使用pyinstaller将Python项目打包成exe文件：" class="headerlink" title="3、运行以下命令使用pyinstaller将Python项目打包成exe文件："></a>3、运行以下命令使用<code>pyinstaller</code>将Python项目打包成exe文件：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F your_script.py --name=my_program</span><br></pre></td></tr></table></figure><h5 id="其中your-script-py是你的Python脚本的文件名；my-program为生成的应用名称"><a href="#其中your-script-py是你的Python脚本的文件名；my-program为生成的应用名称" class="headerlink" title="其中your_script.py是你的Python脚本的文件名；my_program为生成的应用名称"></a>其中<code>your_script.py</code>是你的Python脚本的文件名；my_program为生成的应用名称</h5><h5 id="4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。"><a href="#4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。" class="headerlink" title="4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。"></a>4、打包完成后，在你的项目目录中会生成一个<code>dist</code>文件夹，里面包含了打包后的可执行文件。</h5><blockquote><p>  <strong><strong>请注意，使用<code>pyinstaller</code>打包成exe文件时可能会遇到一些依赖项缺失或路径问题，你可能需要进行一些额外的配置。另外，如果你的项目有一些特殊的资源文件（如图片、配置文件等），你也需要确保这些资源文件能够被正确地打包进exe文件中。</strong></strong> </p></blockquote><span id="more"></span><h4 id="演示步骤"><a href="#演示步骤" class="headerlink" title="演示步骤"></a>演示步骤</h4><h5 id="1、打开VSCode并打开你的Python项目。-1"><a href="#1、打开VSCode并打开你的Python项目。-1" class="headerlink" title="1、打开VSCode并打开你的Python项目。"></a>1、打开VSCode并打开你的Python项目。</h5><img alt="" height="1200" src="/imgs/32340822a74047e3b51c3b9ad858c991.png" width="1200"><h5 id="2、在VSCode终端中安装pyinstaller：-1"><a href="#2、在VSCode终端中安装pyinstaller：-1" class="headerlink" title="2、在VSCode终端中安装pyinstaller："></a>2、在VSCode终端中安装<code>pyinstaller</code>：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a><img alt="" height="1200" src="/imgs/423ed294b3064d28a988a77164cda1c2.png" width="1200"></h5><blockquote><p>  我之前已经安装过了，所以显示的是下面的样子。 </p></blockquote><img alt="" height="1200" src="/imgs/b927321e516844f698be54e6cdcf02b8.png" width="1200"><h5 id="3、运行以下命令使用pyinstaller将Python项目打包成exe文件：-1"><a href="#3、运行以下命令使用pyinstaller将Python项目打包成exe文件：-1" class="headerlink" title="3、运行以下命令使用pyinstaller将Python项目打包成exe文件："></a>3、运行以下命令使用<code>pyinstaller</code>将Python项目打包成exe文件：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F your_script.py</span><br></pre></td></tr></table></figure><img alt="" height="1200" src="/imgs/d79d52bdf321469bbea4c2e19fc3b5ea.png" width="1200"><blockquote><p>  **打包完成 ** </p></blockquote><img alt="" height="1200" src="/imgs/5969cef4ca4b49b1a4926b6925a54546.png" width="1200"><img alt="" height="136" src="/imgs/22b6e1d144724b49be931c552ff5ad3c.png" width="706"><h5 id="4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。-1"><a href="#4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。-1" class="headerlink" title="4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。"></a>4、打包完成后，在你的项目目录中会生成一个<code>dist</code>文件夹，里面包含了打包后的可执行文件。</h5><p><img alt="" height="174" src="/imgs/7b171c11fb2f454b9c8bfe6785ed4ebc.png" width="391"> </p><img alt="" height="228" src="/imgs/86d32b54438641af876a1343e62de693.png" width="391"><img alt="" height="372" src="/imgs/f7d9e2f5ed42439d92fc66ce6f4c212e.png" width="859"><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><blockquote><p>  <strong>运行成功</strong> </p></blockquote><img alt="" height="784" src="/imgs/6e9b480bf7564e7583a33fb6e2d63eb6.png" width="1176"><img alt="" height="253" src="/imgs/48f9f74d673c4a60a49ad9106ce8dd08.png" width="265">]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h4&gt;&lt;p&gt;环境：python 3.8(否则无法下载安装PySide2)&lt;/p&gt;
&lt;h5 id=&quot;1、打开VSCode并打开你的Python项目。&quot;&gt;&lt;a href=&quot;#1、打开VSCode并打开你的Python项目。&quot; class=&quot;headerlink&quot; title=&quot;1、打开VSCode并打开你的Python项目。&quot;&gt;&lt;/a&gt;1、打开VSCode并打开你的Python项目。&lt;/h5&gt;&lt;h5 id=&quot;2、在VSCode终端中安装pyinstaller：&quot;&gt;&lt;a href=&quot;#2、在VSCode终端中安装pyinstaller：&quot; class=&quot;headerlink&quot; title=&quot;2、在VSCode终端中安装pyinstaller：&quot;&gt;&lt;/a&gt;2、在VSCode终端中安装&lt;code&gt;pyinstaller&lt;/code&gt;：&lt;/h5&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install pyinstaller&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;3、运行以下命令使用pyinstaller将Python项目打包成exe文件：&quot;&gt;&lt;a href=&quot;#3、运行以下命令使用pyinstaller将Python项目打包成exe文件：&quot; class=&quot;headerlink&quot; title=&quot;3、运行以下命令使用pyinstaller将Python项目打包成exe文件：&quot;&gt;&lt;/a&gt;3、运行以下命令使用&lt;code&gt;pyinstaller&lt;/code&gt;将Python项目打包成exe文件：&lt;/h5&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pyinstaller -F your_script.py --name=my_program&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;其中your-script-py是你的Python脚本的文件名；my-program为生成的应用名称&quot;&gt;&lt;a href=&quot;#其中your-script-py是你的Python脚本的文件名；my-program为生成的应用名称&quot; class=&quot;headerlink&quot; title=&quot;其中your_script.py是你的Python脚本的文件名；my_program为生成的应用名称&quot;&gt;&lt;/a&gt;其中&lt;code&gt;your_script.py&lt;/code&gt;是你的Python脚本的文件名；my_program为生成的应用名称&lt;/h5&gt;&lt;h5 id=&quot;4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。&quot;&gt;&lt;a href=&quot;#4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。&quot; class=&quot;headerlink&quot; title=&quot;4、打包完成后，在你的项目目录中会生成一个dist文件夹，里面包含了打包后的可执行文件。&quot;&gt;&lt;/a&gt;4、打包完成后，在你的项目目录中会生成一个&lt;code&gt;dist&lt;/code&gt;文件夹，里面包含了打包后的可执行文件。&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;&lt;strong&gt;请注意，使用&lt;code&gt;pyinstaller&lt;/code&gt;打包成exe文件时可能会遇到一些依赖项缺失或路径问题，你可能需要进行一些额外的配置。另外，如果你的项目有一些特殊的资源文件（如图片、配置文件等），你也需要确保这些资源文件能够被正确地打包进exe文件中。&lt;/strong&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/categories/python/"/>
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python之算法双指针</title>
    <link href="https://github.com/jiangjiawei520/post/d6f65b2b.html"/>
    <id>https://github.com/jiangjiawei520/post/d6f65b2b.html</id>
    <published>2024-04-30T15:06:07.000Z</published>
    <updated>2025-09-17T02:01:02.279Z</updated>
    
    <content type="html"><![CDATA[<p>双指针（Two Pointers）：指的是在遍历元素的过程中，不是使用单个指针进行访问，而是使用两个指针进行访问，从而达到相应的目的。</p><p>双指针分为「对撞指针」、「快慢指针」、「分离双指针」。</p><blockquote><p>          对撞指针：两个指针方向相反。适合解决查找有序数组中满足某些约束条件的一组元素问题、字符串反转问题。<br>           快慢指针：两个指针方向相同。适合解决数组中的移动、删除元素问题，或者链表中的判断是否有环、长度问题。<br>           分离双指针：两个指针分别属于不同的数组 &#x2F; 链表。适合解决有序数组合并，求交集、并集问题。 </p></blockquote><h4 id="一，对撞指针"><a href="#一，对撞指针" class="headerlink" title="一，对撞指针"></a>一，对撞指针</h4><h5 id="1-盛最多水的容器"><a href="#1-盛最多水的容器" class="headerlink" title="1.盛最多水的容器"></a>1.盛最多水的容器</h5><img src="/imgs/8081a82411af4a6bbee48be7ecf8dadf.png" alt=""><span id="more"></span><blockquote><p>  输入：[1,8,6,2,5,4,8,3,7]<br> 输出：49<br> 解释：图中垂直线代表输入数组<br> [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。 </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def maxArea(self, height: List[int]) -&gt; int:</span><br><span class="line">        result = 0</span><br><span class="line">        left = 0</span><br><span class="line">        right = len(height) - 1</span><br><span class="line">        while left &lt; right:</span><br><span class="line">            # 求解矩形的面积</span><br><span class="line">            l = right - left</span><br><span class="line">            h = min(height[left], height[right])</span><br><span class="line">            area = l*h</span><br><span class="line">            # 需要不断维持更新最大值</span><br><span class="line">            result = max(result, area)</span><br><span class="line">            # 应该使得 较低直线的高度尽可能的高</span><br><span class="line">            # 当left指向的直线高度较低，向右移动</span><br><span class="line">            if height[left] &lt; height[right]:</span><br><span class="line">                left += 1</span><br><span class="line">            # 当right指向的直线高度较低，向左移动</span><br><span class="line">            else:</span><br><span class="line">                right -= 1</span><br><span class="line">        return result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-反转字符串"><a href="#2-反转字符串" class="headerlink" title="2.反转字符串"></a>2.反转字符串</h5><blockquote><p>  输入：s &#x3D; [“h”,“e”,“l”,“l”,“o”]<br> 输出：[“o”,“l”,“l”,“e”,“h”] </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def reverseString(self, s: List[str]) -&gt; None:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Do not return anything, modify s in-place instead.</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        left = 0</span><br><span class="line">        right = len(s) - 1</span><br><span class="line">        while left &lt; right:</span><br><span class="line">            s[left], s[right] = s[right], s[left]</span><br><span class="line">            left += 1</span><br><span class="line">            right -= 1</span><br><span class="line">        return s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二，快慢指针"><a href="#二，快慢指针" class="headerlink" title="二，快慢指针"></a>二，快慢指针</h4><h5 id="删除有序数组中的重复项"><a href="#删除有序数组中的重复项" class="headerlink" title="删除有序数组中的重复项"></a>删除有序数组中的重复项</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：2, nums = [1,2]</span><br><span class="line">解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def removeDuplicates(self, nums: List[int]) -&gt; int:</span><br><span class="line">        # 定义两个指针</span><br><span class="line">        slow = 0</span><br><span class="line">        fast = 1</span><br><span class="line">        # 可以视作把非重复元素放在数组左边</span><br><span class="line">        while fast &lt; len(nums):</span><br><span class="line">            if nums[slow] != nums[fast]:</span><br><span class="line">                slow += 1</span><br><span class="line">                nums[slow] = nums[fast]</span><br><span class="line">            fast += 1</span><br><span class="line">        return slow + 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="三，分离指针"><a href="#三，分离指针" class="headerlink" title="三，分离指针"></a>三，分离指针</h4><h5 id="两个数组的交集"><a href="#两个数组的交集" class="headerlink" title="两个数组的交集"></a>两个数组的交集</h5><blockquote><p>  输入：nums1 &#x3D; [1,2,2,1], nums2 &#x3D; [2,2]<br> 输出：[2] </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def intersection(self, nums1: List[int], nums2: List[int]) -&gt; List[int]:</span><br><span class="line">        # 分离双指针一般用于处理有序数组合并，求交集、并集问题</span><br><span class="line">        # 1 先将两个数组排序</span><br><span class="line">        nums1.sort()</span><br><span class="line">        nums2.sort()</span><br><span class="line">        # 使用双指针求交集</span><br><span class="line">        point1 = 0</span><br><span class="line">        point2 = 0</span><br><span class="line">        result = []</span><br><span class="line">        while point1 &lt; len(nums1) and point2 &lt; len(nums2):</span><br><span class="line">            # 元素同时出现在两个数组</span><br><span class="line">            if nums1[point1] == nums2[point2]:</span><br><span class="line">                # 保证数组没有重复元素</span><br><span class="line">                if nums1[point1] not in result:</span><br><span class="line">                    result.append(nums1[point1])</span><br><span class="line">                # 齐头并进</span><br><span class="line">                point1 += 1</span><br><span class="line">                point2 += 1</span><br><span class="line">            # point1落后于point2，需要追赶</span><br><span class="line">            elif nums1[point1] &lt; nums2[point2]:</span><br><span class="line">                point1 += 1</span><br><span class="line">            # point2落后于point1，需要追赶   </span><br><span class="line">            else:</span><br><span class="line">                point2 += 1</span><br><span class="line">        return result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="其他类型"><a href="#其他类型" class="headerlink" title="其他类型"></a>其他类型</h4><h5 id="合并两个有序数组"><a href="#合并两个有序数组" class="headerlink" title="合并两个有序数组"></a>合并两个有序数组</h5><blockquote><p>  输入：nums1 &#x3D; [1,2,3,0,0,0], m &#x3D; 3, nums2 &#x3D; [2,5,6], n &#x3D; 3<br> 输出：[1,2,2,3,5,6] </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 定义两个指针，分别指向数组的尾部</span><br><span class="line">p1 = m-1</span><br><span class="line">p2 = n-1</span><br><span class="line">p = m + n - 1</span><br><span class="line">while p1 &gt;= 0 and p2 &gt;= 0:</span><br><span class="line">    if nums1[p1] &lt;= nums2[p2]:</span><br><span class="line">        nums1[p] = nums2[p2]</span><br><span class="line">        p2 -= 1</span><br><span class="line">    else:</span><br><span class="line">        nums1[p] = nums1[p1]</span><br><span class="line">        p1 -= 1</span><br><span class="line">    p -= 1</span><br><span class="line"># 最后把nums2中的剩余元素赋值到nums1中</span><br><span class="line">nums1[:p2+1] = nums2[:p2+1]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="删除有序数组中的重复项-II"><a href="#删除有序数组中的重复项-II" class="headerlink" title="删除有序数组中的重复项 II"></a>删除有序数组中的重复项 II</h4><p>给你一个有序数组 nums ，请你 原地 删除重复出现的元素，使每个元素 最多出现两次 ，返回删除后数组的新长度。<br> 不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p><blockquote><p>  输入：nums &#x3D; [1,1,1,2,2,3]<br> 输出：5, nums &#x3D; [1,1,2,2,3] </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def removeDuplicates(self, nums: List[int]) -&gt; int:</span><br><span class="line">        slow = 2</span><br><span class="line">        fast = 2</span><br><span class="line">        # 因为有序，所以当 nums[slow-2] = nums[slow]时，</span><br><span class="line">        # 必有nums[slow] = nums[slow-1] = nums[slow-2]</span><br><span class="line">        # 不相等时进行添加</span><br><span class="line">        while fast &lt; len(nums):</span><br><span class="line">            if nums[slow-2] != nums[fast]:</span><br><span class="line">                nums[slow] = nums[fast]</span><br><span class="line">                slow += 1</span><br><span class="line">            fast += 1</span><br><span class="line">        return slow</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="三位数之和"><a href="#三位数之和" class="headerlink" title="三位数之和"></a>三位数之和</h4><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c &#x3D; 0 ？请你找出所有和为 0 且不重复的三元组。<br> 注意：答案中不可以包含重复的三元组。</p><blockquote><p>  输入：nums &#x3D; [-1,0,1,2,-1,-4]<br> 输出：[[-1,-1,2],[-1,0,1]] </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def threeSum(self, nums: List[int]) -&gt; List[List[int]]:</span><br><span class="line">        result = []                  # 结果输出</span><br><span class="line">        n = len(nums)</span><br><span class="line">        # 先将数组递增排列</span><br><span class="line">        nums.sort()</span><br><span class="line">        # 定义双指针 a, left, right</span><br><span class="line">        for i in range(n):</span><br><span class="line">            if i &gt; 0 and nums[i] == nums[i-1]:</span><br><span class="line">                continue</span><br><span class="line">            left = i+1</span><br><span class="line">            right = n-1</span><br><span class="line">            # 双指针寻找区间</span><br><span class="line">            while left &lt; right:</span><br><span class="line">                # 答案中不可以包含重复的三元组，对于重复的元素直接跳过</span><br><span class="line">                while left &lt; right and left &gt; i+1 and nums[left] == nums[left-1]:</span><br><span class="line">                    left += 1</span><br><span class="line">                while left &lt; right and right &lt; n-1 and nums[right] == nums[right+1]:</span><br><span class="line">                    right -= 1</span><br><span class="line">                # 满足条件的三元组</span><br><span class="line">                if left &lt; right and nums[i] + nums[left] + nums[right] == 0:</span><br><span class="line">                    result.append([nums[i], nums[left], nums[right]])</span><br><span class="line">                    left += 1</span><br><span class="line">                    right -= 1</span><br><span class="line">                elif nums[i] + nums[left] + nums[right] &gt; 0:</span><br><span class="line">                    right -= 1</span><br><span class="line">                else:</span><br><span class="line">                    left += 1</span><br><span class="line">        return result</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上问题都来源于力扣：</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;双指针（Two Pointers）：指的是在遍历元素的过程中，不是使用单个指针进行访问，而是使用两个指针进行访问，从而达到相应的目的。&lt;/p&gt;
&lt;p&gt;双指针分为「对撞指针」、「快慢指针」、「分离双指针」。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;          对撞指针：两个指针方向相反。适合解决查找有序数组中满足某些约束条件的一组元素问题、字符串反转问题。&lt;br&gt;           快慢指针：两个指针方向相同。适合解决数组中的移动、删除元素问题，或者链表中的判断是否有环、长度问题。&lt;br&gt;           分离双指针：两个指针分别属于不同的数组 &amp;#x2F; 链表。适合解决有序数组合并，求交集、并集问题。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一，对撞指针&quot;&gt;&lt;a href=&quot;#一，对撞指针&quot; class=&quot;headerlink&quot; title=&quot;一，对撞指针&quot;&gt;&lt;/a&gt;一，对撞指针&lt;/h4&gt;&lt;h5 id=&quot;1-盛最多水的容器&quot;&gt;&lt;a href=&quot;#1-盛最多水的容器&quot; class=&quot;headerlink&quot; title=&quot;1.盛最多水的容器&quot;&gt;&lt;/a&gt;1.盛最多水的容器&lt;/h5&gt;&lt;img src=&quot;/imgs/8081a82411af4a6bbee48be7ecf8dadf.png&quot; alt=&quot;&quot;&gt;</summary>
    
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/categories/python/"/>
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python之__repr__</title>
    <link href="https://github.com/jiangjiawei520/post/c113cf7f.html"/>
    <id>https://github.com/jiangjiawei520/post/c113cf7f.html</id>
    <published>2024-04-28T15:19:01.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<p>__repr__是Python中的一个特殊方法，用于返回对象的可打印字符串表示形式。它应该返回一个字符串，该字符串应该是一个有效的Python表达式，可以用来创建该对象的副本。通常情况下，__repr__方法的返回值应该是一个能够明确表示对象的字符串。</p><p>例如，假设我们有一个名为Person的类，它有两个属性：name和age。我们可以为Person类定义一个__repr__方法来返回该对象的字符串表示形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person:</span><br><span class="line">    def __init__(self, name, age):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">    </span><br><span class="line">    def __repr__(self):</span><br><span class="line">        return f&quot;Person(name=&#x27;&#123;self.name&#125;&#x27;, age=&#123;self.age&#125;)&quot;</span><br></pre></td></tr></table></figure><p>当我们打印一个Person对象时，它将调用__repr__方法来获取其字符串表示形式： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">person = Person(&quot;Alice&quot;, 25)</span><br><span class="line">print(person)  # 输出: Person(name=&#x27;Alice&#x27;, age=25)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;__repr__是Python中的一个特殊方法，用于返回对象的可打印字符串表示形式。它应该返回一个字符串，该字符串应该是一个有效的Python表达式，可以用来创建该对象的副本。通常情况下，__repr__方法的返回值应该是一个能够明确表示对象的字符串。&lt;/p&gt;
&lt;p&gt;例如，</summary>
      
    
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/categories/python/"/>
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python之可见性和装饰器</title>
    <link href="https://github.com/jiangjiawei520/post/acd3e07f.html"/>
    <id>https://github.com/jiangjiawei520/post/acd3e07f.html</id>
    <published>2024-04-28T14:12:36.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="可见性"><a href="#可见性" class="headerlink" title="可见性"></a>可见性</h2><p>​属性通常设置为private或protected，__name表示private属性，_name表示protected属性<br>​方法通常设置为public</p><h3 id="python中以单下划线和双下滑线开头的属性和方法"><a href="#python中以单下划线和双下滑线开头的属性和方法" class="headerlink" title="python中以单下划线和双下滑线开头的属性和方法"></a>python中以单下划线和双下滑线开头的属性和方法</h3><p>​以单下划线 (_) 开头的属性和方法（内部属性&#x2F;方法）：私有化属性或⽅法，类内部、类对象和⼦类可以访问。其他模块通过from module_name import *不能将其导入；但通过import module_name依然可以导入。</p><p>​以双下划线 (__) 开头并且不以双下划线结尾的属性和方法（私有属性&#x2F;方法）：某个属性或方法只能在当前类内部被使用，类外部不能调用。不能调用是因为Python私有属性存储时其名字做了修改，将“__属性名”存储时重命名为”_类名__属性名”。其他模块通过from module_name import *不能将其导入；但通过import module_name依然可以导入。</p><span id="more"></span><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><h4 id="双下划线开头私有属性只能在当前类内部被访问，类外部直接访问时报错"><a href="#双下划线开头私有属性只能在当前类内部被访问，类外部直接访问时报错" class="headerlink" title="双下划线开头私有属性只能在当前类内部被访问，类外部直接访问时报错"></a>双下划线开头私有属性只能在当前类内部被访问，类外部直接访问时报错</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Student:</span><br><span class="line">    def __init__(self, name, age):</span><br><span class="line">        # 创建私有属性</span><br><span class="line">        self.__name = name</span><br><span class="line">        # 创建公共属性</span><br><span class="line">        self.age = age</span><br><span class="line"> </span><br><span class="line">    def study(self, course_name):</span><br><span class="line">        print(&quot;&#123;&#125;正在学习&#123;&#125;&quot;.format(self.__name, course_name))  # self.__name 只能在当前类内部被调用</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">stu = Student(&quot;张三&quot;, 8)</span><br><span class="line"># print(stu.__name)  # &#x27;Student&#x27; object has no attribute &#x27;__name&#x27;  私有属性类不能在类外部直接访问</span><br><span class="line"> </span><br><span class="line">#类外部间接访问私有属性：通过公共方法在类内部访问私有属性</span><br><span class="line">stu.study(&quot;程序设计&quot;)  # 张三正在学习程序设计</span><br><span class="line"> </span><br><span class="line">print(stu.age)  # 8</span><br></pre></td></tr></table></figure><h4 id="单下划线开头的内部属性可以在类外部直接访问"><a href="#单下划线开头的内部属性可以在类外部直接访问" class="headerlink" title="单下划线开头的内部属性可以在类外部直接访问"></a>单下划线开头的内部属性可以在类外部直接访问</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class MyClass:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self._internal_var = &quot;Internal Variable&quot;</span><br><span class="line">        self.__private_var = &quot;Private Variable&quot;</span><br><span class="line"> </span><br><span class="line">    def _internal_method(self):</span><br><span class="line">        print(&quot;This is an internal method.&quot;)</span><br><span class="line"> </span><br><span class="line">    def __private_method(self):</span><br><span class="line">        print(&quot;This is a private method.&quot;)</span><br><span class="line"> </span><br><span class="line">    def public_method(self):</span><br><span class="line">        print(&quot;This is a public method.&quot;)</span><br><span class="line">        self._internal_method()</span><br><span class="line">        self.__private_method()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">obj = MyClass()</span><br><span class="line">print(obj._internal_var)  # 内部属性可以在类外部被直接访问。输出: Internal Variable</span><br><span class="line"> </span><br><span class="line"># print(obj.__private_var)  # 报错。原因是私有属性无法在类外部直接访问</span><br><span class="line"> </span><br><span class="line">obj.public_method()  # 输出: This is a public method.</span><br><span class="line">                     #      This is an internal method.</span><br><span class="line">                     #      This is a private method.</span><br></pre></td></tr></table></figure><h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><p>​装饰器的作用：不修改被修饰对象源代码和调用方式前提下，为被修饰对象添加额外功能（即有新需求时，可以对现有代码进行扩展，但是不能对源代码进行修改）。<br>​装饰器的使用方法：通常放在类、函数或方法声明之前，通过@符号将装饰器应用于类、函数或方法。<br>​装饰器的使用场景：插入日志、性能测试、事务处理、缓存、权限校验等应用场景，有了装饰器，就可以抽离出大量与函数功能本身无关的雷同代码并继续重用。</p><h3 id="无参装饰器"><a href="#无参装饰器" class="headerlink" title="无参装饰器"></a>无参装饰器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 定义一个装饰器</span><br><span class="line">def display_time(func):  # 参数func等同于：调用装饰器后要运行哪个函数，则将哪个函数带入</span><br><span class="line">    def wrapper():  # 运行这个函数时需要运行哪些内容</span><br><span class="line">        t1 = time.time()  # 启一个记录初始时间的定时器</span><br><span class="line">        # func()  # 运行一下装饰器中调用的函数（但是这种方法装饰器中调用的函数返回值不会传入装饰器中）</span><br><span class="line">        res = func()  # 将装饰器中调用的函数返回值记录一下放在res中</span><br><span class="line">        t2 = time.time()  # 启一个记录截止时间的定时器</span><br><span class="line">        print(t2 - t1)</span><br><span class="line">        return res  # 在装饰器中将函数的返回结果再次返回</span><br><span class="line">    return wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 定义一个求质数的方法</span><br><span class="line">def is_prime(num):</span><br><span class="line">    if num &lt;= 1:</span><br><span class="line">        return False</span><br><span class="line">    if num == 2:</span><br><span class="line">        return True</span><br><span class="line">    for i in range(2, num):</span><br><span class="line">        if num % i == 0:</span><br><span class="line">            return False</span><br><span class="line">    return True</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">@display_time  # 等同于：count_prime_nums=display_time(count_prime_nums)</span><br><span class="line">def count_prime_nums():  # 求2~10000之间的所有质数</span><br><span class="line">    count1 = 0</span><br><span class="line">    for i in range(2, 10000):</span><br><span class="line">        if is_prime(i):</span><br><span class="line">            # print(i)</span><br><span class="line">            count1 += 1  # 统计质数总个数</span><br><span class="line">    return count1</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    c = count_prime_nums()</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure><p>总结：</p><p>​python解释器解释到@display_time就会调用display_time函数。<br>​调用display_time函数时，会将被装饰函数count_prime_nums当做实参传入，返回一个闭包函数wrapper，将wrapper赋值给函数名count_prime_nums。<br>​调用count_prime_nums函数，执行的是wrapper()，在wrapper的函数体内再执行原始的count_prime_nums函数。<br>​当被装饰函数count_prime_nums有返回值时，wrapper函数则需要将被装饰函数的值进行返回。如果不返回，则输出的结果就是None。</p><h3 id="有参装饰器"><a href="#有参装饰器" class="headerlink" title="有参装饰器"></a>有参装饰器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 定义一个装饰器</span><br><span class="line">def display_time(func):  # 参数func等同于：调用装饰器后要运行哪个函数，则将哪个函数带入</span><br><span class="line">    def wrapper(*args):  # 运行这个函数时需要运行哪些内容</span><br><span class="line">        t1 = time.time()  # 启一个记录初始时间的定时器</span><br><span class="line">        # func()  # 运行一下装饰器中调用的函数（但是这种方法装饰器中调用的函数返回值不会传入装饰器中）</span><br><span class="line">        res = func(*args)  # 将装饰器中调用的函数返回值记录一下放在res中</span><br><span class="line">        t2 = time.time()  # 启一个记录截止时间的定时器</span><br><span class="line">        print(t2 - t1)</span><br><span class="line">        return res  # 在装饰器中将函数的返回结果再次返回</span><br><span class="line">    return wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 定义一个求质数的方法</span><br><span class="line">def is_prime(num):</span><br><span class="line">    if num &lt;= 1:</span><br><span class="line">        return False</span><br><span class="line">    if num == 2:</span><br><span class="line">        return True</span><br><span class="line">    for i in range(2, num):</span><br><span class="line">        if num % i == 0:</span><br><span class="line">            return False</span><br><span class="line">    return True</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">@display_time  # 调用装饰器</span><br><span class="line">def count_prime_nums(max_num):  # 求2~10000之间的所有质数</span><br><span class="line">    count1 = 0</span><br><span class="line">    for i in range(2, max_num):</span><br><span class="line">        if is_prime(i):</span><br><span class="line">            # print(i)</span><br><span class="line">            count1 += 1  # 统计2~10000之前的质数总个数</span><br><span class="line">    return count1</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    c = count_prime_nums(2000)</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure><p>总结：</p><p>​被装饰函数func的参数是什么样子，wrapper的参数就应该什么样子<br>​func的返回值什么样子，wrapper的返回值就应该什么样子<br>​func的属性什么样子，wrapper的属性就应该什么样子 &#x3D;&#x3D;》from functools import wraps</p><h2 id="property对象和装饰器"><a href="#property对象和装饰器" class="headerlink" title="property对象和装饰器"></a>property对象和装饰器</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>简化访问私有属性，提供开放性接口，供外界访问。</p><h3 id="property实现原理"><a href="#property实现原理" class="headerlink" title="property实现原理"></a>property实现原理</h3><p>属性定义为私有属性时，往往需要两个函数分别用来获取属性值（get方法）和设置属性值（set方法），使用property取代get和set方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">使用property对象修改私有属性值</span><br><span class="line">property(fget=None, fset=None, fdel=None, doc=None)</span><br><span class="line">说明：</span><br><span class="line">fget 是获取属性值的函数。</span><br><span class="line">fset 是设置（修改）属性值的函数。</span><br><span class="line">fdel 是删除属性值的函数。</span><br><span class="line">doc 是属性描述信息。如果省略，会把 fget 方法的文档字符串（docstring）拿来用（如果有的话）。</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">class Test(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.__num = 100</span><br><span class="line"> </span><br><span class="line">    # get_num函数专门用来获取__num属性值</span><br><span class="line">    def get_num(self):</span><br><span class="line">        return self.__num</span><br><span class="line"> </span><br><span class="line">    # set_num函数专门用来设置__num属性值    </span><br><span class="line">    def set_num(self, new_num):</span><br><span class="line">        self.__num = new_num</span><br><span class="line"> </span><br><span class="line">    # 定义的num就是在外面用到的属性名，property括号中前面放get方法的名字，后面放set方法的名字</span><br><span class="line">    num = property(get_num, set_num)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">t = Test()</span><br><span class="line">t.num = 200  # 直接通过访问属性的形式来调用set_num()方法，并将等号右边的参数传进去</span><br><span class="line">print(t.num)  # 通过同样的方式来调用get_num()方法</span><br><span class="line"># 虽然都是t.num的方式调用方法，Python解释器会根据是否有赋值来选择调用的方法</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">使用property装饰器修改私有属性值</span><br><span class="line">被 @property 装饰的方法是获取属性值的方法，被装饰方法的名字会被用做属性名</span><br><span class="line">被 @属性名.setter 装饰的方法是设置属性值的方法</span><br><span class="line">被 @属性名.deleter 装饰的方法是删除属性值的方法</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">class Test(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.__num = 100</span><br><span class="line"> </span><br><span class="line">    # 在get方法的上面写上@property，函数的名字就是属性的名字</span><br><span class="line">    @property</span><br><span class="line">    def num(self):</span><br><span class="line">        return self.__num</span><br><span class="line"> </span><br><span class="line">    # 在set方法的上面写上@属性名.setter，函数的名字跟get方法相同，都等于属性的名字</span><br><span class="line">    @num.setter</span><br><span class="line">    def num(self, new_num):</span><br><span class="line">        self.__num = new_num</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">t = Test()</span><br><span class="line">t.num = 200  # 调用了下面的num()方法进行设置</span><br><span class="line">print(t.num)  # 调用了上面的num()方法获取值</span><br></pre></td></tr></table></figure><h3 id="使用property细节问题"><a href="#使用property细节问题" class="headerlink" title="使用property细节问题"></a>使用property细节问题</h3><p>getter方法名和属性名一致（上例中是num）。<br>setter方法名必须与getter方法名相同。<br>必须先定义getter方法，setter方法才能使用。<br>@property装饰器则是Python中的一种语法糖，它可以将一个类方法转换为一个属性，使得我们可以像访问普通属性一样调用该方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">1.属性是公有属性时，使用property，必须使用setter方法</span><br><span class="line">2.若省略setter方法，此时该属性变成只读属性。如果此时仍然设置属性，会抛出异常 AttributeError: can&#x27;t set attribute。</span><br><span class="line">3.如果报错 RecursionError: maximum recursion depth exceeded while calling a Python object，很可能是对象属性名和 @property 装饰的方法名重名了，一般会在对象属性名前加一个下划线 _ 避免重名，并且表明这是一个受保护的属性。</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">class Student:</span><br><span class="line">    def __init__(self, name, age):</span><br><span class="line">        self.name = name  </span><br><span class="line">        self.age = age</span><br><span class="line"> </span><br><span class="line">    # 获取私有属性</span><br><span class="line">    @property</span><br><span class="line">    def name(self):</span><br><span class="line">        return self._name</span><br><span class="line"> </span><br><span class="line">    @name.setter</span><br><span class="line">    def name(self, value):</span><br><span class="line">        self._name = value</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">stu = Student(&quot;张三&quot;, 8)</span><br><span class="line">stu.name = &quot;李四&quot;</span><br><span class="line">print(stu.name)  # 李四</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;可见性&quot;&gt;&lt;a href=&quot;#可见性&quot; class=&quot;headerlink&quot; title=&quot;可见性&quot;&gt;&lt;/a&gt;可见性&lt;/h2&gt;&lt;p&gt;​	属性通常设置为private或protected，__name表示private属性，_name表示protected属性&lt;br&gt;​	方法通常设置为public&lt;/p&gt;
&lt;h3 id=&quot;python中以单下划线和双下滑线开头的属性和方法&quot;&gt;&lt;a href=&quot;#python中以单下划线和双下滑线开头的属性和方法&quot; class=&quot;headerlink&quot; title=&quot;python中以单下划线和双下滑线开头的属性和方法&quot;&gt;&lt;/a&gt;python中以单下划线和双下滑线开头的属性和方法&lt;/h3&gt;&lt;p&gt;​	以单下划线 (_) 开头的属性和方法（内部属性&amp;#x2F;方法）：私有化属性或⽅法，类内部、类对象和⼦类可以访问。其他模块通过from module_name import *不能将其导入；但通过import module_name依然可以导入。&lt;/p&gt;
&lt;p&gt;​	以双下划线 (__) 开头并且不以双下划线结尾的属性和方法（私有属性&amp;#x2F;方法）：某个属性或方法只能在当前类内部被使用，类外部不能调用。不能调用是因为Python私有属性存储时其名字做了修改，将“__属性名”存储时重命名为”_类名__属性名”。其他模块通过from module_name import *不能将其导入；但通过import module_name依然可以导入。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/categories/python/"/>
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python之列表、元组、字典、字符串和集合的区别与联系</title>
    <link href="https://github.com/jiangjiawei520/post/32391538.html"/>
    <id>https://github.com/jiangjiawei520/post/32391538.html</id>
    <published>2024-04-25T16:17:21.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python容器定义"><a href="#Python容器定义" class="headerlink" title="Python容器定义"></a>Python容器定义</h2><p>容器：用来存储和组织其他对象的对象。容器里面可以放很多东西，这些东西可以是字符串，可以是整数，可以是自定义类型，然后把这些东西有组织的存放在内存中<br>Python容器：列表(list)，元组(tuple)，集合(set)，字典(dict)，队列(queue)等</p><h2 id="区别与联系概括-★★★★★"><a href="#区别与联系概括-★★★★★" class="headerlink" title="区别与联系概括 ★★★★★"></a>区别与联系概括 ★★★★★</h2><table><thead><tr><th>数据类型</th><th>列表 (list)</th><th>元组 (tuple)</th><th>集合 (set)</th><th>字典 (dictionary)</th><th></th></tr></thead><tbody><tr><td>表示</td><td><code>[]</code></td><td><code>()</code></td><td><code>&#123;&#125;</code></td><td><code>&#123;&#125;</code></td><td></td></tr><tr><td>举例</td><td>a_list &#x3D; [1, True, ‘aa’]</td><td>a_tuple &#x3D; (1, True, ‘aa’)； t2 &#x3D; (1<code>,</code>)</td><td>a_set &#x3D; {1, True, ‘aa’}; s &#x3D; set( [1, True, ‘aa’])</td><td>a_dict &#x3D; {‘name’: ‘xuan’, ‘age’: 21}</td><td></td></tr><tr><td>是否有序</td><td>有序</td><td>有序</td><td><code>无序</code></td><td><code>无序</code></td><td></td></tr><tr><td>是否读写</td><td>读写</td><td><code>只读</code></td><td>读写</td><td>读写</td><td></td></tr><tr><td>空定义</td><td>a_list &#x3D; []</td><td>a_tuple &#x3D; ()</td><td>a_set &#x3D; set(); <br/>not_sure &#x3D; {}空字典</td><td>a_dict &#x3D; {}</td><td></td></tr><tr><td>元素可修改</td><td>a_list[0] &#x3D; 23</td><td><code>否</code></td><td><code>否</code></td><td>a_dict[‘age’] &#x3D; 30</td><td></td></tr><tr><td>下标访问</td><td>a_list[0] &#x3D; 23</td><td>a_tuple[0]</td><td><code>否</code></td><td>a_dict[‘age’] &#x3D; 30</td><td></td></tr><tr><td>添加元素</td><td><strong>+、append、extend、insert</strong></td><td><code>不可添加</code></td><td><strong>add、update</strong></td><td>a_dict[‘new_key’] &#x3D; ‘value’</td><td></td></tr><tr><td>删除元素</td><td><strong>del、remove、pop()、pop(1)、clear</strong></td><td><code>不可删除</code></td><td><strong>discard、remove、pop、clear</strong></td><td><strong>pop、popitem、clear</strong></td><td></td></tr><tr><td>元素查找</td><td><strong>index、count、in</strong></td><td><strong>in</strong></td><td><strong>in</strong></td><td>a_dict[‘key’]</td><td></td></tr><tr><td>布尔真值</td><td>非空</td><td>非空</td><td>非空</td><td>非空</td><td></td></tr><tr><td>定义</td><td>列表(list)是有序的集合，可以存放不同数据类型的数据，并且list中的每个元素的都对应着一个索引来标记其位置，且索引从0开始。</td><td>tuple与list类似，不同之处在于tuple中的元素不能进行修改。而且tuple使用小括号，list使用方括号。</td><td>set()函数是创建一个无序不重复元素集，可添加，删除数据，还可以计算交集、差集、并集等。<br/>python 的集合类型和 其他语言类似, 是一个无序不重复元素集, 基本功能包括关系测试和消除重复元素.集合对象还支持union(联合), intersection(交), difference(差)和sysmmetricdifference(对称差集)等数学运算,和我们初中数学学的集合的非常的相似。</td><td>dic字典是另一种可变的容器模型，且可存储任意类型对象。字典的每个键值(key:value)对用冒号(<code>:</code>)分割，每个对之间用逗号(,)分割，整个字典包括在花括号{}中</td><td></td></tr></tbody></table><span id="more"></span><h2 id="全方位分析-★★★☆☆"><a href="#全方位分析-★★★☆☆" class="headerlink" title="全方位分析 ★★★☆☆"></a>全方位分析 ★★★☆☆</h2><table><thead><tr><th>数据结构</th><th>表示</th><th>分析</th></tr></thead><tbody><tr><td><strong>列表list</strong></td><td>[]</td><td>列表list，用中括号“[ ]”表示<br/>1.任意对象的有序集合<br/>列表是一组任意类型的值，按照一定顺序组合而成的<br/>2.通过偏移读取<br/>组成列表的值叫做元素(Elements)。每一个元素被标识一个索引，第一个索引是0，序列的功能都能实现<br/>3.可变长度，异构以及任意嵌套<br/>列表中的元素可以是任意类型，甚至是列表类型，也就是说列表可以嵌套<br/>4.可变的序列<br/>支持索引、切片、合并、删除等等操作，它们都是在原处进行修改列表<br/>5.对象引用数组<br/>列表可以当成普通的数组，每当用到引用时，Python总是会将这个引用指向一个对象，所以程序只需处理对象的操作。当把一个对象赋给一个数据结构元素或变量名时，Python总是会存储对象的引用，而不是对象的一个拷贝</td></tr><tr><td><strong>元组tuple</strong></td><td>()</td><td>1.任意对象的有序集合<br/>与列表相同<br/>2.通过偏移存取<br/>与列表相同<br/>3.属于不可变序列类型<br/>类似于字符串，但元组是不可变的，不支持在列表中任何原处修改操作，不支持任何方法调用<br/>4.固定长度、异构、任意嵌套<br/>固定长度即元组不可变，在不被拷贝的情况下长度固定，其他同列表<br/>5.对象引用的数组<br/>与列表相似，元组是对象引用的数组&gt;<br/><br/>tuple和list相比<br/>1.比列表操作速度快<br/>2.对数据“写保护“<br/>3.可用于字符串格式化中<br/>4.可作为字典的key<br/></td></tr><tr><td><strong>字典dic</strong></td><td>{}</td><td>1.通过键而不是偏移量来读取<br/>字典就是一个关联数组，是一个通过关键字索引的对象的集合，使用键-值（key-value）进行存储，查找速度快<br/><br/>2.任意对象的无序集合<br/>字典中的项没有特定顺序，以“键”为象征<br/><br/>3.可变长、异构、任意嵌套<br/>同列表，嵌套可以包含列表和其他的字典等<br/><br/>4.属于可变映射类型<br/>因为是无序，故不能进行序列操作，但可以在远处修改，通过键映射到值。字典是唯一内置的映射类型（键映射到值的对象）<br/><br/>5.对象引用表<br/>字典存储的是对象引用，不是拷贝，和列表一样。字典的key是不能变的，list不能作为key，字符串、元组、整数等都可以<br/><br/>dic和list比较，dict有以下几个特点:<br/>1.查找和插入的速度极快，不会随着key的增加而增加<br/>2.需要占用大量的内存，内存浪费多<br/>而list相反：<br/>1.查找和插入的时间随着元素的增加而增加<br/>2.占用空间小，浪费内存很少<br/>所以，dict是用空间来换取时间的一种方法<br/></td></tr><tr><td><strong>集合</strong></td><td>()</td><td>1.是一组key的集合，但不存储value，并且key不能重复<br/><br/>创建一个set，需要提供一个list作为输入集合,s &#x3D; set([1,2,3]),注意，传入的参数 [1, 2, 3] 是一个list，而显示的 set([1, 2, 3]) 只是告诉你这个set内部有1，2，3这3个元素，显示的[ ]不表示这是一个list<br/><br/>2.重复元素在set中自动被过滤<br/><br/>set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作<br/>还有一种集合是forzenset( )，是冻结的集合，它是不可变的，存在哈希值，好处是它可以作为字典的key，也可以作为其它集合的元素。缺点是一旦创建便不能更改，没有add，remove方法<br/><br/>3. set和dict对比<br/><br/>1.set和dict的唯一区别仅在于没有存储对应的value<br/>2.set的原理和dict一样，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部“不会有重复元素”&lt;br&#x2F;</td></tr></tbody></table><h2 id="相互PK-★★☆☆☆"><a href="#相互PK-★★☆☆☆" class="headerlink" title="相互PK ★★☆☆☆"></a>相互PK ★★☆☆☆</h2><table><thead><tr><th>比较</th><th>详情</th></tr></thead><tbody><tr><td><strong>字典dict和列表list的比较</strong></td><td>dict的查找和插入的速度极快，不会随着key的增加而变慢。但是需要占用大量的内存，内存浪费多。相反，list查找和插入的时间随着元素的增加而增加。但是占用空间小，浪费内存很少。</td></tr><tr><td><strong>字典dict和集合set比较</strong></td><td>唯一区别仅在于没有存储对应的value，但是，set的原理和dict一样，所以，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部“不会有重复元素”。</td></tr><tr><td><strong>元组tuple与列表list比较</strong></td><td>tuple与list类似，不同之处在于tuple中的元素不能进行修改。而且tuple使用小括号，list使用方括号。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Python容器定义&quot;&gt;&lt;a href=&quot;#Python容器定义&quot; class=&quot;headerlink&quot; title=&quot;Python容器定义&quot;&gt;&lt;/a&gt;Python容器定义&lt;/h2&gt;&lt;p&gt;容器：用来存储和组织其他对象的对象。容器里面可以放很多东西，这些东西可以是字符串，可以是整数，可以是自定义类型，然后把这些东西有组织的存放在内存中&lt;br&gt;Python容器：列表(list)，元组(tuple)，集合(set)，字典(dict)，队列(queue)等&lt;/p&gt;
&lt;h2 id=&quot;区别与联系概括-★★★★★&quot;&gt;&lt;a href=&quot;#区别与联系概括-★★★★★&quot; class=&quot;headerlink&quot; title=&quot;区别与联系概括 ★★★★★&quot;&gt;&lt;/a&gt;区别与联系概括 ★★★★★&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;列表 (list)&lt;/th&gt;
&lt;th&gt;元组 (tuple)&lt;/th&gt;
&lt;th&gt;集合 (set)&lt;/th&gt;
&lt;th&gt;字典 (dictionary)&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;表示&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;举例&lt;/td&gt;
&lt;td&gt;a_list &amp;#x3D; [1, True, ‘aa’]&lt;/td&gt;
&lt;td&gt;a_tuple &amp;#x3D; (1, True, ‘aa’)； t2 &amp;#x3D; (1&lt;code&gt;,&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;a_set &amp;#x3D; {1, True, ‘aa’}; s &amp;#x3D; set( [1, True, ‘aa’])&lt;/td&gt;
&lt;td&gt;a_dict &amp;#x3D; {‘name’: ‘xuan’, ‘age’: 21}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否有序&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;有序&lt;/td&gt;
&lt;td&gt;&lt;code&gt;无序&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;无序&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否读写&lt;/td&gt;
&lt;td&gt;读写&lt;/td&gt;
&lt;td&gt;&lt;code&gt;只读&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;读写&lt;/td&gt;
&lt;td&gt;读写&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;空定义&lt;/td&gt;
&lt;td&gt;a_list &amp;#x3D; []&lt;/td&gt;
&lt;td&gt;a_tuple &amp;#x3D; ()&lt;/td&gt;
&lt;td&gt;a_set &amp;#x3D; set(); &lt;br/&gt;not_sure &amp;#x3D; {}空字典&lt;/td&gt;
&lt;td&gt;a_dict &amp;#x3D; {}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;元素可修改&lt;/td&gt;
&lt;td&gt;a_list[0] &amp;#x3D; 23&lt;/td&gt;
&lt;td&gt;&lt;code&gt;否&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;否&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a_dict[‘age’] &amp;#x3D; 30&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下标访问&lt;/td&gt;
&lt;td&gt;a_list[0] &amp;#x3D; 23&lt;/td&gt;
&lt;td&gt;a_tuple[0]&lt;/td&gt;
&lt;td&gt;&lt;code&gt;否&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a_dict[‘age’] &amp;#x3D; 30&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;添加元素&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;+、append、extend、insert&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;不可添加&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;add、update&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a_dict[‘new_key’] &amp;#x3D; ‘value’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;删除元素&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;del、remove、pop()、pop(1)、clear&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;不可删除&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;discard、remove、pop、clear&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;pop、popitem、clear&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;元素查找&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;index、count、in&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a_dict[‘key’]&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;布尔真值&lt;/td&gt;
&lt;td&gt;非空&lt;/td&gt;
&lt;td&gt;非空&lt;/td&gt;
&lt;td&gt;非空&lt;/td&gt;
&lt;td&gt;非空&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;定义&lt;/td&gt;
&lt;td&gt;列表(list)是有序的集合，可以存放不同数据类型的数据，并且list中的每个元素的都对应着一个索引来标记其位置，且索引从0开始。&lt;/td&gt;
&lt;td&gt;tuple与list类似，不同之处在于tuple中的元素不能进行修改。而且tuple使用小括号，list使用方括号。&lt;/td&gt;
&lt;td&gt;set()函数是创建一个无序不重复元素集，可添加，删除数据，还可以计算交集、差集、并集等。&lt;br/&gt;python 的集合类型和 其他语言类似, 是一个无序不重复元素集, 基本功能包括关系测试和消除重复元素.集合对象还支持union(联合), intersection(交), difference(差)和sysmmetricdifference(对称差集)等数学运算,和我们初中数学学的集合的非常的相似。&lt;/td&gt;
&lt;td&gt;dic字典是另一种可变的容器模型，且可存储任意类型对象。字典的每个键值(key:value)对用冒号(&lt;code&gt;:&lt;/code&gt;)分割，每个对之间用逗号(,)分割，整个字典包括在花括号{}中&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/categories/python/"/>
    
    
    <category term="python" scheme="https://github.com/jiangjiawei520/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>docker容器常用知识</title>
    <link href="https://github.com/jiangjiawei520/post/999a0a70.html"/>
    <id>https://github.com/jiangjiawei520/post/999a0a70.html</id>
    <published>2024-04-22T09:18:39.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-是什么？"><a href="#Docker-是什么？" class="headerlink" title="Docker 是什么？"></a><strong>Docker 是什么？</strong></h2><p>​    1. Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）。几乎没有性能开销，可以很容易地在机器和数据中心中运行。最重要的是，他们不依赖于任何语言、框架包括系统。</p><p>​    2. Docker 是基于Go语言实现的云开源项目，诞生于2013年初，最初是dotCloud公司发起。由镜像(Image)、容器(Container)、仓库(Repository) 三大核心组成。</p><pre><code>   3. Docker 通过对应用组件的封装、分发、部署、运行等生命周期的管理，达到应用组件级别的“一次封装，到处运行”。这里应用组件，即可以是Web应用，也可以是一套数据库服务，甚至是一个操作系统或编译器。</code></pre><h2 id="为什么要使用-Docker？"><a href="#为什么要使用-Docker？" class="headerlink" title="为什么要使用 Docker？"></a><strong>为什么要使用 Docker？</strong></h2><p>​    1. Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p><p>​    2. 更快速的交付和部署(使用docker，开发人员可以用镜像来快速构建一套标准的开发环境;开发完成之后，测试和运维人员可以直接使用相同环境来部署代码)。</p><p>​    3. 响应式部署和扩展(docker容器几乎可以在任意平台上运行，包括物理机、虚拟机、公有云、私有云、个人电脑、服务器等。可以在不同的平台轻松地迁移应用)。</p><p>​    4. 更简单的更新管理(使用Dockerfile，只需要修改小小的配置，就可以替代以往大量的更新工作)。</p><p>​      与传统的虚拟机对比</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529075343772-1700042586.png"><img src="/imgs/1610676-20200529075343772-1700042586.png" alt="img"></a></p><span id="more"></span><h2 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a><strong>Docker 架构</strong></h2><h3 id="Docker-核心三要素"><a href="#Docker-核心三要素" class="headerlink" title="Docker 核心三要素"></a>Docker 核心三要素</h3><p>​      1. 镜像（Image）：用于创建 Docker 容器的模板，相当于一个 root 文件系统。镜像内部是一个精简的操作系统和应用运行所需要的文件以及所有依赖（镜像不包含内核，容器都是共享所在Docker主机的内核），比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。</p><p>​      2. 容器（Container）：容器是镜像的运行时实例，可以从单个镜像启动一个或多个容器。</p><p>​      3. 仓库（Repository）：用于存放镜像，可以理解为代码控制中的代码仓库。一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529083236188-1322739337.png"><img src="/imgs/1610676-20200529083236188-1322739337.png" alt="img"></a></p><h3 id="核心架构"><a href="#核心架构" class="headerlink" title="核心架构"></a>核心架构</h3><p>​      1. Docker 使用客户端-服务器 (C&#x2F;S) 架构模式，使用远程API来管理和创建Docker容器。</p><p>​      2. Docker 容器通过 Docker 镜像来创建。</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529083636028-1758306848.png"><img src="/imgs/1610676-20200529083636028-1758306848.png" alt="img"></a></p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529084433346-1189779290.png"><img src="/imgs/1610676-20200529084433346-1189779290.png" alt="img"></a></p><h2 id="核心架构-1"><a href="#核心架构-1" class="headerlink" title="核心架构"></a>核心架构</h2><p>​      1. Docker 使用客户端-服务器 (C&#x2F;S) 架构模式，使用远程API来管理和创建Docker容器。</p><p>​      2. Docker 容器通过 Docker 镜像来创建。</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529083636028-1758306848.png"><img src="/imgs/1610676-20200529083636028-1758306848-1713748943826-13.png" alt="img"></a></p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529084433346-1189779290.png"><img src="/imgs/1610676-20200529084433346-1189779290-1713748943827-15.png" alt="img"></a></p><p>​    3. 运行原理</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529084735750-1592954389.png"><img src="/imgs/1610676-20200529084735750-1592954389.png" alt="img"></a></p><p>​      1. 命令行工具或CLI在被称为用户空间的内存中运行，就像是在操作系统上运行的其他程序。运行 Docker 可以认为是在用户空间运行着两个程序：一个是 Docker 守护进程，另一个是 DockerCLI，DockerCLI 是与用户交互的 Docker 程序。上图也显示了三个运行着的容器，每个都是以 Docker 守护程序的子进程运行，封装在容器中。在容器中运行的程序只能访问该容器内部的内存空间和资源（除非特别规定可以访问容器外部资源）。</p><p>​      2. Docker 可以执行、复制和轻松的分发容器，Docker 通过一种打包和分发的软件完成传统容器的封装，这个用来充当容器（Container）分发角色的组件被称为 镜像（Image）。</p><h2 id="安装部署（Centos7）"><a href="#安装部署（Centos7）" class="headerlink" title="安装部署（Centos7）"></a><strong>安装部署（Centos7）</strong></h2><h3 id="查看内核版本（高于3-10）"><a href="#查看内核版本（高于3-10）" class="headerlink" title="查看内核版本（高于3.10）"></a>查看内核版本（高于3.10）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 [root@docker ~]# uname -r</span><br><span class="line">2 3.10.0-327.el7.x86_64  # 必须是3.10版本以上</span><br></pre></td></tr></table></figure><h3 id="卸载旧版本-Docker"><a href="#卸载旧版本-Docker" class="headerlink" title="卸载旧版本 Docker"></a>卸载旧版本 Docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 [root@docker ~]# yum remove docker  docker-common docker-selinux docker-engine</span><br><span class="line">2 Loaded plugins: fastestmirror</span><br><span class="line">3 No Match for argument: docker</span><br><span class="line">4 No Match for argument: docker-common</span><br><span class="line">5 No Match for argument: docker-selinux</span><br><span class="line">6 No Match for argument: docker-engine</span><br><span class="line">7 No Packages marked for removal</span><br></pre></td></tr></table></figure><h3 id="安装需要的软件包"><a href="#安装需要的软件包" class="headerlink" title="安装需要的软件包"></a>安装需要的软件包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 1 [root@localhost ~]# yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"> 2 Loaded plugins：fastestmirror</span><br><span class="line"> 3 Loading mirror speeds from cached hostfile</span><br><span class="line"> 4  * base: centos.ustc.edu.cn</span><br><span class="line"> 5  * extras: mirrors.aliyun.com</span><br><span class="line"> 6  * updates: mirrors.cn99.com</span><br><span class="line"> 7 软件包 device-mapper-persistent-data-0.7.3-3.el7.x86_64 已安装并且是最新版本</span><br><span class="line"> 8 软件包 7:lvm2-2.02.180-10.el7_6.8.x86_64 已安装并且是最新版本</span><br><span class="line"> 9 正在解决依赖关系</span><br><span class="line">10 --&gt; 正在检查事务</span><br><span class="line">11 ---&gt; 软件包 yum-utils.noarch.0.1.1.31-50.el7 将被 安装</span><br><span class="line">12 --&gt; 正在处理依赖关系 python-kitchen，它被软件包 yum-utils-1.1.31-50.el7.noarch </span><br></pre></td></tr></table></figure><h3 id="设置-yum-源"><a href="#设置-yum-源" class="headerlink" title="设置 yum 源"></a>设置 yum 源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 1 ### 中央仓库</span><br><span class="line"> 2 [root@localhost ~]# yum-config-manager --add-repo http://download.docker.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"> 3 Loaded plugins: fastestmirror</span><br><span class="line"> 4 adding repo from: http://download.docker.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"> 5 grabbing file http://download.docker.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"> 6 repo saved to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"> 7 </span><br><span class="line"> 8 ### 阿里云</span><br><span class="line"> 9 [root@localhost ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">10 Loaded plugins: fastestmirror</span><br><span class="line">11 adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">12 grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">13 repo saved to /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> 1 ### 查看仓库中 Docker的版本</span><br><span class="line"> 2 [root@docker ~]# yum list docker-ce --showduplicates | sort -r</span><br><span class="line"> 3  * updates: mirrors.nju.edu.cn</span><br><span class="line"> 4 Loading mirror speeds from cached hostfile</span><br><span class="line"> 5 Loaded plugins: fastestmirror</span><br><span class="line"> 6 Installed Packages</span><br><span class="line"> 7  * extras: mirrors.nju.edu.cn</span><br><span class="line"> 8 docker-ce.x86_64            3:19.03.9-3.el7                    docker-ce-stable </span><br><span class="line"> 9 docker-ce.x86_64            3:19.03.8-3.el7                    docker-ce-stable </span><br><span class="line">10 docker-ce.x86_64            3:19.03.7-3.el7                    docker-ce-stable 30 docker-ce.x86_64            18.06.3.ce-3.el7                   docker-ce-stable </span><br><span class="line">31 docker-ce.x86_64            18.06.2.ce-3.el7                   docker-ce-stable </span><br><span class="line">32 docker-ce.x86_64            18.06.1.ce-3.el7                   docker-ce-stable </span><br><span class="line">33 docker-ce.x86_64            18.06.0.ce-3.el7                   docker-ce-stable </span><br><span class="line">34 docker-ce.x86_64            18.03.1.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">35 docker-ce.x86_64            18.03.0.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">36 docker-ce.x86_64            17.12.1.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">37 docker-ce.x86_64            17.12.0.ce-1.el7.centos            docker-ce-stable 43 docker-ce.x86_64            17.03.3.ce-1.el7                   docker-ce-stable </span><br><span class="line">44 docker-ce.x86_64            17.03.2.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">45 docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">46 docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable </span><br><span class="line">47 </span><br><span class="line">48 ### 安装最新版本</span><br><span class="line">49 [root@localhost ~]# yum install -y docker-ce</span><br><span class="line">50 Loaded plugins: fastestmirror</span><br><span class="line">51 Loading mirror speeds from cached hostfile</span><br><span class="line">52  * base: mirrors.nju.edu.cn</span><br><span class="line">53  * extras: mirrors.nju.edu.cn</span><br><span class="line">54  * updates: mirrors.nju.edu.cn</span><br><span class="line">55 Resolving Dependencies</span><br><span class="line">56 --&gt; Running transaction check</span><br><span class="line">57 ---&gt; Package docker-ce.x86_64 3:19.03.10-3.el7 will be installed</span><br><span class="line">58 --&gt; Processing Dependency: container-selinux &gt;= 2:2.74 for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">59 --&gt; Processing Dependency: containerd.io &gt;= 1.2.2-3 for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">60 --&gt; Processing Dependency: libseccomp &gt;= 2.3 for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">61 --&gt; Processing Dependency: docker-ce-cli for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">62 --&gt; Processing Dependency: libcgroup for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">63 --&gt; Processing Dependency: libseccomp.so.2()(64bit) for package: 3:docker-ce-19.03.10-3.el7.x86_64</span><br><span class="line">64 </span><br><span class="line">65 ### 安装特定版本</span><br><span class="line">66 yum install -y docker-ce-版本 docker-ce-selinux-版本 docker-ce-cli-版本 containerd.io</span><br></pre></td></tr></table></figure><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 [root@localhost ~]# systemctl start docker</span><br><span class="line">2 [root@localhost ~]# systemctl enable docker</span><br><span class="line">3 Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br></pre></td></tr></table></figure><h3 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h3><h4 id="获取自己的镜像加速地址：点击“创建我的容器镜像”"><a href="#获取自己的镜像加速地址：点击“创建我的容器镜像”" class="headerlink" title="获取自己的镜像加速地址：点击“创建我的容器镜像”"></a><a href="https://dev.aliyun.com/search.html">获取自己的镜像加速地址</a>：点击“创建我的容器镜像”</h4><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529141619252-919434962.png"><img src="/imgs/1610676-20200529141619252-919434962.png" alt="img"></a></p><h4 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 [root@docker ~]# mkdir -p /etc/docker/daemon.json</span><br><span class="line">2 [root@docker ~]# vi /etc/docker/daemon.json</span><br><span class="line">4 &#123;</span><br><span class="line">5   &quot;registry-mirrors&quot;: [&quot;https://78ssvya7.mirror.aliyuncs.com&quot;]</span><br><span class="line">6 &#125;8 [root@docker ~]# systemctl daemon-reload</span><br><span class="line">9 [root@docker ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="Docker-核心操作"><a href="#Docker-核心操作" class="headerlink" title="Docker 核心操作"></a><strong>Docker 核心操作</strong></h2><h3 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h3><p>​    1. 简介：镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件。它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。</p><p>​    2. 镜像分层</p><p>​      1. 原理：Docker 镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS（联合文件系统）：是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下。Union 文件系统是 Docker 镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>​        1. 一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</p><p>​        2. Docker镜像都是只读的。当容器启动时，一个新的可写层被加载到镜像的顶部。</p><p>​        3. 共享资源。一个基础镜像可以实例多个容器。</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529205925608-1115947547.png"><img src="/imgs/1610676-20200529205925608-1115947547.png" alt="img"></a></p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529205934949-2014645065.png"><img src="/imgs/1610676-20200529205934949-2014645065.png" alt="img"></a></p><h3 id="多架构镜像（Multi-architecture-Image）"><a href="#多架构镜像（Multi-architecture-Image）" class="headerlink" title="多架构镜像（Multi-architecture Image）"></a>多架构镜像（Multi-architecture Image）</h3><p>​      1. 原理：在拉取镜像的时候，Docker 客户端会调用 Docker 镜像仓库服务的 API 完成拉取。如果该镜像有 Manifest 列表，则 Docker 客户端会找到当前主机架构对应的 Manifest 并解析出组成该镜像的镜像层加密ID，然后从镜像仓库中拉取每个镜像层。</p><p>​      2. 作用：是为了解决镜像支持不同架构（Linux、Windows、ARM等）的问题。为了实现这个特性，镜像仓库服务API支持两种重要的结构：Manifest列表和Manifest。Manifest列表是指某个镜像标签支持的架构列表，其支持的每种架构都有自己的Manifest定义，其中列举了镜像的构成。如下图所示，图中左侧是Manifest列表，其中包含了该镜像支持的每种架构。Manifest列表的每一项都有一个箭头，指向具体的Manifest，其中包含了镜像配置和镜像层数据。</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529210351739-1165288683.png"><img src="/imgs/1610676-20200529210351739-1165288683.png" alt="img"></a></p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><p>​      <strong><a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529204157038-805203922.png"><img src="/imgs/1610676-20200529204157038-805203922.png" alt="img"></a></strong></p><h2 id="Docker-容器"><a href="#Docker-容器" class="headerlink" title="Docker 容器"></a>Docker 容器</h2><p>​    1. 容器是镜像的运行时实例，可以从单个镜像启动一个或多个容器。</p><p>​    2. 相对于虚拟机，容器较轻量级，而且容器启动非常快————与虚拟机运行在完整的操作系统之上相比，<strong>容器会共享其所在主机的操作系统&#x2F;内核</strong>（一个很简单是证明方法就是在容器内部查看下进程，在容器所在主机的操作系统上也能找到容器内部运行的进程（由于容器拥有隔离的PID，所以进程号会不同，但是进程确是相同的））。</p><p>​    3. Docker在创建容器的时候会为每个容器分配一个唯一的标识符，也会分配一个人性化的名称（如果用户没有指定名称的话）。</p><p>​    4. Docker容器有四种状态：运行中（Up）、暂停中（Paused）、已退出（Exited）、重新启动中（一种临时状态），状态转移图如下：</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530081044810-829723354.png"><img src="/imgs/1610676-20200530081044810-829723354.png" alt="img"></a></p><p>​    5. 常用操作</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530101902904-2079806059.png"><img src="/imgs/1610676-20200530101902904-2079806059.png" alt="img"></a></p><p>​    6. 重启策略（<code>--restart</code> 重启策略）</p><p>​      1. always：除非容器被明确停止，否则会一直尝试重启处于停止状态的容器。当Docker daemon重启的时候，停止的容器也会被重启。</p><p>​      2. unless-stopped：unless-stopped 和 always 最大区别的就是使用 unless-stopped 策略并处于已退出状态的容器，不会在Docker daemon重启的时候被重启。</p><p>​      3. on-failure：退出容器并且返回值不是0的时候重启容器，就算容器处于已退出状态，在Docker daemon重启的时候，容器也会重启。</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530153409959-450638579.png"><img src="/imgs/1610676-20200530153409959-450638579.png" alt="img"></a></p><h2 id="Docker-网络"><a href="#Docker-网络" class="headerlink" title="Docker 网络"></a>Docker 网络</h2><p>​    1. 网络容器模型：Closed容器、Bridged容器（默认）、Joined容器、Open容器，所有的Docker容器都要符合这四种模型中的一种。这些模型定义了一个容器如何与其他的本地容器、主机网络进行通信。</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530114232299-740108263.png"><img src="/imgs/1610676-20200530114232299-740108263.png" alt="img"></a></p><p>​    2. Closed 容器：不允许任何的网络流量，运行在这种容器中的进程只能访问本地回环接口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 # 可以看到，Closed容器只有一个回环接口</span><br><span class="line">2 [root@server ~]# docker run --name centos centos:latest ip a</span><br><span class="line">3 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">4     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">5     inet 127.0.0.1/8 scope host lo</span><br><span class="line">6        valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>​    3. Bridged 容器：默认的网络容器模型，有两个接口，一个是本地回环接口，另一个接口通过网桥连接到主机网络。可以通过主机网络访问任何主机网络能访问的外部网络。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 一个本地回环接口，一个桥接到主机网络的接口</span><br><span class="line"> 2 [root@server ~]#  docker run --network bridge centos:latest ip a;</span><br><span class="line"> 3 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line"> 4     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line"> 5     inet 127.0.0.1/8 scope host lo</span><br><span class="line"> 6        valid_lft forever preferred_lft forever</span><br><span class="line"> 7 255: eth0@if256: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line"> 8     link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff</span><br><span class="line"> 9     inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">10        valid_lft forever preferred_lft forever</span><br><span class="line">11 [root@server ~]#  ping -c 2 www.baidu.com</span><br><span class="line">12 PING www.a.shifen.com (180.101.49.12) 56(84) bytes of data.</span><br><span class="line">13 64 bytes from 180.101.49.12 (180.101.49.12): icmp_seq=1 ttl=50 time=29.0 ms</span><br><span class="line">14 64 bytes from 180.101.49.12 (180.101.49.12): icmp_seq=2 ttl=50 time=28.4 ms</span><br></pre></td></tr></table></figure><p>​    4. Joined 容器：所有容器共享一个网络栈，容器之间没有任何网络隔离。Joined容器通过将某一个容器接口的访问权限提供给另外一个新的容器来构建。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 创建一个closed容器，看下其内部网络状态，可以看到容器内部监听的是39439端口</span><br><span class="line"> 2 [root@server ~]# docker run -d --name join-base-container --network none centos:latest</span><br><span class="line"> 3 e2907c7a889d209734f63309a5351687ac2761489e129cd6a7d6a392234a3cde</span><br><span class="line"> 4 [root@server ~]# docker exec join-base-container netstat -al</span><br><span class="line"> 5 Active Internet connections (servers and established)</span><br><span class="line"> 6 Proto Recv-Q Send-Q Local Address           Foreign Address         State       </span><br><span class="line"> 7 tcp        0      0 0.0.0.0:39439           0.0.0.0:*               LISTEN      </span><br><span class="line"> 8 Active UNIX domain sockets (servers and established)</span><br><span class="line"> 9 Proto RefCnt Flags       Type       State         I-Node Path</span><br><span class="line">10 </span><br><span class="line">11 # 创建一个基于上面容器的joined容器，发现其共享了上面的close容器中的网络</span><br><span class="line">12 [root@server ~]# docker run --network container:join-base-container centos:latest netstat -al</span><br><span class="line">13 Active Internet connections (servers and established)</span><br><span class="line">14 Proto Recv-Q Send-Q Local Address           Foreign Address         State       </span><br><span class="line">15 tcp        0      0 0.0.0.0:39439           0.0.0.0:*               LISTEN      </span><br><span class="line">16 Active UNIX domain sockets (servers and established)</span><br><span class="line">17 Proto RefCnt Flags       Type       State         I-Node Path</span><br></pre></td></tr></table></figure><p>​    5. Open容器：没有网络容器，共享主机网络，并且对主机网络有完全的访问权。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 发现open容器里能访问主机所有的网络接口</span><br><span class="line"> 2 [root@server ~]#  docker run --network host centos:latest ip a</span><br><span class="line"> 3 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line"> 4     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line"> 5     inet 127.0.0.1/8 scope host lo</span><br><span class="line"> 6        valid_lft forever preferred_lft forever</span><br><span class="line"> 7     inet6 ::1/128 scope host </span><br><span class="line"> 8        valid_lft forever preferred_lft forever</span><br><span class="line"> 9 2: eno1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">10     link/ether 8c:ec:4b:ab:6d:38 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">11     inet 10.55.2.40/24 brd 10.55.2.255 scope global noprefixroute dynamic eno1</span><br><span class="line">12        valid_lft 522693sec preferred_lft 522693sec</span><br><span class="line">13     inet6 fe80::7b57:66c8:6d06:833d/64 scope link noprefixroute </span><br><span class="line">14        valid_lft forever preferred_lft forever</span><br><span class="line">15 3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">16     link/ether 02:42:cc:a9:3a:68 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">17     inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">18        valid_lft forever preferred_lft forever</span><br><span class="line">19     inet6 fe80::42:ccff:fea9:3a68/64 scope link </span><br><span class="line">20        valid_lft forever preferred_lft forever</span><br><span class="line">21 4: vboxnet0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">22     link/ether 0a:00:27:00:00:00 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">23     inet 192.168.99.1/24 brd 192.168.99.255 scope global vboxnet0</span><br><span class="line">24        valid_lft forever preferred_lft forever</span><br><span class="line">25     inet6 fe80::800:27ff:fe00:0/64 scope link </span><br><span class="line">26        valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>​    6. 常用操作</p><p>​      <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530152902816-1058144649.png"><img src="/imgs/1610676-20200530152902816-1058144649.png" alt="img"></a></p><h2 id="Docker-卷和数据持久化"><a href="#Docker-卷和数据持久化" class="headerlink" title="Docker 卷和数据持久化"></a>Docker 卷和数据持久化</h2><p>​    1. 简介：</p><p>​      1. 术语：一个主机或容器的目录树是由一组挂载点创建而成，这些挂载点描述了如何能构建出一个或多个文件系统。存储卷是容器目录树上的挂载点，提供了容器无关的数据管理方式。</p><p>​      2. 个人理解：将主机磁盘的某个目录挂载到容器的文件系统（主机上的这个目录就称为存储卷），那么在容器内对这个挂载点的操作实际上都是对主机上那个目录的操作。比如将主机目录 &#x2F;opt&#x2F;soft 挂载到容器的 &#x2F;soft 目录，那么容器中对 &#x2F;soft 的所有操作实际上都是对主机目录 &#x2F;opt&#x2F;soft 的操作。</p><p>​    2. 类型</p><p>​      1. 绑定挂载存储卷：使用用户提供的主机目录或文件，在启动容器时需要加入选项 -v &lt;主机位置&gt;:&lt;容器挂载点&gt;。&#96;&#96;</p><p>​      2. 管理存储卷：使用 Docker 的管理空间，在启动容器时需要加入选项 -v &lt;容器挂载点&gt;。Docker 守护进程会自动在主机文件系统（&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes）中创建一个目录来挂载到容器中指定的挂载掉点。&#96;&#96;</p><p>​         <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200530161418315-987094290.png"><img src="/imgs/1610676-20200530161418315-987094290.png" alt="img"></a></p><p>​    3. 常用操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 创建数据卷</span><br><span class="line"> 2 [root@server ~]# docker volume create --name volume1  [-d  指定位置]</span><br><span class="line"> 3 volume1</span><br><span class="line"> 4 </span><br><span class="line"> 5 # 查看数据卷列表信息</span><br><span class="line"> 6 [root@server ~]# docker volume ls</span><br><span class="line"> 7 DRIVER              VOLUME NAME</span><br><span class="line"> 8 local               412e102c656ee75de3db150c41fc9c3c21e2861ff9028a53aa49b25504e1e001</span><br><span class="line"> 9 local               81ad13949b48f53ab4917848fdaa8473ee9523bb18353b38925969f323bc166d</span><br><span class="line">10 local               volume1</span><br><span class="line">11 </span><br><span class="line">12 # 查看数据卷详细信息</span><br><span class="line">13 [root@server ~]# docker volume inspect volume1</span><br><span class="line">14 [</span><br><span class="line">15     &#123;</span><br><span class="line">16         &quot;Name&quot;: &quot;volume1&quot;,</span><br><span class="line">17         &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">18         &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/volume1/_data&quot;,</span><br><span class="line">19         &quot;Labels&quot;: &#123;&#125;,</span><br><span class="line">20         &quot;Scope&quot;: &quot;local&quot;</span><br><span class="line">21     &#125;</span><br><span class="line">22 ]</span><br><span class="line">23 </span><br><span class="line">24 # 删除数据卷</span><br><span class="line">25 [root@server ~]# docker volume rm volume1</span><br><span class="line">26 volume1</span><br><span class="line">27 </span><br><span class="line">28 # 挂载宿主机文件或目录到容器数据卷</span><br><span class="line">29 ## 挂载文件</span><br><span class="line">30 [root@server ~]# cat /opt/test.txt </span><br><span class="line">31 hello world!!!</span><br><span class="line">32 [root@server ~]# docker run -it --name centos-file -v /opt/test.txt:/opt/test.txt:ro centos:latest </span><br><span class="line">33 [root@d62e52a32a07 /]# cat /opt/test.txt </span><br><span class="line">34 hello world!!!</span><br><span class="line">35 </span><br><span class="line">36 ## 挂载目录</span><br><span class="line">37 [root@server ~]# ll /tmp/</span><br><span class="line">38 total 0</span><br><span class="line">39 drwx------ 2 root root 6 May 29 16:14 tmp.fJOTUQbyx3</span><br><span class="line">40 drwx------ 2 root root 6 May 29 16:48 tmp.kt4W6bwra4</span><br><span class="line">41 drwx------ 2 root root 6 May 29 16:10 tmp.xmy3qeNyIx</span><br><span class="line">42 [root@server ~]# docker run --name centos-dir -v /tmp/:/opt/ centos:latest  ls -l /opt/                            </span><br><span class="line">43 total 0</span><br><span class="line">44 drwx------ 2 root root 6 May 29 16:14 tmp.fJOTUQbyx3</span><br><span class="line">45 drwx------ 2 root root 6 May 29 16:48 tmp.kt4W6bwra4</span><br><span class="line">46 drwx------ 2 root root 6 May 29 16:10 tmp.xmy3qeNyIx</span><br><span class="line">47 </span><br><span class="line">48 # 共享数据卷</span><br><span class="line">49 [root@server ~]# docker run --name centos-shared -v /tmp/:/opt/ centos:latest</span><br><span class="line">50 [root@server ~]# docker run --name centos --volumes-from centos-shared  centos:latest ls -l /opt/</span><br><span class="line">51 total 0</span><br><span class="line">52 drwx------ 2 root root 6 May 29 16:14 tmp.fJOTUQbyx3</span><br><span class="line">53 drwx------ 2 root root 6 May 29 16:48 tmp.kt4W6bwra4</span><br><span class="line">54 drwx------ 2 root root 6 May 29 16:10 tmp.xmy3qeNyIx</span><br><span class="line">55 </span><br><span class="line">56 # 备份数据卷</span><br><span class="line">57 [root@server ~]# docker run --name centos-shared -v /tmp/:/opt/ centos:latest </span><br><span class="line">58 [root@server ~]# docker run --rm --volumes-from centos-shared -v $(pwd):/backup centos:latest tar cvf /backup/centos.tar /opt/                         </span><br><span class="line">59 tar: Removing leading `/&#x27; from member names</span><br><span class="line">60 /opt/</span><br><span class="line">61 /opt/.ICE-unix/</span><br><span class="line">62 /opt/.Test-unix/</span><br><span class="line">63 /opt/.X11-unix/</span><br><span class="line">64 /opt/.XIM-unix/</span><br><span class="line">65 /opt/.font-unix/</span><br><span class="line">66 /opt/ks-script-Rl3Umm</span><br><span class="line">67 /opt/yum.log</span><br></pre></td></tr></table></figure><h2 id="Docker-资源限制"><a href="#Docker-资源限制" class="headerlink" title="Docker 资源限制"></a><strong>Docker 资源限制</strong></h2><p>​    1. 简介</p><p>​      1. cgroup：是将任意进程进行分组化管理的Linux内核功能，限制某个或者某些进程的分配资源。</p><p>​      2. subsystem：用于控制cgroup中的进程行为的内核组件。</p><p>​      3. hierarchy：由cgroup组成的层级树，每个hierarchy都对应一个cgroup虚拟文件系统，都有系统上的所有task，此外低 level 的hierarchy 不能超过高 level 设定的资源上限。</p><p>​    2. subsystem（资源控制器）</p><p>​      1. blkio：控制块设备的访问，比如带宽等。</p><p>​      2. cpu：控制进程占用cpu的多少。</p><p>​      3. cpuacct：记录cgroup 中进程使用的 CPU 情况。</p><p>​      4. cpuset：为 cgroup 中的进程分配 CPU 和内存节点。</p><p>​      5. devices：控制进程对设备的访问。</p><p>​      6. freezer：挂起或者恢复 cgroup 中的进程。</p><p>​      7. memory：设定 cgroup 中进程的内存限制，统计使用的内存资源。</p><p>​      8. net_cls：使用等级识别符（classid）标记网络数据包，使得Linux 流量控制程序（tc）识别具体 cgroup 中的数据包。</p><p>​    3. 常用操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> 1 # CPU 资源配额控制</span><br><span class="line"> 2 ## CPU 份额配置</span><br><span class="line"> 3 [root@server ~]# docker run -itd --name cpu512 -c 512 centos:latest </span><br><span class="line"> 4 426e23ed9c96b9482cd167d17ca79c57e140be2359191372a5a0bdfd10d73173</span><br><span class="line"> 5 [root@server ~]# top -p  $(docker inspect -f &#123;&#123;.State.Pid&#125;&#125; da8d71c623ce)</span><br><span class="line"> 6 top - 15:43:49 up 1 day, 23:51,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line"> 7 Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie</span><br><span class="line"> 8 %Cpu(s):  0.3 us,  0.1 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line"> 9 KiB Mem :  8176044 total,  1236396 free,  1157452 used,  5782196 buff/cache</span><br><span class="line">10 KiB Swap:        0 total,        0 free,        0 used.  6711724 avail Mem</span><br><span class="line">11 </span><br><span class="line">12 ## CPU 周期控制</span><br><span class="line">13 docker run -tid --cpu-period 100000(周期) --cpu-quota200000(配额) centos:latest</span><br><span class="line">14 &lt;容器的完整长ID&gt;</span><br><span class="line">15 [root@server ~]# cat /sys/fs/cgroup/cpu/docker/&lt;容器的完整长ID&gt;/cpu.cfs_period_us</span><br><span class="line">16 100000</span><br><span class="line">17 [root@server ~]# cat /sys/fs/cgroup/cpu/docker/&lt;容器的完整长ID&gt;/cpu.cfs_quota_us</span><br><span class="line">18 200000</span><br><span class="line">19 </span><br><span class="line">20 ## CPU 内核控制</span><br><span class="line">21 [root@server ~]# docker run -itd --name cupset --cpuset-cpus=&quot;0,1&quot; centos:latest</span><br><span class="line">22 da8d71c623ce35105201d824234d476b065e8bd6e87b416d262599b7d2ac333f</span><br><span class="line">23 [root@server ~]# cat /sys/fs/cgroup/cpuset/docker/&lt;容器的完整长ID&gt;/cpuset.cpus</span><br><span class="line">24 0-1</span><br><span class="line">25 </span><br><span class="line">26 # 内存资源配额控制</span><br><span class="line">27 -m 设置内存的使用限额</span><br><span class="line">28 --memory-swap 设置内存和swap的使用限额</span><br><span class="line">29 [root@server ~]# docker run -m 200M --memory-swap=300M centos:latest</span><br><span class="line">30 </span><br><span class="line">31 # Block IO 的限制</span><br><span class="line">32 ## 限制 block IO（默认500） </span><br><span class="line">33 [root@server ~]# docker run -itd --name B --blkio-weight 300 centos:latest</span><br><span class="line">34 </span><br><span class="line">35 ## 限制 bps 和 iops</span><br><span class="line">36 bps 是 byte per second，每秒读写的数据量。</span><br><span class="line">37 iops 是 io per second，每秒 IO 的次数。</span><br><span class="line">38 [root@server ~]# docker run -itd --device-write-bps /dev/sda:30MB centos:latest</span><br></pre></td></tr></table></figure><h2 id="Docker-API"><a href="#Docker-API" class="headerlink" title="Docker API"></a><strong>Docker API</strong></h2><p>​    1. 种类</p><p>​      1. Docker Registry API：docker镜像仓库的api，通过操作这套API，你可以自由的自动化、程序化的管理你的镜像仓库。</p><p>​      2. Docker Hub API：用户管理操作的API，docker hub是使用校验和公共 namespaces 的方式来存储账户信息、认证账户、进行账户授权。API同时也允许操作相关的用户仓库和 library 仓库。</p><p>​      3. Docker Remote API：用于控制主机 Docker 服务端的 API，等价于 docker命令行客户端。 有了它，你能远程操作docker容器，更重要的是你可以通过程序自动化运维docker进程。</p><p>​    2. 配置（需要重启 Docker）</p><p>​      1. 在 &#x2F;etc&#x2F;sysconfig&#x2F;docker 文件中添加 OPTIONS&#x3D;’ -H tcp:&#x2F;&#x2F;0.0.0.0:2357 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock ‘ &#96;&#96;</p><p>​      2. 在 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service 文件中 ExecStart 后面添加 -H tcp:&#x2F;&#x2F;0.0.0.0:2357 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock</p><p>​    3. 使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> 1 #### 查看</span><br><span class="line"> 2 # 查看 docker 版本信息</span><br><span class="line"> 3 curl http://localhost:2357/version | python -mjson.tool</span><br><span class="line"> 4 </span><br><span class="line"> 5 # 查看 docker 详细信息</span><br><span class="line"> 6 curl http://localhost:2357/info | python -mjson.tool</span><br><span class="line"> 7 </span><br><span class="line"> 8 # 列出所有镜像</span><br><span class="line"> 9 curl http://localhost:2357/images/json | python -mjson.tool</span><br><span class="line">10 </span><br><span class="line">11 # 列出指定镜像</span><br><span class="line">12 curl http://localhost:2357/images/images_id/json | python -mjson.tool</span><br><span class="line">13 </span><br><span class="line">14 # 列出所有容器</span><br><span class="line">15 curl http://localhost:2357/containers/json | python -mjson.tool</span><br><span class="line">16 </span><br><span class="line">17 # 列出指定容器</span><br><span class="line">18 curl http://localhost:2357/containers/contianer_id/json | python -mjson.tool</span><br><span class="line">19 </span><br><span class="line">20 # 查看 docker 系统文件的变更情况</span><br><span class="line">21 curl http://localhost:2357/containers/contianer_id/changes/json | python -mjson.tool</span><br><span class="line">22 </span><br><span class="line">23 #### 生命周期</span><br><span class="line">24 # 创建容器（mariadb数据库的容器，设置了密码是123456，监听端口是3306）</span><br><span class="line">25 curl -X POST -H &quot;Content-Type: application/json&quot; -d &#x27;&#123;</span><br><span class="line">26     &quot;Image&quot;: &quot;mariadb&quot;,</span><br><span class="line">27     &quot;Env&quot;: [&quot;MYSQL_ROOT_PASSWORD=123456&quot;],</span><br><span class="line">28     &quot;ExposedPorts&quot;: &#123;</span><br><span class="line">29         &quot;3306/tcp&quot;: &#123;&#125;</span><br><span class="line">30     &#125;,</span><br><span class="line">31     &quot;HostConfig&quot;: &#123;</span><br><span class="line">32         &quot;PortBindings&quot;: &#123;</span><br><span class="line">33             &quot;3306/tcp&quot;: [&#123;&quot;HostIp&quot;: &quot;&quot;,&quot;HostPort&quot;: &quot;3306&quot;&#125;]</span><br><span class="line">34         &#125;</span><br><span class="line">35     &#125;,</span><br><span class="line">36     &quot;NetworkSettings&quot;: &#123;</span><br><span class="line">37         &quot;Ports&quot;: &#123;</span><br><span class="line">38             &quot;5000/tcp&quot;: [&#123;&quot;HostIp&quot;: &quot;0.0.0.0&quot;,&quot;HostPort&quot;: &quot;3306&quot;&#125;]</span><br><span class="line">39         &#125;</span><br><span class="line">40     &#125;</span><br><span class="line">41 &#125;&#x27; http://localhost:2357/containers/create</span><br><span class="line">42 </span><br><span class="line">43 # 启动容器</span><br><span class="line">44 curl -X POST http://127.0.0.1:8088/containers/&#123;id&#125;/start  </span><br><span class="line">45 </span><br><span class="line">46 # 停止容器</span><br><span class="line">47 curl -X POST http://127.0.0.1:8088/containers/&#123;id&#125;/stop</span><br><span class="line">48 </span><br><span class="line">49 # 删除容器</span><br><span class="line">50 curl -X POST http://127.0.0.1:8088/containers/&#123;id&#125;/rm</span><br></pre></td></tr></table></figure><h2 id="Docker-实例"><a href="#Docker-实例" class="headerlink" title="Docker 实例"></a><strong>Docker 实例</strong></h2><p>  <strong>一、应用容器化技术</strong></p><p>​    1. supermin5 构建镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 安装</span><br><span class="line"> 2 [root@server ~]# yum install -y supermin5</span><br><span class="line"> 3 Loaded plugins: fastestmirror</span><br><span class="line"> 4 Loading mirror speeds from cached hostfile</span><br><span class="line"> 5 Resolving Dependencies</span><br><span class="line"> 6 --&gt; Running transaction check</span><br><span class="line"> 7 ---&gt; Package supermin5.x86_64 0:5.1.10-1.2.el7 will be installed</span><br><span class="line"> 8 --&gt; Finished Dependency Resolution</span><br><span class="line"> 9 </span><br><span class="line">10 # 预装镜像</span><br><span class="line">11 [root@server ~]# supermin5 -v –prepare bash yum net-tools initscripts vi coreutils -o supermin.d</span><br><span class="line">12 supermin: version: 5.1.10</span><br><span class="line">13 supermin: rpm: detected RPM version 4.11</span><br><span class="line">14 supermin: package handler: fedora/rpm</span><br><span class="line">15 supermin: prepare: bash net-tools initscripts vi coreutils</span><br><span class="line">16 supermin: packages specified on the command line:</span><br><span class="line">17   - bash-4.2.46-12.el7.x86_64</span><br><span class="line">18   - net-tools-2.0-0.17.20131004git.el7.x86_64</span><br><span class="line">19   - initscripts-9.49.39-1.el7_4.1.x86_64</span><br><span class="line">20   - coreutils-8.22-11.el7.x86_64</span><br><span class="line">21 ...</span><br><span class="line">22 supermin: renaming supermin.d.9ohzr3uh to supermin.d</span><br><span class="line">23 </span><br><span class="line">24 # 构建镜像</span><br><span class="line">25 [root@server ~]# supermin5 -v --build --format chroot supermin.d/ -o appliance.d</span><br><span class="line">26 supermin: version: 5.1.10</span><br><span class="line">27 supermin: rpm: detected RPM version 4.11</span><br><span class="line">28 supermin: package handler: fedora/rpm</span><br><span class="line">29 supermin: build: supermin.d/</span><br><span class="line">30 supermin: build: visiting supermin.d/base.tar.gz type gzip base image (tar)</span><br><span class="line">31 supermin: build: visiting supermin.d/packages type uncompressed packages</span><br><span class="line">32 ...</span><br><span class="line">33 supermin: renaming appliance.d.t7dbj8kr to appliance.d</span><br><span class="line">34 </span><br><span class="line">35 # 使用yum安装软件</span><br><span class="line">36 [root@server ~]# echo 7 &gt; appliance.d/etc/yum/vars/releasever</span><br><span class="line">37 </span><br><span class="line">38 # 构建网络(如果需要)</span><br><span class="line">39 [root@server ~]# cp /etc/resolv.conf appliance.d/etc</span><br><span class="line">40 </span><br><span class="line">41 # 将构建镜像归档</span><br><span class="line">42 [root@server ~]# tar --numeric-owner -cpf centos-7.tar -C appliance.d/ .</span><br><span class="line">43 </span><br><span class="line">44 # 从归档文件启动镜像并设置tag</span><br><span class="line">45 [root@server ~]# cat centos-7.tar | docker import - 192.168.200.105:5000/centos-7:latest</span><br><span class="line">46 sha256:b1e7942497d9372d43ad7bc0bfc27687dad6e77f100e7242139592efc2ab4e62</span><br><span class="line">47 </span><br><span class="line">48 # 将镜像上传到仓库</span><br><span class="line">49 [root@server ~]# docker push 192.168.200.105:5000/centos-7:latest</span><br><span class="line">50 The push refers to a repository [192.168.200.51:5000/centos-7]</span><br><span class="line">51 11f2f8c2668b: Pushed </span><br><span class="line">52 latest: digest: sha256:fc47a231f23c189dd93ceeb1bba5aceca50f394003425eaabfbb2062b2feaa9c size: 528</span><br><span class="line">53 </span><br><span class="line">54 # 查看镜像信息</span><br><span class="line">55 [root@server ~]# docker images 192.168.200.105:5000/centos-7:latest</span><br><span class="line">56 REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">57 192.168.200.51:5000/centos-7   latest              5e83db682966        2 minutes ago       213.4 MB</span><br></pre></td></tr></table></figure><p>​    2. Dockerfile 创建镜像</p><p>​      1. 简介</p><p>​       1. Dockerfile是一个包含用于组合映像的命令的文本文档，可以在命令行中调用任何命令。 Docker 通过读取 Dockerfile 中的指令自动生成映像。</p><p>​       2. <code>Docker build命令用于从 Dockerfile 构建映像，可以使用 -f </code>标志指向文件系统中任何位置的Dockerfile。</p><p>​      2. 常用命令</p><p>​        <a href="https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200531135240518-1486540818.png"><img src="/imgs/1610676-20200531135240518-1486540818.png" alt="img"></a></p><p>​      3. 示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> 1 # This my first nginx Dockerfile</span><br><span class="line"> 2 # Version 1.0</span><br><span class="line"> 3 </span><br><span class="line"> 4 # Base images 基础镜像</span><br><span class="line"> 5 FROM centos</span><br><span class="line"> 6 </span><br><span class="line"> 7 # MAINTAINER 维护者信息</span><br><span class="line"> 8 LABLE maintainer=&quot;mj_1028@qq.com&quot; </span><br><span class="line"> 9 </span><br><span class="line">10 # ENV 设置环境变量</span><br><span class="line">11 ENV PATH /usr/local/nginx/sbin:$PATH</span><br><span class="line">12 </span><br><span class="line">13 # ADD  文件放在当前目录下，拷过去会自动解压</span><br><span class="line">14 ADD nginx-1.8.0.tar.gz /usr/local/  </span><br><span class="line">15 ADD epel-release-latest-7.noarch.rpm /usr/local/  </span><br><span class="line">16 </span><br><span class="line">17 # RUN 执行以下命令 </span><br><span class="line">18 RUN rpm -ivh /usr/local/epel-release-latest-7.noarch.rpm</span><br><span class="line">19 RUN yum install -y wget lftp gcc gcc-c++ make openssl-devel pcre-devel pcre &amp;&amp; yum clean all</span><br><span class="line">20 RUN useradd -s /sbin/nologin -M www</span><br><span class="line">21 </span><br><span class="line">22 # WORKDIR 相当于cd</span><br><span class="line">23 WORKDIR /usr/local/nginx-1.8.0 </span><br><span class="line">24 </span><br><span class="line">25 RUN ./configure --prefix=/usr/local/nginx --user=www --group=www --with-http_ssl_module --with-pcre &amp;&amp; make &amp;&amp; make install</span><br><span class="line">27 RUN echo &quot;daemon off;&quot; &gt;&gt; /etc/nginx.conf</span><br><span class="line">28 </span><br><span class="line">29 # EXPOSE 暴露端口</span><br><span class="line">30 EXPOSE 80</span><br><span class="line">31 </span><br><span class="line">32 # CMD 运行以下命令</span><br><span class="line">33 CMD [&quot;nginx&quot;]</span><br></pre></td></tr></table></figure><p>  <strong>二、Dockerfile 构建 MySQL</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">  1 # 编写数据库建表脚本</span><br><span class="line">  2 [root@server mysql]# cat build_table.sh </span><br><span class="line">  3 #!/bin/bash</span><br><span class="line">  4 mysqld_safe &amp;</span><br><span class="line">  5 sleep 5</span><br><span class="line">  6 mysql -uroot -e &quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;$MYSQL_USER&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;$MYSQL_PASS&#x27;  WITH GRANT OPTION;&quot;</span><br><span class="line">  7 mysql -uroot -e &quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;$MYSQL_USER&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;$MYSQL_PASS&#x27;  WITH GRANT OPTION;&quot;</span><br><span class="line">  8 mysql -e &quot;create database chinaskills;&quot;</span><br><span class="line">  9 mysql -e &quot;create table chinaskills.company(name char(20) not null,years int not null)DEFAULT CHARSET=utf8;&quot;</span><br><span class="line"> 10 mysql -e &quot;insert into chinaskills.company values(&#x27;mm&#x27;,2020),(&#x27;dd&#x27;,2020);&quot;</span><br><span class="line"> 11 </span><br><span class="line"> 12 # 编写 yum 源文件</span><br><span class="line"> 13 [root@server mysql]# cat local.repo </span><br><span class="line"> 14 [centos]</span><br><span class="line"> 15 name=centos</span><br><span class="line"> 16 baseurl=file:///opt/centos</span><br><span class="line"> 17 gpgcheck=0</span><br><span class="line"> 18 enabled=1</span><br><span class="line"> 19 [pass]</span><br><span class="line"> 20 name=pass</span><br><span class="line"> 21 baseurl=file:///opt/pass/docker</span><br><span class="line"> 22 gpgcheck=0</span><br><span class="line"> 23 enabled=1</span><br><span class="line"> 24 </span><br><span class="line"> 25 # 编写 Dockerfile</span><br><span class="line"> 26 [root@server mysql]# cat Dockerfile </span><br><span class="line"> 27 # 基础镜像</span><br><span class="line"> 28 FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line"> 29 # 维护者信息</span><br><span class="line"> 30 LABLE maintainer=&quot;mj_1028@qq.com&quot;</span><br><span class="line"> 31 # 使用当前系统的 yum 源文件</span><br><span class="line"> 32 RUN rm -f /etc/yum.repos.d/*</span><br><span class="line"> 33 ADD local.repo /etc/yum.repos.d/</span><br><span class="line"> 34 # 安装MySQL服务，初始化数据库，设置用户名和密码，支持中文</span><br><span class="line"> 35 RUN yum install -y mariadb-server </span><br><span class="line"> 36 RUN mysql_install_db --user=mysql</span><br><span class="line"> 37 ENV MYSQL_USER xiandian</span><br><span class="line"> 38 ENV MYSQL_PASS xiandian</span><br><span class="line"> 39 ENV LC_ALL en_US.UTF-8</span><br><span class="line"> 40 # 运行并修改数据库脚本</span><br><span class="line"> 41 ADD build_table.sh /docker/mysql/build_table.sh</span><br><span class="line"> 42 RUN chmod +x /docker/mysql/build_table.sh</span><br><span class="line"> 43 RUN /docker/mysql/build_table.sh</span><br><span class="line"> 44 # 暴露3306端口，并以后台安全模式启动</span><br><span class="line"> 45 EXPOSE 3306</span><br><span class="line"> 46 CMD mysqld_safe</span><br><span class="line"> 47 </span><br><span class="line"> 48 # 构建镜像</span><br><span class="line"> 49 [root@server mysql]# docker build -t mysql:latest .</span><br><span class="line"> 50 Sending build context to Docker daemon 5.632 kB</span><br><span class="line"> 51 Step 1 : FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line"> 52  ---&gt; 6300524e4fcb</span><br><span class="line"> 53 Step 2 : LABEL maintainer &quot;mj_1028@qq.com&quot;</span><br><span class="line"> 54  ---&gt; Using cache</span><br><span class="line"> 55  ---&gt; 297bb01a36e7</span><br><span class="line"> 56 Step 3 : RUN rm -f /etc/yum.repos.d/*</span><br><span class="line"> 57  ---&gt; Using cache</span><br><span class="line"> 58  ---&gt; 5cd2c60db6e4</span><br><span class="line"> 59 Step 4 : ADD local.repo /etc/yum.repos.d/</span><br><span class="line"> 60  ---&gt; Using cache</span><br><span class="line"> 61  ---&gt; 6bf93249441b</span><br><span class="line"> 62 Step 5 : RUN yum install -y mariadb-server</span><br><span class="line"> 63  ---&gt; Using cache</span><br><span class="line"> 64  ---&gt; c032f3770d64</span><br><span class="line"> 65 Step 6 : RUN mysql_install_db --user=mysql</span><br><span class="line"> 66  ---&gt; Using cache</span><br><span class="line"> 67  ---&gt; cebd6468488a</span><br><span class="line"> 68 Step 7 : ENV MYSQL_USER xiandian</span><br><span class="line"> 69  ---&gt; Using cache</span><br><span class="line"> 70  ---&gt; 4f0a879d55cd</span><br><span class="line"> 71 Step 8 : ENV MYSQL_PASS xiandian</span><br><span class="line"> 72  ---&gt; Using cache</span><br><span class="line"> 73  ---&gt; 168de6eb69ab</span><br><span class="line"> 74 Step 9 : ENV LC_ALL en_US.UTF-8</span><br><span class="line"> 75  ---&gt; Using cache</span><br><span class="line"> 76  ---&gt; a8fa8e895f78</span><br><span class="line"> 77 Step 10 : ADD build_table.sh /docker/mysql/build_table.sh</span><br><span class="line"> 78  ---&gt; Using cache</span><br><span class="line"> 79  ---&gt; 31201ac69e2a</span><br><span class="line"> 80 Step 11 : RUN chmod +x /docker/mysql/build_table.sh</span><br><span class="line"> 81  ---&gt; Using cache</span><br><span class="line"> 82  ---&gt; 27069a74cb3d</span><br><span class="line"> 83 Step 12 : RUN /docker/mysql/build_table.sh</span><br><span class="line"> 84  ---&gt; Using cache</span><br><span class="line"> 85  ---&gt; 41f7ef5e31a7</span><br><span class="line"> 86 Step 13 : EXPOSE 3306</span><br><span class="line"> 87  ---&gt; Using cache</span><br><span class="line"> 88  ---&gt; 0e4dab8114cf</span><br><span class="line"> 89 Step 14 : CMD mysqld_safe</span><br><span class="line"> 90  ---&gt; Using cache</span><br><span class="line"> 91  ---&gt; 1835da94d00e</span><br><span class="line"> 92 Successfully built 1835da94d00e</span><br><span class="line"> 93 </span><br><span class="line"> 94 # 启动容器，登录数据库，查看数据库列表</span><br><span class="line"> 95 [root@server mysql]# docker run -itP --name mysql -e MYSQL_ROOT_PASSWORD=000000 mysql:latest /bin/bash</span><br><span class="line"> 96 bash-4.2# mysql -uxiandian -pxiandian</span><br><span class="line"> 97 Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line"> 98 Your MariaDB connection id is 4</span><br><span class="line"> 99 Server version: 5.5.56-MariaDB MariaDB Server</span><br><span class="line">100 </span><br><span class="line">101 Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line">102 </span><br><span class="line">103 Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line">104 </span><br><span class="line">105 MariaDB [(none)]&gt; show databases;</span><br><span class="line">106 +--------------------+</span><br><span class="line">107 | Database           |</span><br><span class="line">108 +--------------------+</span><br><span class="line">109 | information_schema |</span><br><span class="line">110 | mysql              |</span><br><span class="line">111 | performance_schema |</span><br><span class="line">112 | test              |</span><br><span class="line">113 | chinaskills            |</span><br><span class="line">114 +--------------------+</span><br><span class="line">115 4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>  三<strong>、Dockerfile 构建 Apache+PHP</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">  1 # 编写 PHP 远程访问 MySQL</span><br><span class="line">  2 [root@server ~]# cat test.php </span><br><span class="line">  3 &lt;?php</span><br><span class="line">  4   $con = mysql_connect(getenv(&quot;MYSQL_ADDR&quot;),getenv(&quot;MYSQL_USER&quot;),getenv(&quot;MYSQL_PASS&quot;));</span><br><span class="line">  5   if (!$con)</span><br><span class="line">  6     &#123;</span><br><span class="line">  7       die(&#x27;Could not connect: &#x27; . mysql_error());</span><br><span class="line">  8     &#125;</span><br><span class="line">  9   mysql_select_db(&quot;chinaskills&quot;, $con);</span><br><span class="line"> 10   $result = mysql_query(&quot;SELECT * FROM company&quot;);</span><br><span class="line"> 11   echo &quot;&lt;table border=&#x27;1&#x27;&gt;</span><br><span class="line"> 12   &lt;tr&gt;</span><br><span class="line"> 13   &lt;th&gt;NAME&lt;/th&gt;</span><br><span class="line"> 14   &lt;th&gt;YEARS&lt;/th&gt;</span><br><span class="line"> 15   &lt;/tr&gt;&quot;;</span><br><span class="line"> 16   while($row = mysql_fetch_array($result))</span><br><span class="line"> 17     &#123;</span><br><span class="line"> 18       echo &quot;&lt;tr&gt;&quot;;</span><br><span class="line"> 19       echo &quot;&lt;td&gt;&quot; . $row[&#x27;name&#x27;] . &quot;&lt;/td&gt;&quot;;</span><br><span class="line"> 20       echo &quot;&lt;td&gt;&quot; . $row[&#x27;years&#x27;] . &quot;&lt;/td&gt;&quot;;</span><br><span class="line"> 21       echo &quot;&lt;/tr&gt;&quot;;</span><br><span class="line"> 22     &#125;</span><br><span class="line"> 23     echo &quot;&lt;/table&gt;&quot;;</span><br><span class="line"> 24  </span><br><span class="line"> 25   mysql_close($con);</span><br><span class="line"> 26 ?&gt;</span><br><span class="line"> 27 </span><br><span class="line"> 28 # 编写 Dockerfile</span><br><span class="line"> 29 [root@server ~]# cat Dockerfile </span><br><span class="line"> 30 FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line"> 31 LABEL maintainer=&quot;mj_1028@qq.com&quot;</span><br><span class="line"> 32 RUN rm -f /etc/yum.repos.d/*</span><br><span class="line"> 33 ADD local.repo /etc/yum.repos.d/local.repo</span><br><span class="line"> 34 WORKDIR /root/</span><br><span class="line"> 35 RUN yum install -y httpd php php-mysql </span><br><span class="line"> 36 RUN mkdir -p /var/log/httpd</span><br><span class="line"> 37 RUN mkdir -p /var/www/html</span><br><span class="line"> 38 ENV MYSQL_ADDR 172.17.0.5</span><br><span class="line"> 39 ENV MYSQL_USER xiandian</span><br><span class="line"> 40 ENV MYSQL_PASS xiandian</span><br><span class="line"> 41 ENV TERM linux</span><br><span class="line"> 42 ENV LC_ALL en_US.UTF-8</span><br><span class="line"> 43 ADD test.php /var/www/html/test.php</span><br><span class="line"> 44 EXPOSE 80</span><br><span class="line"> 45 ADD run.sh /root/run.sh</span><br><span class="line"> 46 RUN chmod u+x /root/run.sh</span><br><span class="line"> 47 CMD /root/run.sh</span><br><span class="line"> 48 </span><br><span class="line"> 49 # 构建</span><br><span class="line"> 50 [root@server ~]# docker build -t apache-php:laetst .</span><br><span class="line"> 51 Sending build context to Docker daemon 32.77 kB</span><br><span class="line"> 52 Step 1 : FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line"> 53  ---&gt; 6300524e4fcb</span><br><span class="line"> 54 Step 2 : LABEL maintainer &quot;mj_1028@qq.com&quot;</span><br><span class="line"> 55  ---&gt; Using cache</span><br><span class="line"> 56  ---&gt; 297bb01a36e7</span><br><span class="line"> 57 Step 3 : RUN rm -f /etc/yum.repos.d/*</span><br><span class="line"> 58  ---&gt; Using cache</span><br><span class="line"> 59  ---&gt; 5cd2c60db6e4</span><br><span class="line"> 60 Step 4 : ADD local.repo /etc/yum.repos.d/local.repo</span><br><span class="line"> 61  ---&gt; Using cache</span><br><span class="line"> 62  ---&gt; 6bf93249441b</span><br><span class="line"> 63 Step 5 : WORKDIR /root/</span><br><span class="line"> 64  ---&gt; Using cache</span><br><span class="line"> 65  ---&gt; 86be0e478fd9</span><br><span class="line"> 66 Step 6 : RUN yum install -y httpd php php-mysql</span><br><span class="line"> 67  ---&gt; Using cache</span><br><span class="line"> 68  ---&gt; 40756572de7f</span><br><span class="line"> 69 Step 7 : RUN mkdir -p /var/log/httpd</span><br><span class="line"> 70  ---&gt; Using cache</span><br><span class="line"> 71  ---&gt; 457d374ff59a</span><br><span class="line"> 72 Step 8 : RUN mkdir -p /var/www/html</span><br><span class="line"> 73  ---&gt; Using cache</span><br><span class="line"> 74  ---&gt; 738f8d821172</span><br><span class="line"> 75 Step 9 : ENV MYSQL_ADDR 172.17.0.5</span><br><span class="line"> 76  ---&gt; Using cache</span><br><span class="line"> 77  ---&gt; 6348e4d33a2b</span><br><span class="line"> 78 Step 10 : ENV MYSQL_USER xiandian</span><br><span class="line"> 79  ---&gt; Using cache</span><br><span class="line"> 80  ---&gt; d3ba7946fb52</span><br><span class="line"> 81 Step 11 : ENV MYSQL_PASS xiandian</span><br><span class="line"> 82  ---&gt; Using cache</span><br><span class="line"> 83  ---&gt; 3d40f9cfe126</span><br><span class="line"> 84 Step 12 : ENV TERM linux</span><br><span class="line"> 85  ---&gt; Using cache</span><br><span class="line"> 86  ---&gt; 1a6ad56ec0e8</span><br><span class="line"> 87 Step 13 : ENV LC_ALL en_US.UTF-8</span><br><span class="line"> 88  ---&gt; Using cache</span><br><span class="line"> 89  ---&gt; ed9fdc4a238b</span><br><span class="line"> 90 Step 14 : ADD test.php /var/www/html/test.php</span><br><span class="line"> 91  ---&gt; Using cache</span><br><span class="line"> 92  ---&gt; 3d45b3c49b07</span><br><span class="line"> 93 Step 15 : EXPOSE 80</span><br><span class="line"> 94  ---&gt; Using cache</span><br><span class="line"> 95  ---&gt; 1609552d6493</span><br><span class="line"> 96 Step 16 : ADD run.sh /root/run.sh</span><br><span class="line"> 97  ---&gt; Using cache</span><br><span class="line"> 98  ---&gt; 7b00521525e8</span><br><span class="line"> 99 Step 17 : RUN chmod u+x /root/run.sh</span><br><span class="line">100  ---&gt; Using cache</span><br><span class="line">101  ---&gt; 411bd471e1ee</span><br><span class="line">102 Step 18 : CMD /root/run.sh</span><br><span class="line">103  ---&gt; Using cache</span><br><span class="line">104  ---&gt; c719019aa274</span><br><span class="line">105 Successfully built c719019aa274</span><br><span class="line">106 </span><br><span class="line">107 # 访问</span><br><span class="line">108 [root@server ~]# curl http://192.168.200.51:8096/test.php</span><br><span class="line">109 &lt;table border=&#x27;1&#x27;&gt;</span><br><span class="line">110    &lt;tr&gt;</span><br><span class="line">111      &lt;th&gt;NAME&lt;/th&gt;</span><br><span class="line">112      &lt;th&gt;YEARS&lt;/th&gt;</span><br><span class="line">113    &lt;/tr&gt;</span><br><span class="line">114    &lt;tr&gt;</span><br><span class="line">115       &lt;td&gt;mm&lt;/td&gt;</span><br><span class="line">116       &lt;td&gt;2020&lt;/td&gt;</span><br><span class="line">117     &lt;/tr&gt;</span><br><span class="line">118     &lt;tr&gt;</span><br><span class="line">119       &lt;td&gt;dd&lt;/td&gt;</span><br><span class="line">120       &lt;td&gt;2020&lt;/td&gt;</span><br><span class="line">121     &lt;/tr&gt;</span><br><span class="line">122 &lt;/table&gt;</span><br></pre></td></tr></table></figure><p>  <strong>四、Dockerfile 构建 Tomcat</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"> 1 # 编辑 Dockerfile</span><br><span class="line"> 2 [root@server ~]# cat Dockerfile</span><br><span class="line"> 3 FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line"> 4 LABEL maintainer=&quot;mj_1028@qq.com&quot;</span><br><span class="line"> 5 RUN rm -f /etc/yum.repos.d/</span><br><span class="line"> 6 ADD local.repo /etc/yum.repos.d/local.repo</span><br><span class="line"> 7 RUN yum install -y java unzip</span><br><span class="line"> 8 ENV LC_ALL en_US.UTF-8</span><br><span class="line"> 9 ADD apache-tomcat.zip  /root/apache-tomcat.zip</span><br><span class="line">10 RUN unzip /root/apache-tomcat.zip -d /root/</span><br><span class="line">11 EXPOSE 8080</span><br><span class="line">12 RUN chmod u+x /root/apache-tomcat-6/bin/</span><br><span class="line">13 ADD index.html /root/apache-tomcat-6/webapps/ROOT/index.html</span><br><span class="line">14 CMD /root/apache-tomcat-6/bin/catalina.sh</span><br><span class="line">15 </span><br><span class="line">16 # 构建</span><br><span class="line">17 [root@server ~]# docker build -t tomcat:v1.0 .</span><br><span class="line">18 Sending build context to Docker daemon 5.055 MB</span><br><span class="line">19 Step 1 : FROM 192.168.200.51:5000/centos-7:latest</span><br><span class="line">20  ---&gt; 6300524e4fcb</span><br><span class="line">21 Step 2 : LABEL maintainer &quot;mj_1028@qq.com&quot;</span><br><span class="line">22  ---&gt; Using cache</span><br><span class="line">23  ---&gt; 297bb01a36e7</span><br><span class="line">24 Step 3 : RUN rm -f /etc/yum.repos.d/</span><br><span class="line">25  ---&gt; Using cache</span><br><span class="line">26  ---&gt; 5cd2c60db6e4</span><br><span class="line">27 Step 4 : ADD local.repo /etc/yum.repos.d/local.repo</span><br><span class="line">28  ---&gt; Using cache</span><br><span class="line">29  ---&gt; 65c3b9a5e36c</span><br><span class="line">30 Step 5 : RUN yum install -y java unzip</span><br><span class="line">31  ---&gt; Using cache</span><br><span class="line">32  ---&gt; c52f6b212a3e</span><br><span class="line">33 Step 6 : ENV LC_ALL en_US.UTF-8</span><br><span class="line">34  ---&gt; Using cache</span><br><span class="line">35  ---&gt; c79e93ff2f1a</span><br><span class="line">36 Step 7 : ADD apache-tomcat.zip /root/apache-tomcat.zip</span><br><span class="line">37  ---&gt; Using cache</span><br><span class="line">38  ---&gt; 1d9559d21467</span><br><span class="line">39 Step 8 : RUN unzip /root/apache-tomcat.zip -d /root/</span><br><span class="line">40  ---&gt; Using cache</span><br><span class="line">41  ---&gt; cff845220459</span><br><span class="line">42 Step 9 : EXPOSE 8080</span><br><span class="line">43  ---&gt; Using cache</span><br><span class="line">44  ---&gt; 3c7b78ef3e32</span><br><span class="line">45 Step 10 : RUN chmod u+x /root/apache-tomcat-6/bin/</span><br><span class="line">46  ---&gt; Using cache</span><br><span class="line">47  ---&gt; db348be4e9a7</span><br><span class="line">48 Step 11 : ADD index.html /root/apache-tomcat-6/webapps/ROOT/index.html</span><br><span class="line">49  ---&gt; Using cache</span><br><span class="line">50  ---&gt; 8f1be41345b2</span><br><span class="line">51 Step 12 : CMD /root/apache-tomcat-6/bin/catalina.sh</span><br><span class="line">52  ---&gt; Using cache</span><br><span class="line">53  ---&gt; d1fadb90c70f</span><br><span class="line">54 Successfully built d1fadb90c70f57 </span><br><span class="line">58 #  访问并查看JDK及Tomcat版本信息</span><br><span class="line">59 [root@server ~]# curl 192.168.200.51:8080</span><br><span class="line">60 Xiandian WEB</span><br><span class="line">61 </span><br><span class="line">62 bash-4.2# java -version</span><br><span class="line">63 openjdk version &quot;1.8.0_102&quot;</span><br><span class="line">64 OpenJDK Runtime Environment (build 1.8.0_102-b14)</span><br><span class="line">65 OpenJDK 64-Bit Server VM (build 25.102-b14, mixed mode)</span><br><span class="line">66 </span><br><span class="line">67 bash-4.2# ./version.sh </span><br><span class="line">68 Server version: Apache Tomcat/6.0.20</span><br><span class="line">69 Server built:   May 14 2009 01:13:50</span><br><span class="line">70 Server number:  6.0.20.0</span><br><span class="line">71 OS Name:        Linux</span><br><span class="line">72 OS Version:     3.10.0-229.el7.x86_64</span><br><span class="line">73 Architecture:   amd64</span><br><span class="line">74 JVM Version:    1.8.0_102-b14</span><br><span class="line">75 JVM Vendor:     Oracle Corporation</span><br></pre></td></tr></table></figure><h2 id="常用内容"><a href="#常用内容" class="headerlink" title="常用内容"></a>常用内容</h2><h3 id="设置docker开机自启动，并设置容器自动重启"><a href="#设置docker开机自启动，并设置容器自动重启" class="headerlink" title="设置docker开机自启动，并设置容器自动重启"></a>设置docker开机自启动，并设置容器自动重启</h3><h4 id="设置docker开机启动"><a href="#设置docker开机启动" class="headerlink" title="设置docker开机启动"></a>设置docker开机启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h4 id="查询容器启动情况"><a href="#查询容器启动情况" class="headerlink" title="查询容器启动情况"></a>查询容器启动情况</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="设置容器自动重启"><a href="#设置容器自动重启" class="headerlink" title="设置容器自动重启"></a>设置容器自动重启</h3><h4 id="创建容器时设置"><a href="#创建容器时设置" class="headerlink" title="创建容器时设置"></a>创建容器时设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always --name 设置容器名 使用的镜像</span><br><span class="line">（上面命令  --name后面两个参数根据实际情况自行修改）</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker 容器的重启策略如下：</span></span><br><span class="line"> --restart具体参数值详细信息：</span><br><span class="line">       no　　　　　　　 // 默认策略,容器退出时不重启容器；</span><br><span class="line">       on-failure　　  // 在容器非正常退出时（退出状态非0）才重新启动容器；</span><br><span class="line">       on-failure:3    // 在容器非正常退出时重启容器，最多重启3次；</span><br><span class="line">       always　　　　  // 无论退出状态是如何，都重启容器；</span><br><span class="line">       unless-stopped  // 在容器退出时总是重启容器，但是不考虑在 Docker 守护进程启动时就已经停止了的容器。</span><br></pre></td></tr></table></figure><h4 id="修改已有容器，使用update"><a href="#修改已有容器，使用update" class="headerlink" title="修改已有容器，使用update"></a>修改已有容器，使用update</h4><p>如果创建时未指定 --restart&#x3D;always，可通过update 命令设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always 容器ID(或者容器名)</span><br><span class="line">（容器ID或者容器名根据实际情况修改）</span><br></pre></td></tr></table></figure><h3 id="将docker镜像打成tar包导出"><a href="#将docker镜像打成tar包导出" class="headerlink" title="将docker镜像打成tar包导出"></a>将docker镜像打成tar包导出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、docker commit &lt;容器id&gt; &lt;镜像名&gt;:&lt;tag&gt;     ---- 将容器保存成镜像</span><br><span class="line"></span><br><span class="line">保存后 docker images 便可以看到镜像</span><br><span class="line"></span><br><span class="line">2、docker save -o &lt;tar包名&gt;.tar &lt;镜像名&gt;:&lt;tag&gt;      ---- 将镜像保存为.tar文件，默认保存在当前目录</span><br></pre></td></tr></table></figure><h3 id="从tar包中导入docker镜像"><a href="#从tar包中导入docker镜像" class="headerlink" title="从tar包中导入docker镜像"></a>从tar包中导入docker镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、docker load -i &lt;tar包名&gt;.tar     ---- 从 tar 包导入镜像</span><br><span class="line"></span><br><span class="line">导入镜像后，通过 docker images 便可看到导入的镜像。</span><br><span class="line"></span><br><span class="line">2、docker run -itd -p &lt;本地端口&gt;:&lt;容器端口&gt; --restart=always &lt;镜像名&gt;:&lt;tag&gt;    ---- 通过镜像起容器</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Docker-是什么？&quot;&gt;&lt;a href=&quot;#Docker-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Docker 是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;Docker 是什么？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​    1. Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）。几乎没有性能开销，可以很容易地在机器和数据中心中运行。最重要的是，他们不依赖于任何语言、框架包括系统。&lt;/p&gt;
&lt;p&gt;​    2. Docker 是基于Go语言实现的云开源项目，诞生于2013年初，最初是dotCloud公司发起。由镜像(Image)、容器(Container)、仓库(Repository) 三大核心组成。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   3. Docker 通过对应用组件的封装、分发、部署、运行等生命周期的管理，达到应用组件级别的“一次封装，到处运行”。这里应用组件，即可以是Web应用，也可以是一套数据库服务，甚至是一个操作系统或编译器。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;为什么要使用-Docker？&quot;&gt;&lt;a href=&quot;#为什么要使用-Docker？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用 Docker？&quot;&gt;&lt;/a&gt;&lt;strong&gt;为什么要使用 Docker？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​    1. Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。&lt;/p&gt;
&lt;p&gt;​    2. 更快速的交付和部署(使用docker，开发人员可以用镜像来快速构建一套标准的开发环境;开发完成之后，测试和运维人员可以直接使用相同环境来部署代码)。&lt;/p&gt;
&lt;p&gt;​    3. 响应式部署和扩展(docker容器几乎可以在任意平台上运行，包括物理机、虚拟机、公有云、私有云、个人电脑、服务器等。可以在不同的平台轻松地迁移应用)。&lt;/p&gt;
&lt;p&gt;​    4. 更简单的更新管理(使用Dockerfile，只需要修改小小的配置，就可以替代以往大量的更新工作)。&lt;/p&gt;
&lt;p&gt;​      与传统的虚拟机对比&lt;/p&gt;
&lt;p&gt;​        &lt;a href=&quot;https://img2020.cnblogs.com/blog/1610676/202005/1610676-20200529075343772-1700042586.png&quot;&gt;&lt;img src=&quot;/imgs/1610676-20200529075343772-1700042586.png&quot; alt=&quot;img&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://github.com/jiangjiawei520/categories/docker/"/>
    
    
    <category term="docker" scheme="https://github.com/jiangjiawei520/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客之使用github Actions将自动构建并发布静态源码</title>
    <link href="https://github.com/jiangjiawei520/post/912f3dbd.html"/>
    <id>https://github.com/jiangjiawei520/post/912f3dbd.html</id>
    <published>2024-04-19T14:16:26.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自动构建并发布"><a href="#自动构建并发布" class="headerlink" title="自动构建并发布"></a>自动构建并发布</h2><p>   github的action功能，可以使用这个功能代替手工的发布操作。在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。 您可以发现、创建和共享操作以执行您喜欢的任何作业（包括 CI&#x2F;CD），并将操作合并到完全自定义的工作流程中。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><pre><code>首先建立一个Git仓库，这里不再赘述这里我采用了sshkey的形式来进行仓库的操作</code></pre><h3 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C YourCount@example.com</span><br></pre></td></tr></table></figure><h3 id="打开git仓库-添加部署用的私钥"><a href="#打开git仓库-添加部署用的私钥" class="headerlink" title="打开git仓库,添加部署用的私钥"></a>打开git仓库,添加部署用的私钥</h3><p>​  注意添加的secret名称需要唯一，不能于本账号的其他仓库的重复，不然会导致失败。</p><blockquote><p>setting-&gt;secrets-&gt;add new secret</p></blockquote><p><a href="https://i.loli.net/2020/04/16/ePo2EwfZirp9h31.png"><img src="/imgs/ePo2EwfZirp9h31.png" alt="ePo2EwfZirp9h31"></a></p><span id="more"></span><h3 id="添加权限验证的公钥"><a href="#添加权限验证的公钥" class="headerlink" title="添加权限验证的公钥"></a>添加权限验证的公钥</h3><p>​在个人账号的设置里面设置，只用设置一次就行，如果之前设置过，可以跳过本步骤。</p><blockquote><p>setting-&gt;deploy keys-&gt;add deploy key</p></blockquote><p><a href="https://i.loli.net/2020/04/16/UK1lDvTx5PZBM2m.png"><img src="/imgs/UK1lDvTx5PZBM2m.png" alt="UK1lDvTx5PZBM2m"></a></p><p>至此我们的仓库准备工作就已经完成</p><h2 id="编写action发布文件"><a href="#编写action发布文件" class="headerlink" title="编写action发布文件"></a>编写action发布文件</h2><blockquote><p>action-&gt;set up a new workflow file</p></blockquote><p>可以看到下方有很多发布模板供我们选择</p><p>此次我们自己来进行编写</p><p><a href="https://i.loli.net/2020/04/16/LHfVB3gmRvQ18se.png"><img src="/imgs/LHfVB3gmRvQ18se.png" alt="LHfVB3gmRvQ18se"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">name: auto publish #发布名称</span><br><span class="line"></span><br><span class="line">on:  </span><br><span class="line">  push: #触发方式</span><br><span class="line">    branches: </span><br><span class="line">      - master #触发分支</span><br><span class="line"></span><br><span class="line">jobs: #脚本内容</span><br><span class="line">  build-deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    </span><br><span class="line">    steps:</span><br><span class="line">    - uses: actions/checkout@v1</span><br><span class="line">    - run: npm ci</span><br><span class="line">    - run: npm install vuepress</span><br><span class="line">    - run: npm run build</span><br><span class="line">    - run: cp CNAME .vuepress/dist/ #指定gitpage的自定义域名</span><br><span class="line">    </span><br><span class="line">    - name: Deploy</span><br><span class="line">      uses: peaceiris/actions-gh-pages@v2.5.0</span><br><span class="line">      env:</span><br><span class="line">        ACTIONS_DEPLOY_KEY: $&#123;&#123;secrets.ACCESS_TOKEN&#125;&#125; #这里引用的是刚才生成的私钥</span><br><span class="line">        PUBLISH_BRANCH: gh-pages #发布到的分支</span><br><span class="line">        PUBLISH_DIR: .vuepress/dist #需要发布的内容</span><br></pre></td></tr></table></figure><p>下面我们每次对master分支的推送都会触发该发布流程</p><p>该发布流程会自动构建vuepress项目并把生成的文件发布到当前项目的gh-pages分支下</p><h2 id="自动构建并发布到另一仓库"><a href="#自动构建并发布到另一仓库" class="headerlink" title="自动构建并发布到另一仓库"></a>自动构建并发布到另一仓库</h2><p>​新的需求 <strong>自动构建后发布到不同的仓库</strong>。</p><h3 id="正文-1"><a href="#正文-1" class="headerlink" title="正文"></a>正文</h3><p>我们直接新建一个yml发布文件</p><p>在系统给我们生成的文件中我们可以看到基础语法的介绍</p><p>这里我结合自己的理解标注一下</p><p>在进行解读之前我们先了解一下基本概念</p><h3 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h3><ul><li>workflow (工作流程)</li><li>job (任务) 一个workflow可以由多个不同的job组成</li><li>step (步骤) 每个job可以由多个step来组成</li><li>action(动作) 每个step又可以由多个action来组成</li></ul><h3 id="Action市场"><a href="#Action市场" class="headerlink" title="Action市场"></a>Action市场</h3><p>由于持续集成大家的需求大部分可能都是相同的操作</p><p>所以github建立了一个Action市场</p><p>使得每个人编写的Action脚本都可以被其他人来引用</p><p>这就使得当我这种彩笔小白想要使用这些功能的时候而不用写出很复杂的脚本</p><p>而这整个持续集成的过程也就成为了不同的Action相组合的产物</p><p>使用方法也很简单，只需要使用<code>uses</code>关键字直接引用别人的库即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uses userName/repoName</span><br></pre></td></tr></table></figure><h3 id="结合模板"><a href="#结合模板" class="headerlink" title="结合模板"></a>结合模板</h3><p>然后我们来结合系统生成的基础模板来进行基本的解读</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># This is a basic workflow to help you get started with Actions</span><br><span class="line"></span><br><span class="line">name: CI  # 构建流程的名称</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">on: #触发该流程的方式</span><br><span class="line">  push:</span><br><span class="line">    branches: [ master ]  #触犯该流程的分支</span><br><span class="line">  pull_request:</span><br><span class="line">    branches: [ master ]</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  # 该任务当前仅包含了一个任务  名称是build</span><br><span class="line">  build:    </span><br><span class="line">    runs-on: ubuntu-latest #任务锁运行的工作环境</span><br><span class="line"></span><br><span class="line">    # 该任务所包含的步骤</span><br><span class="line">    steps:</span><br><span class="line">    # 步骤所依赖的操作库 这里引用了官方发布的git操作库 目的是拉取当前库的代码</span><br><span class="line">    - uses: actions/checkout@v2</span><br><span class="line"></span><br><span class="line">    # 这里是一个单行命令的模板</span><br><span class="line">    - name: Run a one-line script</span><br><span class="line">      run: echo Hello, world!</span><br><span class="line"></span><br><span class="line">    # 这里是一个多行命令的模板</span><br><span class="line">    - name: Run a multi-line script</span><br><span class="line">      run: |</span><br><span class="line">        echo Add other actions to build,</span><br><span class="line">        echo test, and deploy your project.</span><br></pre></td></tr></table></figure><h3 id="用已有的库进行持续集成-当前库构建发布到另外的库"><a href="#用已有的库进行持续集成-当前库构建发布到另外的库" class="headerlink" title="用已有的库进行持续集成(当前库构建发布到另外的库)"></a>用已有的库进行持续集成(当前库构建发布到另外的库)</h3><p>到这里我们就可以开始进行自己的Action的组装了</p><p>首先我们先找一个有发布到其他Git库功能的Action</p><p>我们可以在github的市场搜索自己需要的Action</p><p><a href="https://i.loli.net/2020/04/17/MFcPRLTway742pE.png"><img src="/imgs/MFcPRLTway742pE.png" alt="MFcPRLTway742pE"></a></p><p>这里我使用的是<code>s0/git-publish-subdir-action@master</code></p><p>点开这个库的主页我们可以在下方看到该库的使用说明</p><p>这里就不在赘述了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">name: AutoBuild</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches: [ OneKeyVip-master ]</span><br><span class="line">  pull_request:</span><br><span class="line">    branches: [ OneKeyVip-master ]</span><br><span class="line">jobs:</span><br><span class="line">  </span><br><span class="line">  build:</span><br><span class="line">    name: build</span><br><span class="line">    runs-on: ubuntu-latest    </span><br><span class="line">    steps:    </span><br><span class="line">    - uses: actions/checkout@v2    </span><br><span class="line">    - name: npm install</span><br><span class="line">      run: |</span><br><span class="line">        npm install</span><br><span class="line">        npm ci</span><br><span class="line">    - name: npm build</span><br><span class="line">      run: |</span><br><span class="line">       npm run build</span><br><span class="line">       cp README.MD ./publish/README.MD #可选</span><br><span class="line">       cp CHANGELOG ./publish/CHANGELOG #可选</span><br><span class="line"></span><br><span class="line">    - name: publish</span><br><span class="line">      uses: s0/git-publish-subdir-action@master</span><br><span class="line">      env:</span><br><span class="line">        REPO: 目标库</span><br><span class="line">        BRANCH: 目标分支</span><br><span class="line">        FOLDER: 要发布的内容所在的文件夹        </span><br><span class="line">        SSH_PRIVATE_KEY: $&#123;&#123; secrets.publish &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Repository-not-found"><a href="#Repository-not-found" class="headerlink" title="Repository not found."></a>Repository not found.</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hexo b</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start backup: git</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">ERROR: Repository not found.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">INFO  Backup done: git</span><br></pre></td></tr></table></figure><p>删除.git目录，重新执行hexo b</p><p>检查添加命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">检查已有分支</span><br><span class="line">git remote -v</span><br><span class="line">gitee   git@gitee.com:jiangjiawei520172/person_blog_new.git (fetch)</span><br><span class="line">gitee   git@gitee.com:jiangjiawei520172/person_blog_new.git (push)</span><br><span class="line">github  git@github.com:jiangjiawei520/person_blog_new.git (fetch)</span><br><span class="line">github  git@github.com:jiangjiawei520/person_blog_new.git (push)</span><br><span class="line">github_source   git@github.com:jiangjiawei520/person_blog_new_source.git (fetch)</span><br><span class="line">github_source   git@github.com:jiangjiawei520/person_blog_new_source.git (push)</span><br><span class="line"></span><br><span class="line">如无gitee、github_source则添加，github未启动（查询站点根目录_config.yml配置文件backup下的repository参数）</span><br><span class="line">git remote add gitee/github/github_source git@xxx.git</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;自动构建并发布&quot;&gt;&lt;a href=&quot;#自动构建并发布&quot; class=&quot;headerlink&quot; title=&quot;自动构建并发布&quot;&gt;&lt;/a&gt;自动构建并发布&lt;/h2&gt;&lt;p&gt;   github的action功能，可以使用这个功能代替手工的发布操作。在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。 您可以发现、创建和共享操作以执行您喜欢的任何作业（包括 CI&amp;#x2F;CD），并将操作合并到完全自定义的工作流程中。&lt;/p&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;首先建立一个Git仓库，这里不再赘述

这里我采用了sshkey的形式来进行仓库的操作
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;生成ssh密钥&quot;&gt;&lt;a href=&quot;#生成ssh密钥&quot; class=&quot;headerlink&quot; title=&quot;生成ssh密钥&quot;&gt;&lt;/a&gt;生成ssh密钥&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C YourCount@example.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;打开git仓库-添加部署用的私钥&quot;&gt;&lt;a href=&quot;#打开git仓库-添加部署用的私钥&quot; class=&quot;headerlink&quot; title=&quot;打开git仓库,添加部署用的私钥&quot;&gt;&lt;/a&gt;打开git仓库,添加部署用的私钥&lt;/h3&gt;&lt;p&gt;​	  注意添加的secret名称需要唯一，不能于本账号的其他仓库的重复，不然会导致失败。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;setting-&amp;gt;secrets-&amp;gt;add new secret&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2020/04/16/ePo2EwfZirp9h31.png&quot;&gt;&lt;img src=&quot;/imgs/ePo2EwfZirp9h31.png&quot; alt=&quot;ePo2EwfZirp9h31&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
    <category term="github" scheme="https://github.com/jiangjiawei520/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+yilia添加隐藏左边栏目按钮</title>
    <link href="https://github.com/jiangjiawei520/post/2af8072d.html"/>
    <id>https://github.com/jiangjiawei520/post/2af8072d.html</id>
    <published>2024-04-18T18:16:26.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<p>效果图：<br><img src="/imgs/image-1573145229532.png" alt="file"></p><p>点击按钮时，缩进左侧边栏，再次点击再弹出来。</p><h2 id="添加隐藏左边栏目按钮"><a href="#添加隐藏左边栏目按钮" class="headerlink" title="添加隐藏左边栏目按钮"></a>添加隐藏左边栏目按钮</h2><p>参考：<a href="https://cqh-i.github.io/2019/08/07/hexo-yilia%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9A%90%E8%97%8F%E5%B7%A6%E8%BE%B9%E6%A0%8F%E7%9B%AE%E6%8C%89%E9%92%AE/">添加隐藏左边栏目按钮</a></p><p>折腾了一个下午,终于把隐藏左边侧边栏目的效果实现了. 实现了点击按钮隐藏侧边栏, 查找和修改源码实在是太麻烦了.</p><h3 id="制作按钮样式"><a href="#制作按钮样式" class="headerlink" title="制作按钮样式"></a>制作按钮样式</h3><p>先找一款你喜欢的CSS菜单按钮切换,或者自己实现一个,我在网上找到一款比较<a href="https://c.runoob.com/codedemo/3156">简单的样式</a>,稍微做了下修改.</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">.mymenucontainer &#123;</span><br><span class="line">display:block;</span><br><span class="line">cursor:pointer;</span><br><span class="line">left:0;</span><br><span class="line">top:0;</span><br><span class="line">width:35px;</span><br><span class="line">height:35px;</span><br><span class="line">z-index:9999;</span><br><span class="line">position:fixed;</span><br><span class="line">&#125;</span><br><span class="line">.bar1 &#123;</span><br><span class="line">width:35px;</span><br><span class="line">height:3px;</span><br><span class="line">background-color:#333;</span><br><span class="line">margin:6px 0;</span><br><span class="line">transition:0.4s;</span><br><span class="line">-webkit-transform:rotate(-45deg) translate(-8px,8px);</span><br><span class="line">transform:rotate(-45deg) translate(-8px,8px);</span><br><span class="line">&#125;</span><br><span class="line">.bar2 &#123;</span><br><span class="line">width:35px;</span><br><span class="line">height:3px;</span><br><span class="line">background-color:#333;</span><br><span class="line">margin:6px 0;</span><br><span class="line">transition:0.4s;</span><br><span class="line">opacity:0;</span><br><span class="line">&#125;</span><br><span class="line">.bar3 &#123;</span><br><span class="line">width:35px;</span><br><span class="line">height:3px;</span><br><span class="line">background-color:#333;</span><br><span class="line">margin:6px 0;</span><br><span class="line">transition:0.4s;</span><br><span class="line">-webkit-transform:rotate(45deg) translate(-4px,-6px);</span><br><span class="line">transform:rotate(45deg) translate(-4px,-6px);</span><br><span class="line">&#125;</span><br><span class="line">.change .bar1 &#123;</span><br><span class="line">-webkit-transform:rotate(0deg) translate(0px,0px);</span><br><span class="line">transform:rotate(0deg) translate(0px,0px);</span><br><span class="line">&#125;</span><br><span class="line">.change .bar2 &#123;</span><br><span class="line">opacity:1;</span><br><span class="line">&#125;</span><br><span class="line">.change .bar3 &#123;</span><br><span class="line">-webkit-transform:rotate(0deg) translate(0px,0px);</span><br><span class="line">transform:rotate(0deg) translate(0px,0px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>样式制作完成后,压缩,然后添加进<code>themes\new-yilia\source\css\main.0cf68a.css</code>文件中,添加在最上面即可（否则下面兼容移动端会取不到mymenucontainer）</p><h3 id="添加按钮到相应的位置"><a href="#添加按钮到相应的位置" class="headerlink" title="添加按钮到相应的位置"></a>添加按钮到相应的位置</h3><p>打开<code>themes\new-yilia\layout\layout.ejs</code>文件, 找到<code>&lt;div class=&quot;left-col&quot;</code>,在其上面添加如下代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mymenucontainer&quot; onclick=&quot;myFunction(this)&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;bar1&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;bar2&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;bar3&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在<code>&lt;/body&gt;</code>之后, <code>&lt;/html&gt;</code>前添加如下Js代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var hide = false;</span><br><span class="line">    function myFunction(x) &#123;</span><br><span class="line">        x.classList.toggle(&quot;change&quot;);</span><br><span class="line">        if(hide == false)&#123;</span><br><span class="line">            $(&quot;.left-col&quot;).css(&#x27;display&#x27;, &#x27;none&#x27;);</span><br><span class="line">            $(&quot;.mid-col&quot;).css(&quot;left&quot;, 6);</span><br><span class="line">            $(&quot;.tools-col&quot;).css(&#x27;display&#x27;, &#x27;none&#x27;);</span><br><span class="line">            $(&quot;.tools-col.hide&quot;).css(&#x27;display&#x27;, &#x27;none&#x27;);</span><br><span class="line">            hide = true;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $(&quot;.left-col&quot;).css(&#x27;display&#x27;, &#x27;&#x27;);</span><br><span class="line">            $(&quot;.mid-col&quot;).css(&quot;left&quot;, 300);</span><br><span class="line">            $(&quot;.tools-col&quot;).css(&#x27;display&#x27;, &#x27;&#x27;);</span><br><span class="line">            $(&quot;.tools-col.hide&quot;).css(&#x27;display&#x27;, &#x27;&#x27;);</span><br><span class="line">            hide = false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>重新生成文件,部署即可看到效果, 可以看看<a href="https://cqh-i.github.io/">我的博客</a>效果</p><p>效果图：<br><img src="/imgs/image-1573143726040.png" alt="file"></p><blockquote><p>引用结束</p></blockquote><h3 id="响应式：手机端隐藏按钮"><a href="#响应式：手机端隐藏按钮" class="headerlink" title="响应式：手机端隐藏按钮"></a>响应式：手机端隐藏按钮</h3><p>手机端(当页面变小时)隐藏按钮：修改文件：<code>themes\new-yilia\source\css\main.0cf68a.css</code>，找到<code>@media screen and (max-width:800px)</code>下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (max-width:800px) &#123;</span><br><span class="line">    #container, body, html &#123;</span><br><span class="line">        height:auto;</span><br><span class="line">        overflow-x:hidden;</span><br><span class="line">        overflow-y:auto</span><br><span class="line">    &#125;</span><br><span class="line">    #mobile-nav &#123;</span><br><span class="line">        display:block</span><br><span class="line">    &#125;</span><br><span class="line">    .body-wrap &#123;</span><br><span class="line">        margin-bottom:0</span><br><span class="line">    &#125;</span><br><span class="line">    .left-col&#123;</span><br><span class="line">        display:none</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>.left-col</code>中添加一个按钮的标签（需要确保上面pc端添加的mymenucontainer样式在本样式下面）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.left-col,.mymenucontainer &#123;</span><br><span class="line">    display:none</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="🐛bug"><a href="#🐛bug" class="headerlink" title="🐛bug"></a>🐛bug</h2><p>有个小问题：在PC端进行测试时，如果先尝试缩放，然后返回再展开，直接测试手机端，就会出现问题：按钮仍然撑开界面；但是如果进到页面直接测试手机端就不会这种问题（或者是在缩放后进行测试也不会影响）。</p><p>因为这个问题好像影响不是很大，就不深入了。</p><p><strong>本文链接：</strong> <a href="https://yansheng836.bitbucket.io/article/31bbdc67.html">https://yansheng836.bitbucket.io/article/31bbdc67.html</a><br><strong>版权声明：</strong> 本作品采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a> 许可协议进行许可。转载请注明出处！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;/imgs/image-1573145229532.png&quot; alt=&quot;file&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击按钮时，缩进左侧边栏，再次点击再弹出来。&lt;/p&gt;
&lt;h2 id=&quot;添加隐藏左边栏目按钮&quot;&gt;&lt;a href=&quot;#添加隐藏左边栏目按钮&quot; class=&quot;headerlink&quot; title=&quot;添加隐藏左边栏目按钮&quot;&gt;&lt;/a&gt;添加隐藏左边栏目按钮&lt;/h2&gt;&lt;p&gt;参考：&lt;a href=&quot;https://cqh-i.github.io/2019/08/07/hexo-yilia%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9A%90%E8%97%8F%E5%B7%A6%E8%BE%B9%E6%A0%8F%E7%9B%AE%E6%8C%89%E9%92%AE/&quot;&gt;添加隐藏左边栏目按钮&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;折腾了一个下午,终于把隐藏左边侧边栏目的效果实现了. 实现了点击按钮隐藏侧边栏, 查找和修改源码实在是太麻烦了.&lt;/p&gt;
&lt;h3 id=&quot;制作按钮样式&quot;&gt;&lt;a href=&quot;#制作按钮样式&quot; class=&quot;headerlink&quot; title=&quot;制作按钮样式&quot;&gt;&lt;/a&gt;制作按钮样式&lt;/h3&gt;&lt;p&gt;先找一款你喜欢的CSS菜单按钮切换,或者自己实现一个,我在网上找到一款比较&lt;a href=&quot;https://c.runoob.com/codedemo/3156&quot;&gt;简单的样式&lt;/a&gt;,稍微做了下修改.&lt;/p&gt;</summary>
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用hexo-neat插件压缩页面静态资源</title>
    <link href="https://github.com/jiangjiawei520/post/bbc1a57.html"/>
    <id>https://github.com/jiangjiawei520/post/bbc1a57.html</id>
    <published>2024-04-18T18:04:33.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章针对下面的几个话题进行了讲解： 为什么要压缩页面静态资源， hexo的压缩静态资源插件， 如何使用hexo-neat。</p><h2 id="为什么要压缩页面静态资源"><a href="#为什么要压缩页面静态资源" class="headerlink" title="为什么要压缩页面静态资源"></a>为什么要压缩页面静态资源</h2><p>对于个人博客来说，优化页面的访问速度是很有必要的，如果打开你的个人站点，加载个首页就要十几秒，页面长时间处于空白状态，想必没什么人能够忍受得了吧。我个人觉得，如果能把页面的加载时间控制在三四秒内，就很不错了。</p><p>那么怎么提高hexo这个静态博客的页面加载速度呢？可以从以下的几个方面去入手：</p><ol><li>将js文件尽可能放置到body的闭合标签之前，因为在加载或者引入js文件时是阻塞式的，如果我们在页面的最开始就引入这些js文件，而这些文件又比较大，会造成页面在渲染时长时间处于白屏状态。</li><li>尽量避免去引用访问速度非常低下的cdn或者图片，可以改用访问速度更快的cdn，或者将难以迅速加载的图片保存到自己的站点目录下，以免在加载图片时耗费了大量的时间，最后还加载不出来。</li><li>对页面的静态资源进行压缩，包括css、js和html等文件。我们自己添加的css和js文件为了可读性，往往会有很多换行和空格，这些对于浏览器来说并没什么卵用，甚至还会降低渲染页面的速度。至于html文件，由于Markdown转成html的bug，会导致页面存在大量的空白，如果你查看下页面的源代码，就会发现这些大量的空白符，十分难看。这也会造成页面渲染的性能问题。</li></ol><h2 id="hexo的压缩静态资源插件"><a href="#hexo的压缩静态资源插件" class="headerlink" title="hexo的压缩静态资源插件"></a>hexo的压缩静态资源插件</h2><p>网上有很多相关的博文，常规的做法是使用<code>gulp</code>来进行压缩，<code>gulp</code>是<code>Node.js</code>下的自动构建工具，通过一列的task执行步骤进行自动流程化处理。</p><p>使用这种方法会比较麻烦，每次压缩时还需要输入额外的命令，比较繁琐，个人不是很喜欢，有兴趣的可以去自己了解下<a href="https://segmentfault.com/a/1190000009544924#articleHeader8">相关的东西</a>。这篇教程里很多详细的说明，里边有说到gulp的使用，绝对的精品文章。</p><p>这里我选择的是由rozbo大佬开发的<code>hexo-neat</code>压缩插件，配置简单，无需额外命令，你只要使用原本的调试三连或者部署三连就可以自动帮你完成静态资源的压缩！</p><span id="more"></span><h2 id="如何使用hexo-neat"><a href="#如何使用hexo-neat" class="headerlink" title="如何使用hexo-neat"></a>如何使用hexo-neat</h2><h3 id="在站点根目录下安装hexo-neat"><a href="#在站点根目录下安装hexo-neat" class="headerlink" title="在站点根目录下安装hexo-neat"></a>在站点根目录下安装hexo-neat</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p><strong>为站点配置文件添加相关配置</strong></p><p>下边是我自己站点的相关配置，直接添加到站点配置文件<code>_config.yml</code>的末尾就可以。可以按照自己的需求去自定义配置，不过有些注意事项，可以参考我后文的踩坑记录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line"># 博文压缩</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.css&#x27;</span><br><span class="line"># 压缩js</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.js&#x27;</span><br><span class="line">    - &#x27;**/jquery.fancybox.pack.js&#x27;</span><br><span class="line">    - &#x27;**/index.js&#x27;</span><br></pre></td></tr></table></figure><h2 id="hexo-neat插件踩坑记录"><a href="#hexo-neat插件踩坑记录" class="headerlink" title="hexo-neat插件踩坑记录"></a>hexo-neat插件踩坑记录</h2><p>由于在使用hexo-neat插件时，可以在命令窗口中看到各个文件的压缩率，于是我就开始捣鼓跳过哪些文件可以让效率更高。在鼓捣了一段时间之后，记录下使用该插件的一些注意事项，避免日后重蹈覆辙，也希望能对各位看官有所帮助。</p><h3 id="跳过压缩文件的正确配置方式"><a href="#跳过压缩文件的正确配置方式" class="headerlink" title="跳过压缩文件的正确配置方式"></a>跳过压缩文件的正确配置方式</h3><p>如果按照官方插件的文档说明来配置<code>exclude</code>，你会发现完全不起作用。这是因为配置的文件路径不对，压缩时找不到你配置的文件，自然也就无法跳过了。你需要给这些文件指定正确的路径，万能的配置方式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.css&#x27;</span><br></pre></td></tr></table></figure><p><strong>压缩html时不要跳过</strong><code>.md</code><strong>文件</strong></p><p><code>.md</code>文件就是我们写文章时的markdown文件，如果跳过压缩<code>.md</code>文件，而你又刚好在文章中使用到了NexT自带的tab标签，那么当hexo在生成静态页面时就会发生解析错误。这会导致使用到了tab标签的页面生成失败而无法访问。</p><p>当初为了找到这个原因花了我两个晚上的时间，简直是夜不能寐。</p><h3 id="压缩html时不要跳过-swig文件"><a href="#压缩html时不要跳过-swig文件" class="headerlink" title="压缩html时不要跳过.swig文件"></a>压缩html时不要跳过<code>.swig</code>文件</h3><p><code>.swig</code>文件是模板引擎文件，简单的说hexo可以通过这些文件来生成对应的页面。如果跳过这些文件，那么你将会发现，你的所有页面完全没有起到压缩的效果，页面源代码里依然存在着一大堆空白。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://github.com/rozbo/hexo-neat">GitHub项目地址</a></li><li><a href="https://segmentfault.com/a/1190000008082288">hexo博客压缩优化</a></li><li><a href="https://segmentfault.com/a/1190000005799759">Hexo-Neat介绍</a></li></ol><hr><p>版权声明：本文为博主<a href="https://blog.csdn.net/lewky_liu">雨临Lewis</a>原创文章，遵循 <a href="http://creativecommons.org/licenses/by-sa/4.0/">CC 4.0 by-sa</a> 版权协议，转载请附上原文出处链接和本声明。</p><p>本文链接：<a href="https://blog.csdn.net/lewky_liu/article/details/82432003">https://blog.csdn.net/lewky_liu&#x2F;article&#x2F;details&#x2F;82432003</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这篇文章针对下面的几个话题进行了讲解： 为什么要压缩页面静态资源， hexo的压缩静态资源插件， 如何使用hexo-neat。&lt;/p&gt;
&lt;h2 id=&quot;为什么要压缩页面静态资源&quot;&gt;&lt;a href=&quot;#为什么要压缩页面静态资源&quot; class=&quot;headerlink&quot; title=&quot;为什么要压缩页面静态资源&quot;&gt;&lt;/a&gt;为什么要压缩页面静态资源&lt;/h2&gt;&lt;p&gt;对于个人博客来说，优化页面的访问速度是很有必要的，如果打开你的个人站点，加载个首页就要十几秒，页面长时间处于空白状态，想必没什么人能够忍受得了吧。我个人觉得，如果能把页面的加载时间控制在三四秒内，就很不错了。&lt;/p&gt;
&lt;p&gt;那么怎么提高hexo这个静态博客的页面加载速度呢？可以从以下的几个方面去入手：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将js文件尽可能放置到body的闭合标签之前，因为在加载或者引入js文件时是阻塞式的，如果我们在页面的最开始就引入这些js文件，而这些文件又比较大，会造成页面在渲染时长时间处于白屏状态。&lt;/li&gt;
&lt;li&gt;尽量避免去引用访问速度非常低下的cdn或者图片，可以改用访问速度更快的cdn，或者将难以迅速加载的图片保存到自己的站点目录下，以免在加载图片时耗费了大量的时间，最后还加载不出来。&lt;/li&gt;
&lt;li&gt;对页面的静态资源进行压缩，包括css、js和html等文件。我们自己添加的css和js文件为了可读性，往往会有很多换行和空格，这些对于浏览器来说并没什么卵用，甚至还会降低渲染页面的速度。至于html文件，由于Markdown转成html的bug，会导致页面存在大量的空白，如果你查看下页面的源代码，就会发现这些大量的空白符，十分难看。这也会造成页面渲染的性能问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;hexo的压缩静态资源插件&quot;&gt;&lt;a href=&quot;#hexo的压缩静态资源插件&quot; class=&quot;headerlink&quot; title=&quot;hexo的压缩静态资源插件&quot;&gt;&lt;/a&gt;hexo的压缩静态资源插件&lt;/h2&gt;&lt;p&gt;网上有很多相关的博文，常规的做法是使用&lt;code&gt;gulp&lt;/code&gt;来进行压缩，&lt;code&gt;gulp&lt;/code&gt;是&lt;code&gt;Node.js&lt;/code&gt;下的自动构建工具，通过一列的task执行步骤进行自动流程化处理。&lt;/p&gt;
&lt;p&gt;使用这种方法会比较麻烦，每次压缩时还需要输入额外的命令，比较繁琐，个人不是很喜欢，有兴趣的可以去自己了解下&lt;a href=&quot;https://segmentfault.com/a/1190000009544924#articleHeader8&quot;&gt;相关的东西&lt;/a&gt;。这篇教程里很多详细的说明，里边有说到gulp的使用，绝对的精品文章。&lt;/p&gt;
&lt;p&gt;这里我选择的是由rozbo大佬开发的&lt;code&gt;hexo-neat&lt;/code&gt;压缩插件，配置简单，无需额外命令，你只要使用原本的调试三连或者部署三连就可以自动帮你完成静态资源的压缩！&lt;/p&gt;</summary>
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo+yilia(new-yilia)使用hexo-generator-search插件集成本地搜索</title>
    <link href="https://github.com/jiangjiawei520/post/613d6936.html"/>
    <id>https://github.com/jiangjiawei520/post/613d6936.html</id>
    <published>2024-04-18T17:43:32.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<p>yilia主题也有集成搜索功能，不过它使用的搜索是基于标题和标签的，有一定的局限性，没有提供全文检索功能。这篇文章介绍的就是集成全文检索和今日诗词。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/imgs/20200411232312.png"></p><p>动图<br><img src="/imgs/hexo-yilia-local-search2.gif"></p><h2 id="1-集成本地搜索"><a href="#1-集成本地搜索" class="headerlink" title="1.集成本地搜索"></a>1.集成本地搜索</h2><p>参考：为 Hexo 博客增加一个站内搜索：<a href="https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/">https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/</a></p><p><img src="/imgs/20200411214252.png"></p><h3 id="原理说明"><a href="#原理说明" class="headerlink" title="原理说明"></a>原理说明</h3><p>使用<code>hexo-generator-search</code>插件为文章生成一个全局的<code>search.xml</code>，里面包含所有文章的内容（可配置）。然后再去这个文件中搜索关键字，以此来找到需要的文章。</p><span id="more"></span><h3 id="1-1安装插件"><a href="#1-1安装插件" class="headerlink" title="1.1安装插件"></a>1.1安装插件</h3><p><a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a></p><p>安装分为两步，首先通过 npm 将插件安装到本地：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>然后在主题new-yilia的（<code>_config.yml</code>）配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: all</span><br></pre></td></tr></table></figure><ul><li><code>path</code>，生成的路径，上述配置后可以通过 <code>/search.xml</code> 访问到文。</li><li><code>field</code>，用来配置全局检索的区间，可以是 <code>post/page/all</code>。</li></ul><p>重新clean、测试，就可以访问：<a href="http://localhost:4000/search.xml">http://localhost:4000/search.xml</a> 了。</p><h3 id="1-2为网页添加搜索栏"><a href="#1-2为网页添加搜索栏" class="headerlink" title="1.2为网页添加搜索栏"></a>1.2为网页添加搜索栏</h3><p>参考了博主的代码：<a href="https://github.com/barretlee/hexo-search-plugin-snippets">https://github.com/barretlee/hexo-search-plugin-snippets</a></p><h4 id="1-2-1添加搜索框"><a href="#1-2-1添加搜索框" class="headerlink" title="1.2.1添加搜索框"></a>1.2.1添加搜索框</h4><p>在<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\layout\layout.ejs</code>的<code>&lt;div id=&quot;wrapper&quot; class=&quot;body-wrap&quot;&gt;</code>上面添加如下代码（同时添加了‘今日诗词’）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.search) &#123; %&gt;</span><br><span class="line">&lt;div class=&quot;page-header&quot; style=&quot;&quot;&gt;</span><br><span class="line">    &lt;%# 今日诗词网址： https://www.jinrishici.com/ %&gt;</span><br><span class="line">    &lt;span&gt;🍻  </span><br><span class="line">        &lt;span id=&quot;jinrishici-sentence&quot; title=&quot;今日诗词&quot;&gt;正在加载今日诗词....&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%# 《集成本地搜索 %&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;/js/search.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;span id=&quot;local-search&quot; class=&quot;local-search local-search-plugin&quot; style=&quot;&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;search&quot; placeholder=&quot;站内搜索&quot; id=&quot;local-search-input&quot; class=&quot;local-search-input-cls&quot; style=&quot;&quot;&gt;</span><br><span class="line">      &lt;i id=&quot;local-search-icon-search&quot; class=&quot;icon&quot; aria-hidden=&quot;true&quot; title=&quot;站内搜索&quot;&gt;🔍&lt;/i&gt;</span><br><span class="line">      &lt;div id=&quot;local-search-result&quot; class=&quot;local-search-result-cls&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        if ($(&#x27;.local-search&#x27;).size()) &#123;</span><br><span class="line">          $.getScript(&#x27;/js/search.js&#x27;, function() &#123;</span><br><span class="line">            searchFunc(&quot;/search.xml&quot;, &#x27;local-search-input&#x27;, &#x27;local-search-result&#x27;);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;%# 集成本地搜索》 %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">...上面添加，这段和注释去掉</span><br><span class="line">  &lt;div id=&quot;wrapper&quot; class=&quot;body-wrap&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-2添加js脚本"><a href="#1-2-2添加js脚本" class="headerlink" title="1.2.2添加js脚本"></a>1.2.2添加js脚本</h4><p>新建文件：<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\js\search.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">// A local search script with the help of hexo-generator-search</span><br><span class="line">// Copyright (C) 2015 </span><br><span class="line">// Joseph Pan &lt;http://github.com/wzpan&gt;</span><br><span class="line">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span><br><span class="line">// This library is free software; you can redistribute it and/or modify</span><br><span class="line">// it under the terms of the GNU Lesser General Public License as</span><br><span class="line">// published by the Free Software Foundation; either version 2.1 of the</span><br><span class="line">// License, or (at your option) any later version.</span><br><span class="line">// </span><br><span class="line">// This library is distributed in the hope that it will be useful, but</span><br><span class="line">// WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span><br><span class="line">// Lesser General Public License for more details.</span><br><span class="line">// </span><br><span class="line">// You should have received a copy of the GNU Lesser General Public</span><br><span class="line">// License along with this library; if not, write to the Free Software</span><br><span class="line">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span><br><span class="line">// 02110-1301 USA</span><br><span class="line">// </span><br><span class="line"></span><br><span class="line">var searchFunc = function (path, search_id, content_id) &#123;</span><br><span class="line">    &#x27;use strict&#x27;;</span><br><span class="line">    var BTN = &quot;&lt;i id=&#x27;local-search-close&#x27;&gt;x&lt;/i&gt;&quot;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: path,</span><br><span class="line">        dataType: &quot;xml&quot;,</span><br><span class="line">        success: function (xmlResponse) &#123;</span><br><span class="line">            // get the contents from search data</span><br><span class="line">            var datas = $(&quot;entry&quot;, xmlResponse).map(function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    title: $(&quot;title&quot;, this).text(),</span><br><span class="line">                    content: $(&quot;content&quot;, this).text(),</span><br><span class="line">                    url: $(&quot;url&quot;, this).text()</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;).get();</span><br><span class="line"></span><br><span class="line">            var $input = document.getElementById(search_id);</span><br><span class="line">            var $resultContent = document.getElementById(content_id);</span><br><span class="line"></span><br><span class="line">            $input.addEventListener(&#x27;input&#x27;, function () &#123;</span><br><span class="line">                var str = &#x27;&lt;ul class=\&quot;search-result-list\&quot;&gt;&#x27;;</span><br><span class="line">                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);</span><br><span class="line">                $resultContent.innerHTML = &quot;&quot;;</span><br><span class="line">                if (this.value.trim().length &lt;= 0) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                // perform local searching</span><br><span class="line">                datas.forEach(function (data) &#123;</span><br><span class="line">                    var isMatch = true;</span><br><span class="line">                    var content_index = [];</span><br><span class="line">                    if (!data.title || data.title.trim() === &#x27;&#x27;) &#123;</span><br><span class="line">                        data.title = &quot;Untitled&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    var data_title = data.title.trim().toLowerCase();</span><br><span class="line">                    var data_content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, &quot;&quot;).toLowerCase();</span><br><span class="line">                    var data_url = data.url;</span><br><span class="line">                    var index_title = -1;</span><br><span class="line">                    var index_content = -1;</span><br><span class="line">                    var first_occur = -1;</span><br><span class="line">                    // only match artiles with not empty contents</span><br><span class="line">                    if (data_content !== &#x27;&#x27;) &#123;</span><br><span class="line">                        keywords.forEach(function (keyword, i) &#123;</span><br><span class="line">                            index_title = data_title.indexOf(keyword);</span><br><span class="line">                            index_content = data_content.indexOf(keyword);</span><br><span class="line"></span><br><span class="line">                            if (index_title &lt; 0 &amp;&amp; index_content &lt; 0) &#123;</span><br><span class="line">                                isMatch = false;</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                if (index_content &lt; 0) &#123;</span><br><span class="line">                                    index_content = 0;</span><br><span class="line">                                &#125;</span><br><span class="line">                                if (i == 0) &#123;</span><br><span class="line">                                    first_occur = index_content;</span><br><span class="line">                                &#125;</span><br><span class="line">                                // content_index.push(&#123;index_content:index_content, keyword_len:keyword_len&#125;);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        isMatch = false;</span><br><span class="line">                    &#125;</span><br><span class="line">                    // show search results</span><br><span class="line">                    if (isMatch) &#123;</span><br><span class="line">                        str += &quot;&lt;li&gt;&lt;a href=&#x27;&quot; + data_url +</span><br><span class="line">                            &quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot; + data_title + &quot;&lt;/a&gt;&quot;;</span><br><span class="line">                        var content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, &quot;&quot;);</span><br><span class="line">                        if (first_occur &gt;= 0) &#123;</span><br><span class="line">                            // cut out 100 characters</span><br><span class="line">                            var start = first_occur - 20;</span><br><span class="line">                            var end = first_occur + 80;</span><br><span class="line"></span><br><span class="line">                            if (start &lt; 0) &#123;</span><br><span class="line">                                start = 0;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            if (start == 0) &#123;</span><br><span class="line">                                end = 100;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            if (end &gt; content.length) &#123;</span><br><span class="line">                                end = content.length;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            var match_content = content.substr(start, end);</span><br><span class="line"></span><br><span class="line">                            // highlight all keywords</span><br><span class="line">                            keywords.forEach(function (keyword) &#123;</span><br><span class="line">                                var regS = new RegExp(keyword, &quot;gi&quot;);</span><br><span class="line">                                match_content = match_content.replace(regS,</span><br><span class="line">                                    &quot;&lt;em class=\&quot;search-keyword\&quot;&gt;&quot; +</span><br><span class="line">                                    keyword + &quot;&lt;/em&gt;&quot;);</span><br><span class="line">                            &#125;);</span><br><span class="line"></span><br><span class="line">                            str += &quot;&lt;p class=\&quot;search-result\&quot;&gt;&quot; + match_content +</span><br><span class="line">                                &quot;...&lt;/p&gt;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                        str += &quot;&lt;/li&gt;&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                str += &quot;&lt;/ul&gt;&quot;;</span><br><span class="line">                if (str.indexOf(&#x27;&lt;li&gt;&#x27;) === -1) &#123;</span><br><span class="line">                    return $resultContent.innerHTML = BTN +</span><br><span class="line">                        &quot;&lt;ul&gt;&lt;span class=&#x27;local-search-empty&#x27;&gt;没有找到内容，更换下搜索词试试吧~&lt;span&gt;&lt;/ul&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                $resultContent.innerHTML = BTN + str;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    $(document).on(&#x27;click&#x27;, &#x27;#local-search-close&#x27;, function () &#123;</span><br><span class="line">        $(&#x27;#local-search-input&#x27;).val(&#x27;&#x27;);</span><br><span class="line">        $(&#x27;#local-search-result&#x27;).html(&#x27;&#x27;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(document).on(&#x27;focus&#x27;, &#x27;#local-search&#x27;, function () &#123;</span><br><span class="line">        $(&#x27;#local-search-icon-search&#x27;).html(&#x27;❌&#x27;);</span><br><span class="line">        $(&#x27;#local-search-icon-search&#x27;).attr(&#x27;id&#x27;, &#x27;local-search-icon-close&#x27;);</span><br><span class="line">        //console.log(&quot;66666&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(document).on(&#x27;click&#x27;, &#x27;#local-search-icon-close&#x27;, function () &#123;</span><br><span class="line">        $(&#x27;#local-search-input&#x27;).val(&#x27;&#x27;);</span><br><span class="line">        $(&#x27;#local-search-result&#x27;).html(&#x27;&#x27;);</span><br><span class="line">        $(&#x27;#local-search-icon-close&#x27;).html(&#x27;🔍&#x27;);</span><br><span class="line">        $(&#x27;#local-search-icon-close&#x27;).attr(&#x27;id&#x27;, &#x27;local-search-icon-search&#x27;);</span><br><span class="line">        //console.log(&quot;1111&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-3添加样式文件"><a href="#1-2-3添加样式文件" class="headerlink" title="1.2.3添加样式文件"></a>1.2.3添加样式文件</h4><p>1.新建：<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\css\search.css</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">.local-search &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    text-align: left;</span><br><span class="line">    display:inline-block;</span><br><span class="line">    margin-bottom: 0px;</span><br><span class="line">    right:10%;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-input-cls &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    /* margin: 10px 0; */</span><br><span class="line">    padding: 8px 12px;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    border: 2px solid #5ad1ed;</span><br><span class="line">    color: #666;</span><br><span class="line">    font-size: 14px</span><br><span class="line">&#125;</span><br><span class="line">.local-search-input-cls::-webkit-input-placeholder &#123;</span><br><span class="line">    color: #2d2626;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-input-cls::-moz-input-placeholder &#123;</span><br><span class="line">    color: #2d2626;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-input-cls::-ms-input-placeholder &#123;</span><br><span class="line">    color: #2d2626;</span><br><span class="line">&#125;</span><br><span class="line">#local-search-close &#123;</span><br><span class="line">    content:&#x27;x&#x27;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 10px;</span><br><span class="line">    top: 10px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    color: #888;</span><br><span class="line">    border-radius: 100%;</span><br><span class="line">    line-height: 16px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    font-family: consolas;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 20px;</span><br><span class="line">    height: 20px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    font-style: normal;</span><br><span class="line">    font-weight: 400;</span><br><span class="line">    transform: rotateZ(0);</span><br><span class="line">    transition: all .3s</span><br><span class="line">&#125;</span><br><span class="line">#local-search-close:hover &#123;</span><br><span class="line">    border-color: #666;</span><br><span class="line">    color: #222;</span><br><span class="line">    transform: rotateZ(180deg);</span><br><span class="line">    transition: all .3s</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    z-index: 99;</span><br><span class="line">    width: 400px;</span><br><span class="line">    /* top: 50px; */</span><br><span class="line">    right: -16px;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls .local-search-empty &#123;</span><br><span class="line">    color: #888;</span><br><span class="line">    line-height: 44px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    display: block;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    font-weight: 400</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul &#123;</span><br><span class="line">    width: 360px;</span><br><span class="line">    max-height: 450px;</span><br><span class="line">    min-height: 0;</span><br><span class="line">    height: auto;</span><br><span class="line">    overflow-y: auto;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    padding: 10px 20px;</span><br><span class="line">    background: rgba(255, 255, 255, 0.9);</span><br><span class="line">    box-shadow: 3px 4px 10px #7dc3d8;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li &#123;</span><br><span class="line">    text-align: left;</span><br><span class="line">    border-bottom: 1px solid #bdb7b7;</span><br><span class="line">    padding-bottom: 20px;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    font-weight: 400</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li:last-child &#123;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    margin-bottom: 0</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li a &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    text-decoration:none;</span><br><span class="line">    transition: all .3s</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li a:hover &#123;</span><br><span class="line">    text-decoration:underline;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li p &#123;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    max-height: 124px;</span><br><span class="line">    overflow: hidden</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul li em.search-keyword &#123;</span><br><span class="line">    color: #e58c7c;</span><br><span class="line">    font-weight:bold;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-plugin .local-search-input-cls &#123;</span><br><span class="line">    opacity: .6;</span><br><span class="line">    width: 160px;</span><br><span class="line">    transition: all .3s</span><br><span class="line">&#125;</span><br><span class="line">.local-search-plugin .local-search-input-cls:hover &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    width: 200px;</span><br><span class="line">    transition: all .3s</span><br><span class="line">&#125;</span><br><span class="line">.local-search-plugin .icon &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    left: -30px;</span><br><span class="line">    color: #999;</span><br><span class="line">    cursor: pointer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.将上面的样式引入页面中，修改<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\layout\_partial\css.ejs</code>，再后面添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;%=config.root%&gt;css/search.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>3.修改<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\css\main.0cf68a.css</code>最后面添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/* 页面头部：包含‘今日诗词’，站内搜索 */</span><br><span class="line">.page-header &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    border: 1px solid #fff;</span><br><span class="line">    margin: 5px 30px 4px 30px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    -webkit-transition: all 0.2s ease-in;</span><br><span class="line">    height:45px;</span><br><span class="line">    font-family: &#x27;微软雅黑&#x27;;</span><br><span class="line">    border-radius:5px;</span><br><span class="line">    padding-left:10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 今日诗词 */</span><br><span class="line">#jinrishici-sentence&#123;</span><br><span class="line">  color:#27d7a1;</span><br><span class="line">  padding-left: 10px;</span><br><span class="line">  line-height: 45px;</span><br><span class="line">  font-size: 15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果图2"><a href="#效果图2" class="headerlink" title="效果图2"></a>效果图2</h3><p>详见文章<a href="#">开头</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>hexo+yilia集成本地搜索：<a href="https://yansheng836.github.io/article/915f21c1.html">https://yansheng836.github.io/article/915f21c1.html</a></li><li>今日诗词安装：<a href="https://www.jinrishici.com/doc/#json-fast-easy">https://www.jinrishici.com/doc/#json-fast-easy</a></li><li>为 Hexo 博客增加一个站内搜索：<a href="https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/">https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/</a></li><li>搜索栏样式参考：<a href="http://liangtao.site/">http://liangtao.site/</a></li><li>search.js部分参考：<a href="https://github.com/Kiritor/hexo-theme-yilia-l/blob/8f42e032e14a9746682dc91a0382a0576687a1f0/layout/_partial/post/search.ejs">https://github.com/Kiritor/hexo-theme-yilia-l/blob/8f42e032e14a9746682dc91a0382a0576687a1f0/layout/_partial&#x2F;post&#x2F;search.ejs</a></li><li>另一种配置方式：<a href="https://github.com/Kiritor/hexo-theme-yilia-l/search?q=wrapStyle&unscoped_q=wrapStyle">https://github.com/Kiritor/hexo-theme-yilia-l/search?q=wrapStyle&unscoped_q&#x3D;wrapStyle</a></li><li>可复制的表情包：<a href="http://www.fhdq.net/emoji/emojifuhao.html">http://www.fhdq.net/emoji/emojifuhao.html</a></li></ul><h2 id="2-更近一步"><a href="#2-更近一步" class="headerlink" title="2.更近一步"></a>2.更近一步</h2><h3 id="适配手机端"><a href="#适配手机端" class="headerlink" title="适配手机端"></a>适配手机端</h3><p><code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\css\main.0cf68a.css</code>，新增下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (max-width:800px) &#123;</span><br><span class="line">.page-header &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    border: 1px solid #fff;</span><br><span class="line">    /* margin: 5px 30px 4px 30px; */</span><br><span class="line">    background: #fff;</span><br><span class="line">    -webkit-transition: all 0.2s ease-in;</span><br><span class="line">    height: 45px;</span><br><span class="line">    font-family: &#x27;微软雅黑&#x27;;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    padding-left: 2px;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\css\search.css</code>，新增</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/* 手机端 */</span><br><span class="line">@media screen and (max-width:800px) &#123;</span><br><span class="line">.local-search &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    text-align: left;</span><br><span class="line">    display:inline-block;</span><br><span class="line">    margin-bottom: 0px;</span><br><span class="line">    right: -5%;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-plugin .local-search-input-cls &#123;</span><br><span class="line">    opacity: .6;</span><br><span class="line">    width: 100px;</span><br><span class="line">    transition: all .3s;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls &#123;</span><br><span class="line">    right: 2px;</span><br><span class="line">&#125;</span><br><span class="line">.local-search-result-cls ul &#123;</span><br><span class="line">    width: 360px;</span><br><span class="line">    max-height: 400px;</span><br><span class="line">    min-height: 0;</span><br><span class="line">    height: auto;</span><br><span class="line">    overflow-y: auto;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    padding: 10px 20px;</span><br><span class="line">    background: rgba(255, 255, 255, 0.9);</span><br><span class="line">    box-shadow: 3px 4px 10px #7dc3d8;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="手机端取消本地搜索功能"><a href="#手机端取消本地搜索功能" class="headerlink" title="手机端取消本地搜索功能"></a>手机端取消本地搜索功能</h3><p>因为考虑到手机端界面比较小，这里取消搜索功能。</p><p><code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\layout\layout.ejs</code>，在layout.ejs的最后的body前新增</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    // 移动设备侦测</span><br><span class="line">    var isMobile = &#123;</span><br><span class="line">      Android: function () &#123;</span><br><span class="line">        return navigator.userAgent.match(/Android/i);</span><br><span class="line">      &#125;,</span><br><span class="line">      BlackBerry: function () &#123;</span><br><span class="line">        return navigator.userAgent.match(/BlackBerry/i);</span><br><span class="line">      &#125;,</span><br><span class="line">      iOS: function () &#123;</span><br><span class="line">        return navigator.userAgent.match(/iPhone|iPad|iPod/i);</span><br><span class="line">      &#125;,</span><br><span class="line">      Opera: function () &#123;</span><br><span class="line">        return navigator.userAgent.match(/Opera Mini/i);</span><br><span class="line">      &#125;,</span><br><span class="line">      Windows: function () &#123;</span><br><span class="line">        return navigator.userAgent.match(/IEMobile/i);</span><br><span class="line">      &#125;,</span><br><span class="line">      any: function () &#123;</span><br><span class="line">        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    if(isMobile.any())&#123;</span><br><span class="line">        //手机端取消搜索功能</span><br><span class="line">        $(&#x27;.local-search&#x27;).css(&quot;display&quot;,&quot;none&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($(&#x27;.local-search&#x27;).size() &amp;&amp; !isMobile.any()) &#123;</span><br><span class="line">      $.getScript(&#x27;/js/search.js&#x27;, function() &#123;</span><br><span class="line">        searchFunc(&quot;/search.xml&quot;, &#x27;local-search-input&#x27;, &#x27;local-search-result&#x27;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>或者直接用css隐藏搜索框<code>E:\OneDrive - shjd\github\person_blog_new\themes\new-yilia\source\css\search.css</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* 手机端 */</span><br><span class="line">@media screen and (max-width:800px) &#123;</span><br><span class="line">    .local-search &#123;</span><br><span class="line">        display:none;</span><br><span class="line">        /* right: -5%; */</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p>测试时，修改文件名后，可能不能立即将文章加入索引，即不能进行搜索。</p><p>停止测试，重新hexo s即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;yilia主题也有集成搜索功能，不过它使用的搜索是基于标题和标签的，有一定的局限性，没有提供全文检索功能。这篇文章介绍的就是集成全文检索和今日诗词。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/20200411232312.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;动图&lt;br&gt;&lt;img src=&quot;/imgs/hexo-yilia-local-search2.gif&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-集成本地搜索&quot;&gt;&lt;a href=&quot;#1-集成本地搜索&quot; class=&quot;headerlink&quot; title=&quot;1.集成本地搜索&quot;&gt;&lt;/a&gt;1.集成本地搜索&lt;/h2&gt;&lt;p&gt;参考：为 Hexo 博客增加一个站内搜索：&lt;a href=&quot;https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/&quot;&gt;https://www.barretlee.com/blog/2017/06/04/hexo-search-insite/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/20200411214252.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;原理说明&quot;&gt;&lt;a href=&quot;#原理说明&quot; class=&quot;headerlink&quot; title=&quot;原理说明&quot;&gt;&lt;/a&gt;原理说明&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;hexo-generator-search&lt;/code&gt;插件为文章生成一个全局的&lt;code&gt;search.xml&lt;/code&gt;，里面包含所有文章的内容（可配置）。然后再去这个文件中搜索关键字，以此来找到需要的文章。&lt;/p&gt;</summary>
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MobaXterm登录堡垒机/跳板机直接使用Linux/Windows服务器</title>
    <link href="https://github.com/jiangjiawei520/post/81cbb71e.html"/>
    <id>https://github.com/jiangjiawei520/post/81cbb71e.html</id>
    <published>2024-04-16T09:16:00.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>xshell很好用，但是没找到正式版本，公司不允许使用，看了网上的一些资料，发现MobaXterm是比较好的替代产品,，使用MobaXterm登录堡垒机&#x2F;跳板机直接使用Linux服务器。</p><h2 id="安装mobaxterm"><a href="#安装mobaxterm" class="headerlink" title="安装mobaxterm"></a>安装mobaxterm</h2><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>v21.0</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>官网的免费版本：<br><a href="https://mobaxterm.mobatek.net/download-home-edition.html">https://mobaxterm.mobatek.net/download-home-edition.html</a><br>直接portable edition就可以了。</p><p><img src="/imgs/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0l2X3p6eQ==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p><span id="more"></span><h2 id="登录堡垒机-跳板机Linux服务器"><a href="#登录堡垒机-跳板机Linux服务器" class="headerlink" title="登录堡垒机&#x2F;跳板机Linux服务器"></a>登录堡垒机&#x2F;跳板机Linux服务器</h2><h3 id="登录方法"><a href="#登录方法" class="headerlink" title="登录方法"></a>登录方法</h3><h4 id="输入自己的信息"><a href="#输入自己的信息" class="headerlink" title="输入自己的信息"></a>输入自己的信息</h4><p>session–&gt;SSH，新增《创建或者管理凭据》<img src="/imgs/image-20240416092314200.png" alt="image-20240416092314200"></p><p><img src="/imgs/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0l2X3p6eQ==,size_16,color_FFFFFF,t_70-1713230457868-3.png" alt="在这里插入图片描述"></p><p>新建凭据</p><p>点击新建new，创建凭据；<br>name：随意填<br>username：就是你的用户名（你在公司的账户，一般是姓名拼音，大公司是拼音后还有个序号）<br>password：就是你用户名对应的密码；</p><p><img src="/imgs/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0l2X3p6eQ==,size_16,color_FFFFFF,t_70-1713230507195-10.png" alt="在这里插入图片描述"></p><p><img src="/imgs/image-20240416092428250.png" alt="image-20240416092428250"></p><p>点击最下方的确认按钮，保存</p><h3 id="登录堡垒机-跳板机"><a href="#登录堡垒机-跳板机" class="headerlink" title="登录堡垒机&#x2F;跳板机"></a>登录堡垒机&#x2F;跳板机</h3><p>登录口令是这个<br>ssh -p XX username@ip</p><p>所以下图的<br>remote host ：你的堡垒机ip<br>specify username: 此处会出现上一步你填的name，勾选，登录的时候会自动替换成你上面写的username。<br>port：需要注意的是这个端口号记得改，我发现我的堡垒机登录的端口号是80，之前没改，所以一直没成功。（linux端口正常是22）</p><p><img src="/imgs/image-20240416092633347.png" alt="image-20240416092633347"></p><p>直接点击ok<br>一部分小伙伴会直接弹出窗口，让你输入二次验证password（密码），那么直接将堡垒机的二次密码输入即可；</p><h4 id="选择服务器"><a href="#选择服务器" class="headerlink" title="选择服务器"></a>选择服务器</h4><p>​二次密码验证后，将会需要选择需要登陆的服务器。</p><p>二次验证：</p><p><img src="/imgs/image-20240416095323455.png" alt="image-20240416095323455"></p><p>服务器选择，然后输入服务器的账号密码，即可正常使用，复制粘贴正常。（只会显示linux机器）</p><p><img src="/imgs/image-20240416095439359.png" alt="image-20240416095439359"></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>复制了堡垒机的密码，你看看ctrl v能不能用，不能用的话，直接鼠标右键一下，密码就可以粘贴上来了，因为密码不显示，所以这块不知道自己粘贴上了没有，大家多试几次即可</p><h2 id="登录堡垒机-跳板机Windows服务器"><a href="#登录堡垒机-跳板机Windows服务器" class="headerlink" title="登录堡垒机&#x2F;跳板机Windows服务器"></a>登录堡垒机&#x2F;跳板机Windows服务器</h2><p>​</p><p>session–&gt;SSH，新增《创建或者管理凭据》<img src="/imgs/image-20240416092314200.png" alt="image-20240416092314200"></p><p><img src="/imgs/image-20240416094738825.png" alt="image-20240416094738825"></p><p>新建凭据</p><p>点击新建new，创建凭据；<br>name：随意填<br>username：就是你的用户名（你在公司的账户，一般是姓名拼音，大公司是拼音后还有个序号）<br>password：就是你用户名对应的密码；</p><p><img src="/imgs/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0l2X3p6eQ==,size_16,color_FFFFFF,t_70-1713230507195-10.png" alt="在这里插入图片描述"></p><p><img src="/imgs/image-20240416092428250.png" alt="image-20240416092428250"></p><p>点击最下方的确认按钮，保存</p><h3 id="登录堡垒机-跳板机-1"><a href="#登录堡垒机-跳板机-1" class="headerlink" title="登录堡垒机&#x2F;跳板机"></a>登录堡垒机&#x2F;跳板机</h3><p>remote host ：你的堡垒机ip<br>specify username: 此处会出现上一步你填的name，勾选，登录的时候会自动替换成你上面写的username。<br>port：需要注意的是这个端口号记得改,使用Windows的远程端口，我发现我的堡垒机登录的端口号是63333，之前没改，所以一直没成功。（Windows端口正常是63333或者默认的3389）</p><p><img src="/imgs/image-20240416094827124.png" alt="image-20240416094827124"></p><p>直接点击ok<br>一部分小伙伴会直接弹出窗口，让你输入二次验证password（密码），那么直接将堡垒机的二次密码输入即可；</p><h4 id="选择服务器-1"><a href="#选择服务器-1" class="headerlink" title="选择服务器"></a>选择服务器</h4><p>​二次密码验证后，将会需要选择需要登陆的服务器。</p><p>二次验证：</p><p><img src="/imgs/image-20240416095102158.png" alt="image-20240416095102158"></p><p>服务器选择，然后输入服务器的账号密码，即可正常使用，复制粘贴正常。（只会显示Windows机器）</p><p><img src="/imgs/image-20240416095210062.png" alt="image-20240416095210062"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;xshell很好用，但是没找到正式版本，公司不允许使用，看了网上的一些资料，发现MobaXterm是比较好的替代产品,，使用MobaXterm登录堡垒机&amp;#x2F;跳板机直接使用Linux服务器。&lt;/p&gt;
&lt;h2 id=&quot;安装mobaxterm&quot;&gt;&lt;a href=&quot;#安装mobaxterm&quot; class=&quot;headerlink&quot; title=&quot;安装mobaxterm&quot;&gt;&lt;/a&gt;安装mobaxterm&lt;/h2&gt;&lt;h3 id=&quot;版本&quot;&gt;&lt;a href=&quot;#版本&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本&lt;/h3&gt;&lt;p&gt;v21.0&lt;/p&gt;
&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h3&gt;&lt;p&gt;官网的免费版本：&lt;br&gt;&lt;a href=&quot;https://mobaxterm.mobatek.net/download-home-edition.html&quot;&gt;https://mobaxterm.mobatek.net/download-home-edition.html&lt;/a&gt;&lt;br&gt;直接portable edition就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0l2X3p6eQ==,size_16,color_FFFFFF,t_70.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://github.com/jiangjiawei520/categories/linux/"/>
    
    <category term="shell" scheme="https://github.com/jiangjiawei520/categories/linux/shell/"/>
    
    
    <category term="MobaXterm" scheme="https://github.com/jiangjiawei520/tags/MobaXterm/"/>
    
    <category term="shell" scheme="https://github.com/jiangjiawei520/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用qshell一键部署静态博客到七牛云</title>
    <link href="https://github.com/jiangjiawei520/post/1a485dfe.html"/>
    <id>https://github.com/jiangjiawei520/post/1a485dfe.html</id>
    <published>2024-04-15T18:27:06.000Z</published>
    <updated>2025-09-17T02:01:02.278Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载qshell下载"><a href="#下载qshell下载" class="headerlink" title="下载qshell下载"></a>下载qshell下载</h3><p><a href="https://github.com/qiniu/qshell/releases/download/v2.13.0/qshell-v2.13.0-windows-386.zip">https://github.com/qiniu/qshell/releases/download/v2.13.0/qshell-v2.13.0-windows-386.zip</a></p><h3 id="配置qshell环境变量"><a href="#配置qshell环境变量" class="headerlink" title="配置qshell环境变量"></a>配置qshell环境变量</h3><h3 id="添加account"><a href="#添加account" class="headerlink" title="添加account"></a>添加account</h3><p>执行qshell account <Your AccessKey> <Your SecretKey> <Your Name> </p><h3 id="Hexo项目的根目录下创建upload-conf文件"><a href="#Hexo项目的根目录下创建upload-conf文件" class="headerlink" title="Hexo项目的根目录下创建upload.conf文件"></a>Hexo项目的根目录下创建upload.conf文件</h3><p>配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">// 这个地址是根目录地址，不可使用相对路径</span><br><span class="line">&quot;src_dir&quot;: &quot;E:\\xx\\github\\person_blog_new\\public&quot;,</span><br><span class="line">// 储存空间名称</span><br><span class="line">&quot;bucket&quot;: &quot;person-blog-new-hw&quot;,</span><br><span class="line">// 是否覆盖</span><br><span class="line">&quot;overwrite&quot; : true,</span><br><span class="line">// 检查新增文件</span><br><span class="line">&quot;rescan_local&quot; : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传 qshell qupload upload.conf</p><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><p>打开Hexo下的package.json，npm run publish 就可实现一键打包部署到七牛云</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &quot;scripts&quot;: &#123;</span><br><span class="line">&quot;publish&quot;: &quot;hexo generate &amp;&amp; qshell qupload upload.conf&quot;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://juejin.cn/post/6844903983857811469">https://juejin.cn/post/6844903983857811469</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载qshell下载&quot;&gt;&lt;a href=&quot;#下载qshell下载&quot; class=&quot;headerlink&quot; title=&quot;下载qshell下载&quot;&gt;&lt;/a&gt;下载qshell下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/qiniu/qshe</summary>
      
    
    
    
    <category term="博客" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/categories/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="hexo" scheme="https://github.com/jiangjiawei520/tags/hexo/"/>
    
    <category term="七牛云" scheme="https://github.com/jiangjiawei520/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
  </entry>
  
</feed>
